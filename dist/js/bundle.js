/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/path-browserify/index.js":
/*!***********************************************!*\
  !*** ./node_modules/path-browserify/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/path-browserify/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/querystring-es3/decode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/querystring-es3/decode.js?");

/***/ }),

/***/ "./node_modules/querystring-es3/encode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n\n//# sourceURL=webpack:///./node_modules/querystring-es3/encode.js?");

/***/ }),

/***/ "./node_modules/querystring-es3/index.js":
/*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.decode = exports.parse = __webpack_require__(/*! ./decode */ \"./node_modules/querystring-es3/decode.js\");\nexports.encode = exports.stringify = __webpack_require__(/*! ./encode */ \"./node_modules/querystring-es3/encode.js\");\n\n\n//# sourceURL=webpack:///./node_modules/querystring-es3/index.js?");

/***/ }),

/***/ "./src/directories/enemies/enemies.js":
/*!********************************************!*\
  !*** ./src/directories/enemies/enemies.js ***!
  \********************************************/
/*! exports provided: enemiesDirectory, modeDirectory, aiDirectory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enemiesDirectory\", function() { return enemiesDirectory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"modeDirectory\", function() { return modeDirectory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"aiDirectory\", function() { return aiDirectory; });\n/* harmony import */ var _js_models_skills__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../js/models/skills */ \"./src/js/models/skills.js\");\n/* harmony import */ var _js_models_combat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../js/models/combat */ \"./src/js/models/combat.js\");\n/* harmony import */ var _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../js/views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _js_models_baseModel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../js/models/baseModel */ \"./src/js/models/baseModel.js\");\n// -- IMPORTS -- \\\\\n\n\n\n\n//\n\n\n// -- ENEMIES -- \\\\\nconst enemiesDirectory = {\n\n    // TUTORIAL EXCLUSIVE \\\\\n    young_wolf: {\n\n        stats: {\n            base_level: 2,\n            max_health: 75,\n            atk: 30,\n            def: 30,\n            matk: 30,\n            mdef: 30,\n            speed: 16,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 10,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                }\n            },\n            ai: 'young_wolf',\n            mode: 'young_wolf',\n            skills: [\"attack\", \"boost\"],\n            name: 'Young Wolf',\n            baseLevel: 2,\n            exp: 150,\n            gold: 20,\n            drops: [],\n            desc: \"A wolf that, although is of moderate size, is clearly inexperienced in battle. Appears to boost whenever\" +\n            \" possible. Given it's speed, it appears that if you were to increase your speed with a skill, you would be\" +\n            \" able to double this enemy...\"\n        }\n    },\n\n    dreadful_wolf: {\n\n        stats: {\n            base_level: 3,\n            max_health: 120,\n            atk: 30,\n            def: 30,\n            matk: 30,\n            mdef: 30,\n            speed: 55,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 5,\n            resistance: 25,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 90,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 150\n                }\n            },\n            ai: 'dreadful_wolf',\n            mode: 'dreadful_wolf',\n            skills: [\"attack\"],\n            name: 'Dreadful Wolf',\n            exp: 250,\n            gold: 20,\n            drops: [],\n            desc: \"A wolf whose hide seems to have been afflicted with some kind of curse. It's fur is long and dark, with\" +\n            \" the occasional purple pigment. It writhes as though each individual fibre has a life of its own.\" +\n            \" You manage to glean the info that this enemy will attempt to use a powerful debuff every 3rd turn\" +\n            \", and will boost whenever possible.\"\n        }\n    },\n\n    charon: {\n\n        stats: {\n            base_level: 5,\n            max_health: 225,\n            atk: 30,\n            def: 30,\n            matk: 30,\n            mdef: 30,\n            speed: 55,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 5,\n            resistance: 0,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 200,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 80,\n                    fire: 50,\n                    water: 50,\n                    earth: 50,\n                    wind: 50,\n                    thunder: 50,\n                    dark: 50,\n                    light: 100\n                }\n            },\n            ai: 'charon',\n            mode: 'charon',\n            skills: [\"attack\"],\n            name: '???',\n            exp: 500,\n            gold: 20,\n            drops: [],\n            desc: \"There's no way this thing is actually human. Even though it has the stature and body parts of one,\" +\n            \" it's skin is charcoal black and littered with bright red patterns. It is 'wearing' brown, raglike clothing\" +\n            \" that succeeds only in covering his torso and a small amount of his legs. It's eyes are black, with white\" +\n            \" irises and red 'strain-marks' dirtying the cornea. Somehow, you glean that he will boost whenever available\" +\n            \" and that his malice peaks every 4th turn.\"\n        }\n    },\n\n    young_bear: {\n\n        stats: {\n            base_level: 3,\n            max_health: 100,\n            atk: 40,\n            def: 25,\n            matk: 20,\n            mdef: 20,\n            speed: 15,\n            crit_chance: 0.5,\n            crit_damage: 1.25,\n            effectiveness: 0,\n            resistance: 30,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 150,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 110,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 120,\n                    water: 90,\n                    earth: 75,\n                    wind: 105,\n                    thunder: 105,\n                    dark: 100,\n                    light: 25\n                }\n            },\n            ai: 'young_bear',\n            mode: 'young_bear',\n            skills: [\"attack\"],\n            name: 'Young Bear',\n            baseLevel: 3,\n            exp: 175,\n            gold: 20,\n            drops: [[\"stamina_vial\", 500, 1, 2]],\n            desc: \"A young brown bear. Clearly inexperienced but still old enough to put up a fight. Seems like it can't boost, and that it will use a powerful attack every 2nd turn.\"\n        }\n    },\n\n    // ------\n\n    slime: {\n\n        stats: {\n            base_level: 1,\n            max_health: 40,\n            atk: 30,\n            def: 30,\n            matk: 30,\n            mdef: 30,\n            speed: 16,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 0,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 50,\n                    water: 50,\n                    earth: 50,\n                    wind: 50,\n                    thunder: 150,\n                    dark: 75,\n                    light: 75\n                }\n            },\n            ai: 'slime',\n            mode: 'slime',\n            skills: [\"splash\", \"boost\"],\n            name: 'Slime',\n            baseLevel: 1,\n            exp: 100,\n            gold: 10,\n            drops: [[\"slime_ball\", 1000, 2, 5], [\"slime_ball\", 500, 2, 5]],\n            desc: \"A blue slime. From their movement and feel one would assume they are amorphous but they seem to always\" +\n            \" settle upon the same semispherical shape. They seem sentient, however not very intelligent - as though\" +\n            \" unlikely to have any particular strategy.\"\n        }\n    },\n\n    lesser_teravalum: { \n\n        stats: {\n            base_level: 2,\n            max_health: 35,\n            atk: 0,\n            def: 25,\n            matk: 30,\n            mdef: 30,\n            speed: 10,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 0,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 70,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 80,\n                    fire: 150,\n                    water: 50,\n                    earth: 50,\n                    wind: 120,\n                    thunder: 40,\n                    dark: 100,\n                    light: 100\n                }\n            },\n            ai: 'lesser_teravalum',\n            mode: 'lesser_teravalum',\n            skills: [\"constrict\", \"guard\"],\n            name: 'Lesser Teravalum',\n            baseLevel: 1,\n            exp: 150,\n            gold: 10,\n            drops: [[\"weak_vine\", 1000, 2, 5], [\"weak_vine\", 500, 2, 5], [\"hempweed_ligament\", 300, 1, 2], [\"vine_helmet\", 200, 1, 1]],\n            desc: \"A mass of tangled green vines that somehow has sentience. There is no indication of facial features or\" +\n            \" emotion, although the creature is clearly sentient. It seems suited only for constricting enemies and\" +\n            \" defending itself.\"\n        }\n    },\n\n    grey_wolf: {\n\n        stats: {\n            base_level: 3,\n            max_health: 45,\n            atk: 25,\n            def: 30,\n            matk: 30,\n            mdef: 20,\n            speed: 35,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 0,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 120,\n                    water: 100,\n                    earth: 80,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                }\n            },\n            ai: 'grey_wolf',\n            mode: 'grey_wolf',\n            skills: [\"attack\", \"boost\", \"rend\"],\n            name: 'Grey Wolf',\n            baseLevel: 1,\n            exp: 200,\n            gold: 15,\n            drops: [[\"grey_wolf_pelt\", 1000, 2, 4], [\"grey_wolf_pelt\", 500, 3, 6], [\"sharp_claw\", 300, 1, 2]],\n            desc: \"A wolf with bristling grey fur. Despite its aggression, the wolf has a sort of rough beauty about it.\" +\n            \" Seems to\" +\n            \" attack indiscriminately.\" +\n            \" It has a desperate fury about it - as though it will grow faster as it becomes weaker.\"\n        }\n    },\n\n    brown_bear: {\n\n        stats: {\n            base_level: 3,\n            max_health: 55,\n            atk: 20,\n            def: 25,\n            matk: 20,\n            mdef: 20,\n            speed: 17,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 10,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 150,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 110,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 120,\n                    water: 90,\n                    earth: 75,\n                    wind: 105,\n                    thunder: 105,\n                    dark: 100,\n                    light: 100\n                }\n            },\n            ai: 'brown_bear',\n            mode: 'brown_bear',\n            skills: [\"attack\", \"rend\"],\n            name: 'Brown Bear',\n            baseLevel: 4,\n            exp: 250,\n            gold: 20,\n            drops: [[\"brown_fur\", 1000, 1, 7], [\"brown_fur\", 500, 2, 5], [\"sharp_claw\", 300, 1, 2]],\n            desc: \"A simple-looking (or as simple looking as they come) brown bear. It has a somewhat calm demeanour but\" +\n            \" clearly does not appreciate your presence. Even when on all fours it is taller than you, and when it jumps up\" +\n            \" to deliver a powerful blow, its stature has an effect comparable to blotting out the sun. It seems to only\" +\n            \" have the energy to do this occasionally, however. You infer that it does so in regular periods, and also boosts whenever\" +\n            \" possible.\"\n        }\n    },\n\n    lesser_treant: {\n\n        stats: {\n            base_level: 7,\n            max_health: 230,\n            atk: 45,\n            def: 45,\n            matk: 50,\n            mdef: 50,\n            speed: 20,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 25,\n            resistance: 25,\n            evasion: 0,\n            max_mana: 50,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 110,\n                    fire: 100,\n                    water: 100,\n                    earth: 120,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 80,\n                    fire: 140,\n                    water: 70,\n                    earth: 40,\n                    wind: 115,\n                    thunder: 90,\n                    dark: 100,\n                    light: 100\n                }\n            },\n            ai: 'lesser_treant',\n            mode: 'lesser_treant',\n            skills: [\"attack\", \"constrict\"],\n            name: 'Lesser Treant',\n            exp: 450,\n            gold: 50,\n            drops: [[\"wood\", 500, 2, 3], [\"magic_bark\", 450, 1, 2], [\"special_sap\", 250, 1, 2], [\"magic_bark\", 1000, 1, 2],\n            [\"special_sap\", 1000, 1, 1]],\n            desc: \"A fairly large tree. It isn't really mobile, but is capable of moving it's branches around like appendages.\" +\n            \" It has a semblance of a face, with grooves resembling eyes and a mouth that move about arthritically, but no\" +\n            \" actual facial features. It seems to be of moderate intelligence, but not much can be gleaned\" +\n            \" from its appearance.\"\n        }\n    },\n\n    treant: {\n\n        stats: {\n            base_level: 12,\n            max_health: 400,\n            atk: 65,\n            def: 80,\n            matk: 65,\n            mdef: 80,\n            speed: 25,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 25,\n            resistance: 40,\n            evasion: 0,\n            max_mana: 75,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 110,\n                    fire: 100,\n                    water: 100,\n                    earth: 125,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 110,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 75,\n                    fire: 130,\n                    water: 60,\n                    earth: 30,\n                    wind: 105,\n                    thunder: 80,\n                    dark: 90,\n                    light: 105\n                }\n            },\n            ai: 'treant',\n            mode: 'treant',\n            skills: [\"attack\", \"constrict\", \"forest_curse\"],\n            name: 'Treant',\n            baseLevel: 4,\n            exp: 700,\n            gold: 85,\n            drops: [[\"wood\", 500, 5, 7], [\"magic_bark\", 450, 3, 4], [\"special_sap\", 250, 3, 4], [\"magic_bark\", 1000, 3, 4],\n            [\"special_sap\", 1000, 2, 4]],\n            desc: \"A fairly large tree. It isn't really mobile, but is capable of moving it's branches around like appendages.\" +\n            \" It has a semblance of a face, with grooves resembling eyes and a mouth that move about eloquently, but no\" +\n            \" actual facial features. It seems to be of moderate intelligence, but not much useful information can be gleaned\" +\n            \" from its appearance. It radiates an energy that is at once sinister and serene.\"\n        }\n    },\n\n    lesser_ent: {\n\n        stats: {\n            base_level: 17,\n            max_health: 650,\n            atk: 80,\n            def: 100,\n            matk: 80,\n            mdef: 120,\n            speed: 25,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 40,\n            resistance: 60,\n            evasion: 0,\n            max_mana: 120,\n            max_stamina: 200,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 110,\n                    fire: 100,\n                    water: 100,\n                    earth: 125,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 110,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 65,\n                    fire: 120,\n                    water: 60,\n                    earth: 20,\n                    wind: 100,\n                    thunder: 70,\n                    dark: 80,\n                    light: 105\n                }\n            },\n            ai: 'lesser_ent',\n            mode: 'lesser_ent',\n            passedThresholds: [],\n            skills: [\"constrict\", \"forest_curse\"],\n            name: 'Lesser Ent',\n            baseLevel: 4,\n            exp: 1000,\n            gold: 120,\n            drops: [[\"wood\", 500, 10, 15], [\"magic_bark\", 650, 6, 8], [\"special_sap\", 500, 6, 9], [\"magic_bark\", 1000, 6, 8],\n            [\"special_sap\", 1000, 4, 8]],\n            desc: \"A large tree. Unlike other trees and treants, this tree has a venerate aura about it. It's attacks are\" +\n            \" almost absentminded, as though it is focusing on something else completely, and yet they are still so dangerous.\" +\n            \" Its facial features are equally indescriptive as other treefolk, however here they are also faded and more immobile.\" +\n            \" The almost automatic defences it puts up makes you wonder if it has some pre-prepared responses to certain scenarios or \" +\n            \"danger levels.\"\n        }\n    },\n\n    lesser_forest_scourge: { // improve droprates\n\n        stats: {\n            base_level: 10,\n            max_health: 200,\n            atk: 50,\n            def: 60,\n            matk: 70,\n            mdef: 50,\n            speed: 80,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 25,\n            resistance: 0,\n            evasion: 0,\n            max_mana: 200,\n            max_stamina: 200,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 120,\n                    water: 100,\n                    earth: 80,\n                    wind: 110,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                }\n            },\n            ai: 'lesser_forest_scourge',\n            mode: 'lesser_forest_scourge',\n            skills: [\"attack\", \"constrict\", \"deep_envenom\", \"forest_curse\", \"killing_blow\"],\n            name: 'Lesser Forest Scourge',\n            baseLevel: 4,\n            exp: 320,\n            gold: 40,\n            drops: [[\"forest_scourge_scale\", 750, 3, 5], [\"venomous_claw\", 500, 1, 2]],\n            desc: \"It is difficult to see exactly what this creature is due to how quickly it moves, but it seems to be\" +\n            \" some kind of snake. It's scales are coloured similarly to the grass, with green scales of different hues\" +\n            \" interlocking seamlessly and shifting silently and the creature sifts around the surroundings. Like an\"+ \n            \" experienced killer, it seems to have some kind of routine technique.\"\n        }\n    },\n\n    young_venomous_wolf: { // improve droprates\n\n        stats: {\n            base_level: 7,\n            max_health: 185,\n            atk: 40,\n            def: 50,\n            matk: 40,\n            mdef: 55,\n            speed: 50,\n            crit_chance: 0.3,\n            crit_damage: 1.25,\n            effectiveness: 0,\n            resistance: 10,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 150,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 120,\n                    fire: 100,\n                    water: 100,\n                    earth: 120,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 120,\n                    water: 100,\n                    earth: 70,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                }\n            },\n            ai: 'young_venomous_wolf',\n            mode: 'young_venomous_wolf',\n            skills: [\"attack\", \"rend\", \"rush_attack\", \"poison_claws\"],\n            name: 'Young Venemous Wolf',\n            exp: 300,\n            gold: 20,\n            drops: [[\"sharp_claw\", 500, 1, 2], [\"grey_wolf_pelt\", 1000, 2, 5], [\"venomous_claw\", 650, 1, 2]],\n            desc: \"Seems to be a similar species to grey wolves; a generally similar build with a similarly rugged appearence. although this creature is more lean\" +\n            \" - perhaps a quality made possible by its claws dripping with poison. Seems to attack indiscrimately.\"\n        }\n    },\n\n    mobile_lesser_ent: { // improve droprates\n\n        stats: {\n            base_level: 12,\n            max_health: 250,\n            atk: 120,\n            def: 80,\n            matk: 120,\n            mdef: 100,\n            speed: 15,\n            crit_chance: 0,\n            crit_damage: 1,\n            effectiveness: 0,\n            resistance: 20,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 110,\n                    fire: 100,\n                    water: 100,\n                    earth: 125,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 110,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 75,\n                    fire: 130,\n                    water: 60,\n                    earth: 30,\n                    wind: 105,\n                    thunder: 80,\n                    dark: 90,\n                    light: 105\n                }\n            },\n            ai: 'mobile_lesser_ent',\n            mode: 'mobile_lesser_ent',\n            skills: [\"forest_rupture\"],\n            name: 'Mobile Lesser Ent',\n            baseLevel: 4,\n            exp: 400,\n            gold: 85,\n            drops: [[\"wood\", 500, 5, 7], [\"magic_bark\", 350, 2, 3], [\"special_sap\", 200, 2, 3], [\"magic_bark\", 800, 2, 3],\n            [\"special_sap\", 800, 1, 3], [\"earthen_manasoul\", 100, 1, 1]],\n            desc: \"A very tall bipedal... tree? It looks more like a treant than an ent, with a less fixed 'face', and\" +\n            \" a fluidity of motion that surpasses both species. However, it seems notably less intelligent than either.\"\n        }\n    },\n\n    ora: {\n\n        // empoisons enemy\n        // only boosts when can do so twice in one turn\n        // drains SP from the player every 5 turns\n        // keeps up \"halycon ennchantment\" (-20 all, +25% def/mdef) with mana; once it fades, applies \"final haste\" (+1 action onTick)\n        // constrict, attack, brutal swipe\n        // uses forest rupture every 6 turns\n        stats: {\n            base_level: 12,\n            max_health: 560,\n            atk: 65,\n            def: 50,\n            matk: 50,\n            mdef: 55,\n            speed: 85,\n            crit_chance: 0.5,\n            crit_damage: 1.5,\n            effectiveness: 25,\n            resistance: 25,\n            evasion: 0.1,\n            max_mana: 80,\n            max_stamina: 150,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 125,\n                    fire: 100,\n                    water: 125,\n                    earth: 125,\n                    wind: 125,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 90,\n                    fire: 100,\n                    water: 120,\n                    earth: 120,\n                    wind: 100,\n                    thunder: 30,\n                    dark: 100,\n                    light: 100\n                }\n            },\n            ai: 'ora',\n            mode: 'ora',\n            skills: [\"attack\", \"brutal_swipe\", \"constrict\"],\n            name: 'Ora',\n            exp: 1200,\n            gold: 150,\n            drops: [],\n            desc: \"A fairly old man with a dark complexion and short build. Despite his nimble frame, he is clearly quite powerful. He seems reluctant to Boost except when he can do so to great effect, and also seems to have access to a periodical powerful attack. Although his general repertoire seems limited, you can tell he has a few tricks in order to gain an edge. There is a certain calmness about him, but you get the feeling that if he runs out of mana, that may change. Somehow, he has a Monster Soul...\"\n        }\n    },\n    // ----------------------------------------------------------\n    // ------------ NOT REWORKED --------------------------------\n    // ----------------------------------------------------------\n    wayward_traveler: { // not reworked\n        stats: {\n            max_health: 500,\n            base_level: 10,\n            atk: 65,\n            def: 55,\n            matk: 50,\n            mdef: 60,\n            speed: 25,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 10,\n            resistance: 10,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    physical: 80,\n                    fire: 110,\n                    water: 110,\n                    earth: 110,\n                    wind: 110,\n                    thunder: 110,\n                    dark: 110,\n                    light: 110\n                }\n            },\n            ai: 'wayward_traveler',\n            mode: 'wayward_traveler',\n            skills: [\"attack\", \"guard_break\", \"rush_attack\", \"healing_potion\"],\n            name: 'Wayward Traveler',\n            exp: 500,\n            gold: 50,\n            drops: [[\"damaged_sword\", 50, 1, 1],\n                    [\"damaged_armour\", 50, 1, 1],\n                    [\"damaged_pantaloons\", 50, 1, 1],\n                    [\"damaged_helm\", 50, 1, 1],\n                    [\"wanderer_memorabilia\", 1000, 2, 3]],\n                    \n            desc: \"A traveler who seems to have lost their way. From their responsive battle style and analytic glances, you\" +\n            \" infer that they seem to have some kind of specific strategy in mind.\"\n        }  \n    },\n\n    greater_slime: { // not reworked\n\n        stats: {\n            base_level: 5,\n            max_health: 150,\n            atk: 60,\n            def: 60,\n            matk: 70,\n            mdef: 60,\n            speed: 22,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 30,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 70,\n                    fire: 0,\n                    water: 10,\n                    earth: 50,\n                    wind: 50,\n                    thunder: 200,\n                    dark: 75,\n                    light: 75\n                }\n            },\n            ai: 'greater_slime',\n            mode: 'greater_slime',\n            skills: [\"splash\", \"icebolt\"],\n            name: 'Greater Slime',\n            exp: 300,\n            gold: 15,\n            drops: [[\"slime_ball\", 1000, 5, 8]],\n            desc: \"A blue slime. From their movement and feel one would assume they are amorphous but they seem to always\" +\n            \" settle upon the same semispherical form. Generally, their disposition seems to mirror your own actions.\" +\n            \" Seems larger and more experienced(?) than most slimes.\"\n        }\n    },\n\n    lesser_water_klastera: { // not reworked\n\n        stats: {\n            base_level: 6,\n            max_health: 125,\n            atk: 60,\n            def: 70,\n            matk: 70,\n            mdef: 70,\n            speed: 25,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 50,\n            evasion: 0,\n            max_mana: 200,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 150,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 80,\n                    fire: 0,\n                    water: 80,\n                    earth: 80,\n                    wind: 80,\n                    thunder: 150,\n                    dark: 80,\n                    light: 80\n                }\n            },\n            ai: 'lesser_water_klastera',\n            mode: 'lesser_water_klastera',\n            skills: [\"icebolt\", \"arcane_shield\", \"channel_health\", \"splash\"],\n            name: 'Lesser Water Klastera',\n            exp: 350,\n            gold: 15,\n            drops: [[\"aquus_cluster\", 500, 1, 3], [\"manasoul\", 10, 1, 1], [\"water_orb\", 1, 1, 1]],\n            desc: \"A being comprised of only water. It's body seems to be some kind of deep blue semi-solid. It's only facial\" +\n            \" feature is white, oval eyes that convey no sense of emotion. One might infer from its formulaic structure that\" +\n            \" the same could be said about its battle style.\"\n        }\n    },\n\n    young_water_lizard: { // not reworked\n\n        stats: {\n            base_level: 7,\n            max_health: 100,\n            atk: 60,\n            def: 60,\n            matk: 40,\n            mdef: 50,\n            speed: 50,\n            crit_chance: 0.3,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 0,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 150,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 50,\n                    water: 50,\n                    earth: 100,\n                    wind: 120,\n                    thunder: 120,\n                    dark: 100,\n                    light: 100\n                }\n            },\n            ai: 'young_water_lizard',\n            mode: 'young_water_lizard',\n            skills: [\"attack\", \"rush_attack\", \"camoflague\"],\n            name: 'Young Water Lizard',\n            exp: 400,\n            gold: 20,\n            drops: [[\"weak_membrane\", 500, 1, 3], [\"tiny_lizard_tail\", 250, 1, 1], [\"light_absorbant_eye\", 100, 1, 2]],\n            desc: \"A relatively small reptile. It has clearly rough skin, although the abundant tiny spikes all over its body\" +\n            \" are clearly conscious designs of nature. Perhaps due to the size difference, it seems wary of any attacks.\"\n        }\n    },\n\n    red_slime: { // not reworked\n\n        stats: {\n            base_level: 11,\n            max_health: 250,\n            atk: 70,\n            def: 70,\n            matk: 70,\n            mdef: 70,\n            speed: 35,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 30,\n            evasion: 0,\n            max_mana: 150,\n            max_stamina: 70,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 150,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 80,\n                    fire: 0,\n                    water: 50,\n                    earth: 70,\n                    wind: 70,\n                    thunder: 70,\n                    dark: 60,\n                    light: 130\n                }\n            },\n            ai: 'red_slime',\n            mode: 'red_slime',\n            skills: [\"fireball\", \"guard\", \"engulf\", \"attack\"],\n            name: 'Red Slime',\n            exp: 500,\n            gold: 35,\n            drops: [[\"red_slime_ball\", 1000,  5, 8]],\n            desc: \"A red slime. From their movement and feel one would assume they are amorphous but they seem to always\" +\n            \" settle upon the same semispherical form. Seems to be wary of boons you grant yourself.\"\n        }\n    },\n\n    venomous_wolf: { // not reworked\n\n        stats: {\n            base_level: 14,\n            max_health: 210,\n            atk: 80,\n            def: 60,\n            matk: 70,\n            mdef: 55,\n            speed: 80,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 10,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 170,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 120,\n                    fire: 100,\n                    water: 100,\n                    earth: 120,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 120,\n                    water: 100,\n                    earth: 70,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                }\n            },\n            ai: 'venemous_wolf',\n            mode: 'venemous_wolf',\n            skills: [\"attack\", \"rend\", \"rush_attack\", \"poison_claws\"],\n            name: 'Venemous Wolf',\n            exp: 550,\n            gold: 30,\n            drops: [[\"sharp_claw\", 500, 1, 2], [\"venomous_claw\", 250, 1, 2], [\"grey_wolf_pelt\", 1000, 2, 5]],\n            desc: \"Seems to be a similar species to grey wolves; a generally similar build, although this creature is more lean\" +\n            \" - perhaps a quality made possible by its claws dripping with poison. Seems to attack indiscrimately.\"\n        }\n    },\n\n    dark_beast: { // not reworked\n\n        stats: {\n            base_level: 18,\n            max_health: 300,\n            atk: 90,\n            def: 70,\n            matk: 80,\n            mdef: 80,\n            speed: 70,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 10,\n            evasion: 0.1,\n            max_mana: 120,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 120,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 120,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 80,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 0,\n                    light: 150\n                }\n            },\n            ai: 'dark_beast',\n            mode: 'dark_beast',\n            skills: [\"attack\", \"rend\", \"rush_attack\", \"nox_curse\", \"dark_howl\", \"hex\"],\n            name: 'Dark Beast',\n            exp: 800,\n            gold: 10,\n            drops: [[\"sharp_claw\", 500, 1, 2], [\"venemous_claw\", 250, 1, 2], [\"grey_wolf_pelt\", 1000, 2, 5]],\n            desc: \"A creature with a wolf-like structure, but with a larger upper body. It's entire body is shrouded in an\" +\n            \" oppressive mist that makes you uncomfortable. Little regarding its disposition can be inferred from its movements\"\n             + \" besides its apparent intelligence compared to its wolf 'bretheren'.\"\n        }\n    },\n\n    flame_minotaur: { // not reworked\n\n        stats: {\n            base_level: 30,\n            max_health: 5000,\n            atk: 110,\n            def: 80,\n            matk: 80,\n            mdef: 80,\n            speed: 65,\n            crit_chance: 0,\n            crit_damage: 1.5,\n            effectiveness: 30,\n            resistance: 0,\n            evasion: 0,\n            max_mana: 100,\n            max_stamina: 100,\n            max_sp: 100,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 120,\n                    fire: 120,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 0,\n                    water: 130,\n                    earth: 90,\n                    wind: 120,\n                    thunder: 80,\n                    dark: 110,\n                    light: 90\n                }\n            },\n            ai: 'flame_minotaur',\n            mode: 'flame_minotaur',\n            mode2: 'phase one',\n            skills: [\"boar_strike\", \"boar_rush\", \"flame_impact\", \"ignis_destroyer\", \"boar_haste\", \"engulf\", \"true_cleanse\"],\n            name: 'Flame Minotaur',\n            exp: 5000,\n            gold: 2500,\n            drops: [[\"flamme_kaiser\", 1000, 1, 1]],\n            desc: \"A tall beast of extremely muscular built. It is difficult to fully appreciate the stature of the minotaur\" +\n            \", as it is several times taller than you. However you can feel it's scorching breath, and see it's giant,\" +\n            \" rune-encrusted axe. Nothing can about it's mannerisms can be inferred from its appearance besides its \" +\n            \"great power.\"\n        }\n    },\n    \n}\n//\n\n// -- MODES -- \\\\\nconst modeDirectory = {\n\n    charon: (state, player, enemy, finishFunction) => { finishFunction(); },\n\n    dreadful_wolf: (state, player, enemy, finishFunction) => { finishFunction(); },\n\n    young_wolf: (state, player, enemy, finishFunction) => { finishFunction(); },\n    \n    slime: (state, player, enemy, finishFunction) => { finishFunction(); },\n\n    grey_wolf: (state, player, enemy, finishFunction) => { finishFunction(); },\n\n    brown_bear: (state, player, enemy, finishFunction) => { finishFunction(); },\n\n    young_bear: (state, player, enemy, finishFunction) => { finishFunction(); },\n\n    ora: (state, player, enemy, finishFunction) => { finishFunction(); },\n\n    lesser_treant: (state, player, enemy, finishFunction) => { \n        // at sub 50%, gain a chance to heal\n        // at sub 30%, use anima bark\n\n        console.log(\"mode called\");\n\n        const animaBarkStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"anima bark\");\n\n        if (enemy.health <= enemy.max_health * (30/100) && animaBarkStacks == 0) {\n            enemy.modeBattle = \"anima bark\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} feels mystical energy welling within..`, 1]], \"battle\", finishFunction);\n        } else if (enemy.health <= enemy.max_health / 2) {\n            enemy.modeBattle = \"heal\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} is wary of their condition..`, 1]], \"battle\", finishFunction);\n        } else {\n            enemy.modeBattle = \"normal\";\n            finishFunction();\n        }\n    },\n\n    treant: (state, player, enemy, finishFunction) => { \n        // at sub 50%, gain a chance to heal\n        // at sub 30%, use anima bark\n\n        console.log(\"mode called\");\n\n        const animaBarkStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"anima bark\");\n\n        if (enemy.health <= enemy.max_health * (30/100) && animaBarkStacks == 0) {\n            enemy.modeBattle = \"anima bark\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} feels mystical energy welling within..`, 1]], \"battle\", finishFunction);\n        } else if (enemy.health <= enemy.max_health / 2) {\n            enemy.modeBattle = \"heal\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} is wary of their condition..`, 1]], \"battle\", finishFunction);\n        } else {\n            enemy.modeBattle = \"normal\";\n            finishFunction();\n        }\n    },\n\n    lesser_ent: (state, player, enemy, finishFunction) => { \n        // at sub 80%, use forest rupture -- add phase 1\n        // at sub 60%, gain a chance to heal + use anima bark\n        // at sub 50%, use forest rupture -- add phase 2 \n        // at sub 40%, use greater anima bark\n        // at sub 20%, use forest rupture -- add phase 3\n\n        console.log(\"mode called\");\n\n        const animaBarkStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"anima bark\");\n        const g_animaBarkStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"greater anima bark\");\n\n        // threshold attacks\n        console.log(`INDEX OF ${enemy.passedThresholds.indexOf(\"one\")}`)\n        console.log(enemy.health)\n        console.log(enemy.max_health * (80/100))\n        console.log(enemy.health <= enemy.max_health * (80/100))\n        console.log(enemy.passedThresholds.indexOf(\"one\") == -1)\n        if (enemy.health <= enemy.max_health * (80/100) && enemy.passedThresholds.indexOf(\"one\") == -1) {\n            enemy.modeBattle = \"threshold-one\"\n            finishFunction();\n        }\n\n        else if (enemy.health <= enemy.max_health * (50/100) && enemy.passedThresholds.indexOf(\"two\") == -1) {\n            enemy.modeBattle = \"threshold-two\"\n            finishFunction();\n        }\n\n        else if (enemy.health <= enemy.max_health * (20/100) && enemy.passedThresholds.indexOf(\"three\") == -1) {\n            enemy.modeBattle = \"threshold-three\"\n            finishFunction();\n        }\n\n        //\n        \n        else if (enemy.health <= enemy.max_health * (40/100) && g_animaBarkStacks == 0) {\n            enemy.modeBattle = \"greater anima bark\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} feels great mystical energy welling within..`, 1]], \"battle\", finishFunction);\n        }\n\n        else if (enemy.health <= enemy.max_health * (60/100) && animaBarkStacks == 0) {\n            enemy.modeBattle = \"anima bark\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} feels mystical energy welling within..`, 1]], \"battle\", finishFunction);\n        }\n\n        else if (enemy.health <= enemy.max_health * (60/100)) {\n            enemy.modeBattle = \"heal\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} is wary of their condition..`, 1]], \"battle\", finishFunction);\n        }\n        \n        else {\n            enemy.modeBattle = \"normal\";\n            finishFunction();\n        }\n    },\n\n    wayward_traveler: (state, player, enemy, finishFunction) => {\n        // if the player has less than 3 stacks of guard_break applied, use guard break (if stamina available)\n        // if the player has 3 stacks of guard break applied, use rush attack\n        // however, if the traveler's health goes below 50%, use healing potion\n        const enemyHealth = enemy.health;\n        const guardBreakStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(player.debuffs, \"guard broken\");\n        console.log(`found ${guardBreakStacks} guard broken stacks`)\n        if (enemyHealth < enemy.max_health / 2) {\n            if (enemy.mana > 30) {\n                enemy.modeBattle = \"wary\";\n                _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} is concerned about their condition..`, 1]], \"battle\", finishFunction);\n            } else {\n                enemy.modeBattle = \"desperate\";\n                _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} is employing a last ditch attempt!`, 1]], \"battle\", finishFunction);\n            }\n        } else if (guardBreakStacks < 3) {\n            enemy.modeBattle = \"preparing\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} seems to be setting something up..`, 1]], \"battle\", finishFunction);\n        } else {\n            enemy.modeBattle = \"allout\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} is going all out!`, 1]], \"battle\", finishFunction);\n        }\n    },\n\n    greater_slime: (state, player, enemy, finishFunction) => {\n        const plrActions = state[_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn - 1][\"player\"];\n        var twoGuard = false;\n        var allDamage = true;\n\n        var guardCounter = Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"getSkill\"])(plrActions, \"guard\");\n        var plrDamage = Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"getDamage\"])(plrActions);\n        console.log(\"logging player damage\");\n        console.log(plrDamage);\n        plrDamage.forEach(dmg => {\n            if (dmg < 1) { allDamage = false };\n        })\n        if (guardCounter > 0) {\n            // If the player guarded more than once previous turn, become \"defensive\" (guard 3 times)\n            enemy.modeBattle = \"defensive\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} eyes ${player.name} cautiously...`, 1]], \"battle\", finishFunction);\n        } else if (allDamage) {\n            // If the player dealt damage all of their actions the previous turn, become aggressisve (attack 3 times)\n            enemy.modeBattle = \"aggressive\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} assumes an aggressive stance!`, 1]], \"battle\", finishFunction);\n        } else {\n            /// Otherwise, become \"normal\" (random choice of actions)\n            enemy.modeBattle = \"normal\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} assumes a normal stance.`, 1]], \"battle\", finishFunction);\n        }\n\n\n    },\n\n    lesser_water_klastera: (state, player, enemy, finishFunction) => {\n        // keep arcane shield buff up and otherwise use icebolt. Every 3 turns use icebolt if possible\n        var arcaneStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"arcane protection\");\n        var healUses = 0;\n        if (state[_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn - 1][\"enemy\"] != undefined) {\n            healUses = Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"getSkill\"])(state[_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn - 1][\"enemy\"], \"channel_health\")\n        }\n        if (arcaneStacks == 0) {\n            enemy.modeBattle = \"arcane\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} would like to enhance themselves with magic...`, 1]], \"battle\", finishFunction);\n        } else if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn % 3 == 0) {\n            if (healUses == 0) {\n                enemy.modeBattle = \"heal\";\n                _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} would like to heal..`, 1]], \"battle\", finishFunction);\n            } else {\n                enemy.modeBattle = \"normal\";\n                _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} has no particular desire.`, 1]], \"battle\", finishFunction);\n            }\n        } else {\n            enemy.modeBattle = \"normal\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} has no particular desire.`, 1]], \"battle\", finishFunction);\n        }\n    },\n\n    young_water_lizard: (state, player, enemy, finishFunction) => {\n        // if the player didn't guard at all, enter cautious mode\n        // otherwise, normal\n        const guardCounter = Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"getSkill\"])(state[_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn - 1][\"player\"], \"guard\");\n        if (guardCounter == 0) {\n            enemy.modeBattle = \"cautious\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} feels uncomfortable...`, 1]], \"battle\", finishFunction);\n        } else {\n            enemy.modeBattle = \"normal\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} seems to be feeling normal.`, 1]], \"battle\", finishFunction);\n        }\n    },\n\n    red_slime: (state, player, enemy, finishFunction) => {\n\n        enemy.modeBattle = \"normal\";\n        finishFunction();\n\n\n    },\n\n    venemous_wolf: (state, player, enemy, finishFunction) => { finishFunction(); },\n\n    young_venomous_wolf: (state, player, enemy, finishFunction) => { finishFunction(); },\n\n    dark_beast: (state, player, enemy, finishFunction) => {\n        const atkbuffStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"ATK up\");\n        const matkbuffStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"MATK up\");\n        const speedbuffStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"SPEED up\");\n        const hexStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(player.debuffs, \"hexed\");\n        const debuffCount = Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"stackCount\"])(player.debuffs);\n        // dark pact, hex, dark howl, nox curse, rend, attack\n        // keep dark pact up, use hex, then other 3 skills\n\n        // if dark pact not applied and dark pact can be used, use dark pact\n        if (atkbuffStacks < 3 && matkbuffStacks < 3 && speedbuffStacks < 3) {\n            enemy.modeBattle = \"dark pact\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} eyes ${player.name} with a slight glare.`, 1]], \"battle\", finishFunction);\n        } else if (hexStacks == 0) {\n            enemy.modeBattle = \"hex\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} eyes ${player.name} with a malicious glare.`, 1]], \"battle\", finishFunction);\n        } else if (debuffCount - _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(player.debuffs, \"nox curse\") > 1) { // ensure nox curse not counted\n                enemy.modeBattle = \"nox curse\";\n                _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} eyes ${player.name} with a malevolent glare.`, 1]], \"battle\", finishFunction);\n        } else {\n            enemy.modeBattle = \"normal\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} eyes ${player.name} with a dry glare.`, 1]], \"battle\", finishFunction);\n        }\n        // otherwise if hex not applied and hex can be used, use hex\n        // otherwise if 2 or more debuffs applied to enemy, use nox curse if possible\n        // otherwise use dark howl, rend, or attack\n\n        \n\n    },\n\n    flame_minotaur: (state, player, enemy, finishFunction) => {\n        const turn = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn;\n        const debuffsApplied = Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"buffCount\"])(enemy.debuffs);\n        const buffsEnemy = Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"buffCount\"])(player.buffs);\n        const hasteCount = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"boar haste\");\n\n        var phase = enemy.mode2;\n        var ignisDestroyer = 5;\n        if (phase == 'phase two') { ignisDestroyer = 3 };\n\n        if (enemy.health < enemy.max_health / 2 && phase == 'phase one') {\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessage\"]('<span style=\"color:red\"><b>The minotaur grows evermore furious..</span></b>');\n            enemy.mode2 = 'phase two';\n            phase = 'phase two';\n        } \n\n        if (phase == 'phase two' && hasteCount == 0) {\n            enemy.modeBattle = \"boar_haste\";\n            finishFunction();\n        } else if (turn % ignisDestroyer == 0) {\n            enemy.modeBattle = \"ignis_destroyer\";\n            finishFunction();\n        } else if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].flare_impact.cost(enemy) == true) {\n            enemy.modeBattle = \"flare_impact\";\n            finishFunction();\n        } else if (debuffsApplied > 2) {\n            if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].true_cleanse.cost(enemy) == true) {\n                enemy.modeBattle = \"true_cleanse\";\n                finishFunction();\n            } else {\n                enemy.modeBattle = \"ignis_destroyer\";\n                finishFunction();\n            }\n        } else if (buffsEnemy > 2) {\n            if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].engulf.cost(enemy) == true) {\n                enemy.modeBattle = \"engulf\"\n                finishFunction();\n            } else {\n                enemy.modeBattle = \"ignis_destroyer\"\n                finishFunction();\n            }\n            \n        } else {\n            enemy.modeBattle = \"normal\";\n            finishFunction();\n        }\n\n    },\n\n    lesser_teravalum: (state, player, enemy, finishFunction) => {\n        if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].constrict.cost(enemy) == true) {\n            enemy.modeBattle = \"constrict\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} is in the mood to constrict..`, 1]], \"battle\", finishFunction);\n        } else {\n            enemy.modeBattle = \"guard\";\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[`<br>${enemy.name} assumes a defensive stance.`, 1]], \"battle\", finishFunction);\n        }\n    },\n\n    lesser_forest_scourge: (state, player, enemy, finishFunction) => { finishFunction(); },\n\n    mobile_lesser_ent: (state, player, enemy, finishFunction) => { finishFunction(); },\n\n\n}\n//\n\n// -- AI -- \\\\\nconst aiDirectory = { // we need to export this separately because we can't deep copy objects with functions in them.\n\n    young_bear: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn % 2 == 0 && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].crushing_blow.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true && _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn != 1) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].crushing_blow.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n        }\n    },\n\n    ora: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const player = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer())\n\n        // if first turn and first action, use monster soul\n        // else if empoison not applied, use empoison\n        // if >=20 SP/used boost before, use boost\n        // else if halycon enchantment/final haste not applied, use halycon enchantment; if unable, use final haste\n        // if turn divisible by 5, use soul drain\n        // if turn divisible by 6, use forest rupture\n        // otherwise use random from main roster\n\n        console.log(enemy);\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"monster soul\") == 0) {\n            useSkill(\"monster_soul\");\n        }\n        else if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(player.debuffs, \"empoisoned\") == 0) {\n            useSkill(\"empoison\");\n        }\n        else if (enemy.sp >= 20 || (enemy.sp >= 10 && Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"findTimesUsed\"])(\"enemy\", \"boost\") == 1)) {\n            useSkill(\"boost\");\n        }\n        else if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"halycon enchantment\") == 0 && _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"final haste\") == 0) {\n            if (canUse(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer(), \"halycon_enchantment\")) { useSkill(\"halycon_enchantment\") } else { useSkill(\"final_haste\") };\n        }\n        else if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn % 6 == 0 && Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"findTimesUsed\"])(\"enemy\", \"soul_drain\") == 0) {\n            useSkill(\"soul_drain\");\n        }\n        else if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn % 5 == 0 && Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"findTimesUsed\"])(\"enemy\", \"forest_rupture\") == 0) {\n            useSkill(\"forest_rupture\");\n        }\n        else { Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills) };\n\n\n    },\n\n    charon: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn % 3 == 0 && enemy.actionsTaken == 0) {\n            _js_views_mainView__WEBPACK_IMPORTED_MODULE_2__[\"displayMessagesDelayed\"]([[\"???: Ahhh. I need energy...\", 0.2], [\"??? gained 30 SP!\", -0.2]], \"outside\", () => {\n                enemy.sp += 30;\n                if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer())) == true) {\n                    _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n                } else if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn % 4 == 0 && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].malice.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer())) == true && Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"findTimesUsed\"])(\"enemy\", \"malice\") == 0) {\n                    _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].malice.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n                } else {\n                    Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n                }\n            })\n        } else {\n            if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer())) == true) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n            } else if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn % 4 == 0 && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].malice.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer())) == true && Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"findTimesUsed\"])(\"enemy\", \"malice\") == 0) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].malice.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n            } else {\n                Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n            }\n        }\n    \n    },\n\n    dreadful_wolf: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn == 1 && enemy.actionsTaken == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].monster_soul.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn % 3 == 0 && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].malice.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true && Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"findTimesUsed\"])(\"enemy\", \"malice\") == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].malice.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n        }\n    },\n\n    young_wolf: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn == 1 && enemy.actionsTaken == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].monster_soul.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n        }\n    },\n\n    slime: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn == 1 && enemy.actionsTaken == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].monster_soul.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n        }\n    },\n\n    grey_wolf: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn == 1 && enemy.actionsTaken == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].wolven_soul.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n        }\n    },\n\n    brown_bear: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn == 1 && enemy.actionsTaken == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].monster_soul.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn % 3 == 0 && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].brutal_swipe.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].brutal_swipe.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n        }\n    },\n\n    lesser_treant: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const mode = enemy.modeBattle;\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn == 1 && enemy.actionsTaken == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].kindred_soul.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        }\n        else if (mode == \"anima bark\") {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].anima_bark.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else if (mode == \"heal\") {\n            var random = Math.floor(Math.random() * 100) + 1; // 0 to 100\n            if (random <= 75 && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].nature_healing.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].nature_healing.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n            } else {\n                Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n            }\n        } else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n        }\n    },\n\n    treant: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const mode = enemy.modeBattle;\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn == 1 && enemy.actionsTaken == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].anima_soul.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        }\n        else if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        }\n        else if (mode == \"anima bark\") {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].anima_bark.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        }\n        else if (mode == \"heal\") {\n            var random = Math.floor(Math.random() * 100) + 1; // 0 to 100\n            if (random <= 75 && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].lesser_anima_healing.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].lesser_anima_healing.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n            } else {\n                Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n            }\n        }\n        else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n        }\n    },\n\n    lesser_ent: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const mode = enemy.modeBattle;\n        console.log(`MODE IF ${mode}`)\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn == 1 && enemy.actionsTaken == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].anima_soul.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        }\n\n        else if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].boost.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        }\n\n        else if (mode == \"anima bark\") {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].anima_bark.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        }\n\n        else if (mode == \"greater anima bark\") {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].greater_anima_bark.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        }\n\n        else if (mode == \"threshold-one\") {\n            console.log(`THRESHOLD ONE REACHED`)\n            enemy.passedThresholds.push(\"one\");\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].forest_rupture.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        }\n        \n        else if (mode == \"threshold-three\") {\n            enemy.passedThresholds.push(\"three\");\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].forest_rupture.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        }\n\n        else if (mode == \"threshold-two\") {\n            enemy.passedThresholds.push(\"two\");\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].forest_rupture.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        }\n\n        else if (mode == \"heal\") {\n            var random = Math.floor(Math.random() * 100) + 1; // 0 to 100\n            if (random <= 75 && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].lesser_anima_healing.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].lesser_anima_healing.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n            } else {\n                if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].constrict.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].forest_curse.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() == true)) {\n                    Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n                } else {\n                    _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].guard.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n                }\n            }\n        }\n\n        else {\n            if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].constrict.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()) == true && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].forest_curse.cost(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() == true)) {\n                Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n            } else {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].guard.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n            }\n\n        }\n    },\n\n    wayward_traveler: () => {\n        const mode = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().modeBattle;\n\n        console.log(\"this was called\");\n        console.log(mode);\n\n        // if the mode is \"wary\", use heath potion\n        if (mode == \"wary\") {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].health_potion.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n        } else if (mode == \"desperate\" || mode == \"allout\") {\n            // if mode is \"desperate\" or \"allout\", try to use rush attack, otherwise use attack\n            if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].rush_attack.cost(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer())) == true) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].rush_attack.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            } else {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].attack.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            }\n        } else if (mode == \"preparing\") {\n            // if mode is \"preparing\", try to use guard break, otherwise use attack\n            if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].guard_break.cost(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer())) == true) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].guard_break.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            } else {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].attack.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            }\n        }\n    },\n\n    greater_slime: () => {\n        // get mode\n        const mode = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().modeBattle;\n\n        // if the mode is \"aggressive\", use 'splash' only\n        if (mode == \"aggressive\") {\n            const random = Math.round((Math.random() + 0.1) * 2)\n            if (random == 1) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].splash.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            } else {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].icebolt.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            }\n        } else if (mode == \"defensive\") {\n            // if the mode is \"defensive\", guard only\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].guard.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n        } else {\n            // if the mode is \"normal\", make it random\n            const random = Math.round((Math.random() + 0.1) * 3)\n            if (random == 1) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].guard.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            } else if (random == 2) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].splash.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            } else {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].splash.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            }\n        }\n    // endEnemyTurn()\n    },\n\n    lesser_water_klastera: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const mode = enemy.modeBattle;\n\n        if (mode == \"normal\") {\n            if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].icebolt.cost(enemy) == true) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].icebolt.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            } else {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].splash.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            }\n        } else if (mode == \"heal\") {\n            if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].channel_health.cost(enemy) == true) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].channel_health.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            } else {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].splash.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            }\n        } else if (mode == \"arcane\") {\n            if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].arcane_shield.cost(enemy) == true) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].arcane_shield.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            } else {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].splash.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            }\n        }\n    },\n\n    young_water_lizard: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const player = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer())\n        const mode = enemy.modeBattle;\n\n        if (mode == \"cautious\" && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].camoflague.cost(enemy, player) == true && _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"camoflague\") == 0) {\n            // use camoflague\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].camoflague.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n        } else {\n            // 50/50 rush attack or attack\n            const random = Math.round(Math.random() * 3 + 1);\n            if (random == 1 && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].rush_attack.cost(enemy, player) == true) {\n                // use rush attack\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].rush_attack.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            } else {\n                // use attac\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].attack.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            }\n        }\n    },\n\n    red_slime: () => {\n        // get mode and other stuff\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const mode = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().modeBattle;\n        \n        const playerBuffCount = Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"buffCount\"])(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs);\n        console.log(`PLAYERBUFFCOUNT ${playerBuffCount}`)\n        // only use engulf when player has over 1 buff applied\n        // if the mode is \"aggressive\", try use engulf then fireball then attack\n        if (mode == \"normal\") {\n           if (enemy.actionsTaken == 0 && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].engulf.cost(enemy) == true && playerBuffCount > 1) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].engulf.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n           } else if (_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].fireball.cost(enemy) == true) {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].fireball.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n           } else {\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].attack.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n           }\n        }\n    // endEnemyTurn()\n    },\n\n    venomous_wolf: () => {\n        // get enemy and other stuff\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const player = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer();\n\n        // uses random attacks\n        const skillsTemp = Object(_js_models_baseModel__WEBPACK_IMPORTED_MODULE_3__[\"copy\"])(enemy.skills);\n        \n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(player.debuffs, \"bleed\") == 1) {\n            skillsTemp.splice(skillsTemp.indexOf(\"rend\"), 1);\n        };\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(player.debuffs, \"viridian toxin\") == 1) {\n            skillsTemp.splice(skillsTemp.indexOf(\"poison_claws\"), 1);\n        };\n\n        Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, skillsTemp);\n    },\n\n    young_venomous_wolf: () => {\n        // get enemy and other stuff\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const player = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer();\n\n        // uses random attacks\n        const skillsTemp = Object(_js_models_baseModel__WEBPACK_IMPORTED_MODULE_3__[\"copy\"])(enemy.skills);\n        \n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(player.debuffs, \"bleed\") == 1) {\n            skillsTemp.splice(skillsTemp.indexOf(\"rend\"), 1);\n        };\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(player.debuffs, \"viridian toxin\") == 1) {\n            skillsTemp.splice(skillsTemp.indexOf(\"poison_claws\"), 1);\n        };\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn == 1 && enemy.actionsTaken == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].wolven_soul.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, skillsTemp);\n        }\n    },\n\n    dark_beast: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const mode = enemy.modeBattle;\n        // keep dark pact up, use hex, then other 3 skills\n        // if dark pact not applied and dark pact can be used, use dark pact\n        if (mode == \"dark pact\" && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].dark_pact.cost(enemy) == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].dark_pact.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n        } else if (mode == \"hex\" && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].hex.cost(enemy) == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].hex.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            // otherwise if hex not applied and hex can be used, use hex\n        } else if (mode == \"nox curse\" && _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].nox_curse.cost(enemy) == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].nox_curse.use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n            // otherwise if 2 or more debuffs applied to enemy, use nox curse if possible\n        } else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, [\"rend\", \"attack\", \"dark_howl\"]);\n            // otherwise use dark howl, rend, or attack\n        }\n         \n    },\n\n    flame_minotaur: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const mode = enemy.modeBattle;\n\n        if (mode != \"normal\") {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"][mode].use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n        } else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, [\"boar_strike\", \"boar_rush\"]);\n        }\n    },\n\n    lesser_teravalum: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const mode = enemy.modeBattle;\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn == 1 && enemy.actionsTaken == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].kindred_soul.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else if (mode != \"normal\") {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"][mode].use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), 'enemy');\n        }\n    },\n\n    lesser_forest_scourge: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        const player = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer();\n\n        const envenomedStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(player.debuffs, \"viridian toxin\");\n        const constrictStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(player.debuffs, \"constricted\");\n        const preparedStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(enemy.buffs, \"prepared\");\n        const forestCurseStacks = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(player.debuffs, \"forest curse\");\n\n        if (forestCurseStacks > 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].killing_blow.use(enemy, player, \"enemy\");\n        }\n\n        else if (preparedStacks > 0 && canUse(enemy, player, \"forest_curse\") == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].forest_curse.use(enemy, player, \"enemy\");\n        }\n\n        else if (constrictStacks > 0 && canUse(enemy, player, \"deep_envenom\") == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].deep_envenom.use(enemy, player, \"enemy\");\n        }\n\n        else if (envenomedStacks > 0 && canUse(enemy, player, \"constrict\") == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].constrict.use(enemy, player, \"enemy\");\n        }\n\n        else if (canUse(enemy, player, \"poison_claws\") == true) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].poison_claws.use(enemy, player, \"enemy\");\n        }\n\n        else {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].attack.use(enemy, player, \"enemy\");\n        }\n    },\n\n    mobile_lesser_ent: () => {\n        const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n\n        if (_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn == 1 && enemy.actionsTaken == 0) {\n            _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"].kindred_soul.use(enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n        } else {\n            Object(_js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"useRandom\"])(enemy, enemy.skills);\n        }\n    },\n\n}\n//\n\nconst canUse = (enemy, target, skill) => {\n    return _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"][skill].cost(enemy, target);\n}\n\nconst useSkill = (name) => {\n    _js_models_skills__WEBPACK_IMPORTED_MODULE_0__[\"skills\"][name].use(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].enemy, _js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_js_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"enemy\");\n}\n\n//# sourceURL=webpack:///./src/directories/enemies/enemies.js?");

/***/ }),

/***/ "./src/directories/items/items.js":
/*!****************************************!*\
  !*** ./src/directories/items/items.js ***!
  \****************************************/
/*! exports provided: itemsDirectory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"itemsDirectory\", function() { return itemsDirectory; });\n/* harmony import */ var _js_views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../js/views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _js_models_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../js/models/data */ \"./src/js/models/data.js\");\n/* harmony import */ var _js_models_skills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../js/models/skills */ \"./src/js/models/skills.js\");\n/* harmony import */ var _js_models_combat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../js/models/combat */ \"./src/js/models/combat.js\");\n// -- IMPORTS -- \\\\\n\n\n\n\n//\n\n\n// -- ITEMS -- \\\\\n\n/* ITEM TEMPLATE\n{\n            name: \"pendant\",\n            type: \"misc\",\n            speed: 10,\n            elemental: {\n                offence: {\n                },\n                defence: {\n                }\n            }\n        }\n*/\n\n/* REAGENT TEMPLATE\n    slime_ball: {\n        name: \"Slime Ball\",\n        type: \"reagent\",\n        desc: \"A ball of green slime. Although it has shape, it is easy to press into. Has a peculiar texture.\",\n}\n*/\n\nconst itemsDirectory = {\n    //  WEAPONS\n    // #region \n    damaged_dagger: {\n        name: \"damaged dagger\", \n        type: \"weapon\",\n        atk: 4,\n        def: 1,\n        matk: 5,\n        mdef: 3,\n        speed: 5,\n        elemental: {\n            offence: {},\n            defence: {}\n        },\n        element: \"physical\",\n        desc: \"A damaged dagger. Slightly rusty. It's corrogated edge may help against some enemies, but will not do\" +\n        \" any favours against slimes.\",\n        sell_value: 100\n    },\n\n    damaged_sword: {\n        name: \"damaged sword\",\n        type: \"weapon\",\n        atk: 7,\n        def: 4,\n        matk: 5,\n        mdef: 5,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"A damaged sword. It is a little bit rusty, with varying sharpness throughout the length of its edge. It's\" +\n        \" uneven length is unlikely to assist its user in swordplay.\",\n        sell_value: 100\n    },\n\n    simple_sword: {\n        name: \"simple sword\",\n        type: \"weapon\",\n        atk: 5,\n        def: 1,\n        matk: 2,\n        mdef: 1,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"A sword of craftmanship evidently skilled and yet still simplistic. It has a presently untouched silver blade\" +\n        \" under a brown hilt. Swords of this type are often used by skilled adventurers who want to return to their roots.\",\n        sell_value: 25\n    },\n\n    sharpened_sword: {\n        name: \"sharpened sword\",\n        type: \"weapon\",\n        atk: 12,\n        def: 3,\n        matk: 4,\n        mdef: 3,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"The blade atop this sword is noticeable sharper than weaker swords. It has a weightier feel that allows for\" +\n        \" stronger swings.\",\n        sell_value: 100\n    },\n\n    crafted_blade: {\n        name: \"crafted blade\",\n        type: \"weapon\",\n        atk: 20,\n        def: 4,\n        matk: 5,\n        mdef: 5,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"The result of a very skilled weapon forger working with limited materials. Even one unknowledgable in swords\" +\n        \" can infer the love put into this blade from the intricate hilt to the blade optimised for killing.\",\n        sell_value: 250\n    },\n\n    silver_axe: {\n        name: \"silver axe\",\n        type: \"weapon\",\n        atk: 18,\n        def: 6,\n        matk: 6,\n        mdef: 6,\n        speed: -10,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"An axe forged of silver. It is double-bladed, and the weight on either side makes it a little uncomfortable to\" +\n        \" handle.\",\n        sell_value: 120\n    },\n\n    reinforced_silver_axe: {\n        name: \"reinforced silver axe\",\n        type: \"weapon\",\n        atk: 25,\n        def: 8,\n        matk: 8,\n        mdef: 8,\n        speed: -20,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"An axe that seems to be exactly like the silver axe except it has been reinforced by various stronger materials.\" +\n        \" However, the materials used to reinforce it seem to have been applied unevenly, which makes this weapon, however strong,\" +\n        \" difficult to use.\",\n        sell_value: 300\n    },\n\n    metal_stave: {\n        name: \"metal stave\",\n        type: \"weapon\",\n        atk: 3,\n        def: 1,\n        matk: 6,\n        mdef: 2,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"It is a common misconception that simple weaponry for mages are made out of wood. Wood actually doesn't really\" +\n        \" conduct mana very well and is susceptible to breaking and fragmenting, making it a poor choice. Instead, a simple\" +\n        \" stave constructed from various metals melded together haphazardly is the weapon of choice for beginning magic users.\",\n        sell_value: 30\n    },\n\n    magisteel_stave: {\n        name: \"magisteel stave\",\n        type: \"weapon\",\n        atk: 7,\n        def: 1,\n        matk: 13,\n        mdef: 3,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"A stave made from a single alloy that is particularly good at conducting mana. Useful for intermediate mages but\" +\n        \" a lack of resistance to mana makes it unsuitable for stronger users.\",\n        sell_value: 150\n    },\n\n    enchanted_magisteel_stave: {\n        name: \"enchanted magisteel stave\",\n        type: \"weapon\",\n        atk: 9,\n        def: 1,\n        matk: 20,\n        mdef: 8,\n        elemental: {\n            offence: { water: 10 },\n            defence: { water: -10 },\n        },\n        element: \"water\",\n        desc: \"A stave made from an alloy that conducts maigc easily, but also enchanted so that more powerful spells can be\" +\n        \" cast using it. It seems to have been enchanted with water magic.\",\n        sell_value: 350\n    },\n\n    conduit_orb: {\n        name: \"conduit orb\",\n        type: \"weapon\",\n        matk: 20,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"none\",\n        desc: \"Most orbs are formed from solidified mana over a very long period of time, and therefore has a very high mana\" +\n        \" conductivity that allows for the use of very powerful spells. However this orb is manmade with no elemental alignment\" +\n        \" using a complicated and specialised technique. It offers no other combat advantages, however allows a user a relatively\" +\n        \" high increase in magic power for its price.\",\n        sell_value: 200\n    },\n    \n    simple_dagger: {\n        name: \"simple dagger\",\n        type: \"weapon\",\n        atk: 2,\n        speed: 5,\n        mdef: 1,\n        def: 2,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"A weapon that seems almost identical to another named 'simple sword' although it is smaller in length. It has\" +\n        \" a lightly curved blade that allows attacks to be parried more easily.\",\n        sell_value: 25\n    },\n\n    crafted_dagger: {\n        name: \"crafted dagger\",\n        type: \"weapon\",\n        atk: 10,\n        speed: 10,\n        evasion: 0.1,\n        mdef: 3,\n        def: 3,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"none\",\n        desc: \"A wonderfully crafted weapon. It's hilt it designed such that the weapon can be held in most positions very\" +\n        \" comfortably, and such that the way the weapon is held can be changed at will. The blade is an intricate array of\" +\n        \" grooves and smooth edges that allow attacks to be blocked and parried with great ease and effectiveness. Not to be\" +\n        \" used by newbie dagger wielders.\",\n        sell_value: 250\n    },\n\n    silver_shield: {\n        name: \"silver shield\",\n        type: \"weapon\",\n        def: 25,\n        mdef: 20,\n        speed: -20,\n        elemental: {\n            offence: {},\n            defence: { physical: -10 },\n        },\n        element: \"physical\",\n        desc: \"A silver shield. It is well-made and sturdy but with little nuance to speak of.\",\n        sell_value: 200,\n    },\n\n    runeblade: {\n        name: \"runeblade\",\n        type: \"weapon\",\n        atk: 10,\n        matk: 7,\n        mdef: 5,\n        def: 5,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"A blade of simple structure. The blade has been formed of two half-blades with runic inscriptions on the inside\" +\n        \" of either welded together such that the inscriptions cannot be seen. This along with a basic enchantment placed on\" +\n        \" the blade makes it easy to enhance with some runes.\",\n        sell_value: 150\n    },\n\n    runic_dagger: {\n        name: \"runic dagger\",\n        type: \"weapon\",\n        atk: 7,\n        matk: 5,\n        mdef: 2,\n        def: 2,\n        speed: 7,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"A dagger of simple structure. The weapon is too small for inscriptions to be placed inside of the blade so they\" +\n        \" are plainly visible. The runes along with a basic enchantment placed on the blade makes it easy to enhance with some\" +\n        \" runes.\",\n        sell_value: 150\n    },\n\n    magisteel_runic_dagger: {\n        name: \"magisteel runic dagger\",\n        type: \"weapon\",\n        atk: 10,\n        matk: 8,\n        mdef: 7,\n        def: 5,\n        speed: 7,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"A dagger crafted meticulously with the magisteel alloy and also encrusted with runes. This along with an enchantment\" +\n        \" placed upon the blade makes it possible to enhance the dagger with some runes, and even without magic, the expert\" +\n        \" craftsmanship evident on the weapon makes it an effective combat tool.\",\n        sell_value: 300\n    },\n\n    slime_reinforced_sword: {\n        name: \"slime reinforced sword\",\n        type: \"weapon\",\n        atk: 3,\n        def: 1,\n        mdef: 3,\n        elemental: {\n            offence: { water: 10 },\n            defence: {},\n        },\n        element: \"water\",\n        desc: \"A basic sword reinforced with some slime. It is a little heavier and more dull but grants some more elemental\" +\n        \" defence.\",\n        sell_value: 50\n    },\n\n    wolfhide_dagger: {\n        name: \"wolfhide dagger\",\n        type: \"weapon\",\n        atk: 3,\n        speed: 6,\n        def: 1,\n        mdef: 1,\n        elemental: {\n            offence: {},\n            defence: { fire: 10 },\n        },\n        element: \"physical\",\n        desc: \"A simple dagger wherein the grip has been enhanced with grey wolf's skin.\",\n        sell_value: 50\n    },\n\n    pickaxe: {\n        name: \"pickaxe\",\n        type: \"weapon\",\n        atk: 3,\n        def: 2,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"It's a pickaxe. What more do you want?\",\n        sell_value: 25\n    },\n\n    earthen_sword: {\n        name: \"earthen sword\",\n        type: \"weapon\",\n        atk: 23,\n        def: 2,\n        matk: 6,\n        mdef: 4,\n        elemental: {\n            offence: {\n                earth: 15,\n                wind: -5\n            },\n            defence: {\n                earth: -6,\n                wind: 6,\n                fire: 10\n            },\n        },\n        element: \"earth\",\n        desc: \"A blade enhanced with the venom of a venomous wolf from the dark forest. It can't really poison enemies due\" +\n        \" the limited quantity of poison, but it does grant the sword some earthen qualities.\",\n        sell_value: 390\n    },\n\n    makeshift_sword: {\n        name: \"makeshift sword\",\n        type: \"weapon\",\n        atk: 3,\n        def: 1,\n        matk: 1,\n        mdef: 1,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"A sword of limited craftsmanship. Besides that, nothing of note regarding this weapon.\",\n        sell_value: 25\n    },\n\n    wolven_reavers: {\n        name: \"wolven reavers\",\n        type: \"weapon\",\n        atk: 4,\n        speed: 5,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"Small weapons fashioned from wolf claws and pelt. Easy to carry and useful for close range combat.\",\n        sell_value: 75\n    },\n\n    flamme_kaiser: {\n        name: \"flamme kaiser\",\n        type: \"weapon\",\n        atk: 35,\n        matk: 15,\n        elemental: {\n            offence: { fire: 20 },\n            defence: { fire: -5, water: 10, thunder: -5 },\n        },\n        element: \"fire\",\n        desc: \"An axe whose craftsmanship is indicative of something beyond the comprehension of even a decently-skilled\" +\n        \" artisan. Even though it should be far too heavy to hold, somehow it is comfortable in just one hand. The heat it\" +\n        \" emanates makes it difficult to hold, however.\",\n        sell_value: 1000\n    },\n\n    fishing_rod: {\n        name: \"fishing rod\",\n        type: \"weapon\",\n        atk: 5,\n        speed: 5,\n        crit_chance: 0.2,\n        elemental: {\n            offence: {  },\n            defence: {  },\n        },\n        element: \"physical\",\n        desc: \"An old fishing rod. You can tell it's used, and the wear of the old user's arms have given it a more comfortable\" +\n        \" grip. However, the compromise is the quality of the rod. It can clearly seen better days.\",\n        sell_value: 25\n    },\n\n    barren_sword: {\n        name: \"barren sword\",\n        type: \"weapon\",\n        atk: 30,\n        matk: 15,\n        speed: 5,\n        elemental: {\n            offence: {  },\n            defence: {  },\n        },\n        element: \"none\",\n        desc: \"There is a distinct lack of personaility and heart put into this sword, in spite of its elegance. Emotion\" +\n        \" is often a strong proponent of items made by skilled craftsmen, and seeing it completely absent in this weapon\" +\n        \" is a little... eerie. It emanates an unknown power.\",\n        sell_value: \"unsellable\"\n    },\n\n    hydra_staff: {\n        name: \"hydra staff\",\n        type: \"weapon\",\n        matk: 25,\n        atk: 15,\n        mdef: 5,\n        elemental: {\n            offence: { water: 20, fire: -5 },\n            defence: { water: -5, thunder: 5 },\n        },\n        element: \"water\",\n        desc: \"A staff that has been very elegantly crafted - a stick of what looks like ivory has had two white-and-cyan snake\" +\n        \"s wrapped around it, swirling in opposite directions until they meet at the top, just below a water orb.\" +\n        \" Or at least, that's what it looks like. If it were truly made from such materials, it would probably be much more\" +\n        \" power. Nevertheless, it seems to be a formidable weapon.\",\n        sell_value: \"unsellable\"\n    },\n\n    wooden_sword: {\n        name: \"wooden sword\",\n        type: \"weapon\",\n        matk: 1,\n        atk: 3,\n        elemental: {\n            offence: { },\n            defence: { },\n        },\n        element: \"physical\",\n        desc: \"A sword made from wood. It is a little unpleasant to look at, to be honest.\",\n        sell_value: 20\n    },\n\n    vine_wrapped_wooden_sword: {\n        name: \"vine wrapped wooden sword\",\n        type: \"weapon\",\n        matk: 3,\n        atk: 6,\n        elemental: {\n            offence: { earth: 5 },\n            defence: { earth: -2 },\n        },\n        element: \"physical\",\n        desc: \"A sword made from wood that has been enhanced with vines. The vines grant it a slight aestetic edge.\",\n        sell_value: 40\n    },\n\n    wooden_stave: {\n        name: \"wooden stave\",\n        type: \"weapon\",\n        matk: 3,\n        atk: 1,\n        elemental: {\n            offence: { },\n            defence: { },\n        },\n        element: \"physical\",\n        desc: \"A staff made from wood. It is a little unpleasant to look at, to be honest.\",\n        sell_value: 20\n    },\n\n    vine_wrapped_wooden_stave: {\n        name: \"vine wrapped wooden stave\",\n        type: \"weapon\",\n        matk: 6,\n        atk: 3,\n        elemental: {\n            offence: { earth: 5 },\n            defence: { earth: -2 },\n        },\n        element: \"physical\",\n        desc: \"A stave made from wood that has been enhanced with vines. The vines grant it a slight aestetic edge.\",\n        sell_value: 40\n    },\n\n    feathervine_sword: {\n        name: \"feathervine sword\",\n        type: \"weapon\",\n        matk: 5,\n        atk: 9,\n        elemental: {\n            offence: { wind: 5, earth: 5 },\n            defence: { wind: -2, earth: -2 },\n        },\n        element: \"physical\",\n        desc: \"This sword doesn't actually have feathers attached to it. But the wolf pelt used in it's creation has been\" +\n        \" frayed and split to the extent that they look a bit like feathered remains.\",\n        sell_value: 70\n    },\n\n    wolf_hermit_staff: {\n        name: \"wolf hermit staff\",\n        type: \"weapon\",\n        matk: 10,\n        atk: 7,\n        elemental: {\n            offence: { physical: 15 },\n            defence: { },\n        },\n        element: \"physical\",\n        desc: \"This item uses the remains of wolves to capture their essence and in doing so, enhance one's attacks with the\" +\n        \" magic enherent within a grey wolf. The claws it is embroidered with look like charms worn by a hermit.\",\n        sell_value: 80\n    },\n\n    thunder_rod: {\n        name: \"thunder rod\",\n        type: \"weapon\",\n        matk: 10,\n        atk: 10,\n        elemental: {\n            offence: { thunder: 10 },\n            defence: { },\n        },\n        element: \"thunder\",\n        desc: \"A rod enchanted with simple thunder magic. Used by fighters of all types as a way of easily aligning one's\" +\n        \" attacks with the thunder element.\",\n        sell_value: 150\n    },\n\n    forest_explorer_daggers: {\n        name: \"forest explorer daggers\",\n        type: \"weapon\",\n        atk: 8,\n        speed: 8,\n        resistance: 5,\n        mdef: 2,\n        def: 2,\n        elemental: {\n            offence: { earth: 10, dark: 3 },\n            defence: { earth: -5, physical: -5, dark: -2 },\n        },\n        element: \"earth\",\n        desc: \"A pair of daggers that seem to have aspects of various creatures found in the forest skillfully woven together\" +\n        \" into a pair of small blades. They also seem to have several enchantments upon them to make exploring the area\" +\n        \" easier. Whoever owned these must have known a lot about the place they were found..\",\n        sell_value: 250\n    },\n\n    earth_mage_staff: {\n        name: \"earth mage staff\",\n        type: \"weapon\",\n        atk: 6,\n        def: 5,\n        matk: 12,\n        mdef: 7,\n        resistance: 10,\n        elemental: {\n            offence: { earth: 15 },\n            defence: { earth: -5 },\n        },\n        element: \"earth\",\n        desc: \"A staff formed from enchanted bark. It feels a little hollow, but clearly has potent magic-channeling capabilities. It seems particualrly attuned to earth magic.\",\n        sell_value: 250\n    },\n\n    earth_magus_staff: {\n        name: \"earth magus staff\",\n        type: \"weapon\",\n        atk: 9,\n        def: 8,\n        matk: 16,\n        mdef: 10,\n        resistance: 15,\n        elemental: {\n            offence: { earth: 20 },\n            defence: { earth: -5 },\n        },\n        element: \"earth\",\n        desc: \"A staff formed from enchanted bark. It emanates a great power; in fact, it is likely that the power of the weapon is bottlenecked by the materials it is made from. If the full energy of the manasoul were used, the item would likely break immediately.\",\n        sell_value: 350\n    },\n\n    virulent_bracers: {\n        name: \"virulent bracers\",\n        type: \"weapon\",\n        atk: 15,\n        def: 7,\n        matk: 3,\n        mdef: 1,\n        effectiveness: 10,\n        elemental: {\n            offence: {\n                earth: 15,\n            },\n            defence: {\n                earth: -5,\n                physical: -5,\n                thunder: -10,\n            },\n        },\n        element: \"earth\",\n        desc: \"Bracers that cover most of the fist with a powerful material. From each bracer extends a fairly long and sharp spike dripping with a venomous substance.\",\n        sell_value: 250\n    },\n\n    living_virulent_bracers: {\n        name: \"living virulent bracers\",\n        type: \"weapon\",\n        atk: 20,\n        def: 10,\n        matk: 4,\n        mdef: 2,\n        effectiveness: 10,\n        elemental: {\n            offence: {\n                earth: 15,\n            },\n            defence: {\n                earth: -5,\n                physical: -5,\n                thunder: -10,\n            },\n        },\n        crit_chance: 0.05,\n        crit_damage: 0.2,\n        element: \"earth\",\n        desc: \"Bracers that cover most of the fist with a powerful material. From each bracer extends a fairly long and sharp spike dripping with a venomous substance. The spikes move in a fluid motion as though they have a life of their own -- and when fighting, they claw and jab at the opponent, enhancing your strikes to deal greater damage.\",\n        sell_value: 250\n    },\n\n    deep_forest_explorer_scythe: {\n        name: \"deep forest explorer scythe\",\n        type: \"weapon\",\n        atk: 13,\n        def: 5,\n        matk: 5,\n        speed: 7,\n        resistance: 10,\n        elemental: {\n            offence: {\n                earth: 15,\n            },\n            defence: {\n                earth: -6,\n            },\n        },\n        element: \"earth\",\n        desc: \"A scythe is a bit of a weird weapon, and not very nice to use in a dense forest. But the range it grants is nice, and the curved edge allows for some interesting offensive options.\",\n        sell_value: 250\n    },\n    //#endregion\n\n\n    // HEAD\n    //#region \n    damaged_helm: {\n        name: \"damaged helm\",\n        type: \"head\",\n        def: 7,\n        mdef: 3,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n                fire: 1,\n            }\n        },\n        element: \"physical\",\n        desc: \"A damaged helm. The perforations in the front may help the user to see better. The ones in the back, not so much.\",\n        sell_value: 100\n    },\n\n    leather_cap: {\n        name: \"damaged helm\",\n        type: \"head\",\n        def: 5,\n        mdef: 2,\n        elemental: {\n            offence: {},\n            defence: {}\n        },\n        element: \"physical\",\n        desc: \"A cap made of brown leather.\",\n        sell_value: 20\n    },\n\n    silver_helm: {\n        name: \"damaged helm\",\n        type: \"head\",\n        def: 3,\n        mdef: 2,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -2,\n                water: -2,\n                fire: 2,\n            }\n        },\n        element: \"physical\",\n        desc: \"A silver helm. It is not a full helm, instead protecting the neck and head. Offers less protection than a full\" +\n        \" helm but does not restrict movement or sight.\",\n        sell_value: 50\n    },\n\n    advanced_silver_helm: {\n        name: \"advanced silver helm\",\n        type: \"head\",\n        def: 8,\n        mdef: 4,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n                water: -5,\n                fire: 3,\n            }\n        },\n        element: \"physical\",\n        desc: \"A helm made of impressive silver. It has more coverage than some lower end helmets but is still fairly free, at\" +\n        \" the cost of protection.\",\n        sell_value: 80\n    },\n\n    silver_knight_helm: {\n        name: \"silver knight helm\",\n        type: \"head\",\n        def: 10,\n        mdef: 5,\n        speed: -5,\n        evasion: -0.1,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n                water: -5,\n                fire: 3,\n            }\n        },\n        element: \"physical\",\n        desc: \"A knight's helm made of silver. It covers the face completely, but the limited view makes it harder to accurately\" +\n        \" move about and evade attacks.\",\n        sell_value: 200\n    },\n\n    ninja_wrap: {\n        name: \"ninja wrap\",\n        type: \"head\",\n        def: 2,\n        mdef: 1,\n        speed: 5,\n        elemental: {\n            offence: {},\n            defence: {\n                dark: -2,\n                light: 5\n            }\n        },\n        element: \"dark\",\n        desc: \"Black cloth intricately wrapped such that it can be wore on the head, hiding most of the face. Offers almost\" +\n        \" no protection but does not restrict movement at all.\",\n        sell_value: 90\n    },\n\n    wizard_headband: {\n        name: \"wizard headband\",\n        type: \"head\",\n        def: 1,\n        mdef: 4,\n        matk: 3,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"Stereotypical wizard hats are worn by many but often cannot function as much more than a fashion piece. This\" +\n        \" wizard headband, crafted from silver with a small gem at the center is designed to enhance spells cast by the wielder.\",\n        sell_value: 70\n    },\n\n    enchanted_wooden_helm: {\n        name: \"enchanted wooden helm\",\n        type: \"helm\",\n        def: 5,\n        mdef: 2,\n        elemental: {\n            offence: {},\n            defence: {\n                water: -10,\n                fire: 30,\n                physical: -5\n            }\n        },\n        element: \"physical\",\n        desc: \"One would assume that a wooden helm would be very ineffective, but it seems to have been enchanted that prevents\" +\n        \" it from fragmenting and greatly increases its water absorbance.\",\n        sell_value: 75\n    },\n\n    wolfhide_cap: {\n        name: \"wolfhide cap\",\n        type: \"head\",\n        def: 1,\n        mdef: 1,\n        speed: 2,\n        elemental: {\n            offence: {\n                physical: 5\n            },\n            defence: {\n                earth: -5,\n            }\n        },\n        element: \"physical\",\n        desc: \"A cap fashioned from grey wolves hide. It doesn't offer much protection but does look quite nice!\",\n        sell_value: 50\n    },\n\n    water_infused_helm: {\n        name: \"water infused helm\",\n        type: \"head\",\n        def: 8,\n        mdef: 6,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n                water: -10,\n                fire: -5,\n            }\n        },\n        element: \"water\",\n        desc: \"A metal helm infused with water mana. Surprisingly, the water magic does not change how the helm feels to wear\" +\n        \". Grants some nice protection against the elements.\",\n        sell_value: 120\n    },\n\n    makeshift_steel_helm: {\n        name: \"makeshift steel helm\",\n        type: \"head\",\n        def: 2,\n        mdef: 1,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -3\n            }\n        },\n        element: \"physical\",\n        desc: \"The artisanship observed with this helm is fairly weak. It's clear it was made by someone fairly inexperienced\",\n        sell_value: 50\n    },\n\n    shinobi_headcloak: {\n        name: \"shinobi headcloak\",\n        type: \"head\",\n        def: 8,\n        mdef: 6,\n        speed: 5,\n        evasion: 0.05,\n        crit_chance: 0.1,\n        elemental: {\n            offence: {},\n            defence: {\n                dark: -12,\n                physical: -5,\n                light: 15\n            }\n        },\n        element: \"dark\",\n        desc: \"Basic black fabric that stealthy fighters use to hide their faces has been enhanced with the pelt of dark beasts\" +\n        \". Just like their skin, it has an ethereal quality.\",\n        sell_value: 400\n    },\n\n    vine_helmet: {\n        name: \"vine helmet\",\n        type: \"head\",\n        def: 3,\n        mdef: 4,\n        elemental: {\n            offence: {},\n            defence: {\n                earth: -5,\n                physical: -5,\n                fire: 20,\n                water: -2,\n                thunder: -2\n            }\n        },\n        element: \"earth\",\n        desc: \"Vines from a teravalum that looks a bit like a helmet. Better than nothing but since it's not designed to be\" +\n        \" a helmet, but it's a little uncomfortable.\",\n        sell_value: 35\n    },\n\n    crown_of_darkness: {\n        name: \"crown of darkness\",\n        type: \"head\",\n        def: 10,\n        mdef: 7,\n        evasion: 0.1,\n        elemental: {\n            offence: { dark: 10, physical: 5 },\n            defence: {\n                dark: -10,\n                light: 15,\n                physical: -5,\n            }\n        },\n        element: \"dark\",\n        desc: \"A small crown-looking headpiece. It is entirely black but unlike shadow pelts, completely solid. It is quite\" +\n        \" difficult to tell what material this item is made from, although it is imbued with magical power.\",\n        sell_value: \"unsellable\"\n    },\n\n    leather_cap: {\n        name: \"leather cap\",\n        type: \"head\",\n        def: 3,\n        mdef: 4,\n        elemental: {\n            offence: {},\n            defence: {}\n        },\n        element: \"physical\",\n        desc: \"A cap made of brown leather. Uncomfortable and not practical. Is this even helpful?\",\n        sell_value: 20\n    },\n\n    forest_explorer_cap: {\n        name: \"forest explorer cap\",\n        type: \"head\",\n        def: 8,\n        mdef: 7,\n        resistance: 5,\n        elemental: {\n            offence: {},\n            defence: { earth: -10, physical: -5, dark: -5 }\n        },\n        element: \"earth\",\n        desc: \"The cap of an experienced explorer of the forest. It seems to have several enchantments placed upon it\" +\n        \" designed to aid someone in a normal forest. Whoever previously owned these must have known a lot about the area\" +\n        \" in which they were found...\",\n        sell_value: 250\n    },\n\n    geomancers_hood: {\n        name: \"geomancer's hood\",\n        type: \"head\",\n        matk: 5,\n        def: 6,\n        mdef: 6,\n        elemental: {\n            offence: { earth: 5 },\n            defence: {\n                earth: -5,\n                thunder: -6,\n                fire: 10,\n                water: -2\n            }\n        },\n        element: \"earth\",\n        desc: \"A hood woven with magic bark. It is brown, embroidered with patterns of lighter brown. It emanates considerable magical energy.\",\n        sell_value: 150\n    },\n\n    virulent_brawler_helm: {\n        name: \"virulent brawler helm\",\n        type: \"head\",\n        def: 12,\n        mdef: 4,\n        elemental: {\n            offence: { earth: 5 },\n            defence: {\n                earth: -2,\n                thunder: -6,\n                fire: 15,\n                water: -2,\n                physical: -5\n            }\n        },\n        element: \"earth\",\n        desc: \"A helmet designed for effective closeup combat. It doesn't cover enough to block one's side vision, but is fairly protective otherwise.\",\n        sell_value: 150\n    },\n\n    deep_forest_explorer_cap: {\n        name: \"deep forest explorer cap\",\n        type: \"head\",\n        def: 4,\n        mdef: 8,\n        atk: 3,\n        matk: 3,\n        elemental: {\n            offence: { earth: 5 },\n            defence: {\n                earth: -8,\n            }\n        },\n        element: \"earth\",\n        desc: \"The cap of a deep forest explorer. It is a dark green that blends well into the surroundings. It doesn't do much in the way of protecting the head, and seems ot be more of a magically-enchanted item.\",\n        sell_value: 150\n    },\n\n    //#endregion\n\n\n    // BODY\n    //#region\n    damaged_armour: {\n        name: \"damaged armour\",\n        type: \"body\",\n        def: 6,\n        mdef: 7,\n        speed: -5,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n                fire: 1\n            }\n        },\n        element: \"physical\",\n        desc: \"A damaged chestplate. The damage to the ligaments would increase one's agility were it not for the rusting\" +\n        \" forcing one to move against the resistance of the joints.\",\n        sell_value: 100\n    },\n\n    leather_armour: {\n        name: \"leather armour\",\n        type: \"body\",\n        def: 4,\n        mdef: 3,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n                fire: 1\n            }\n        },\n        element: \"physical\",\n        desc: \"A chestplate made of leather.\",\n        sell_value: 20\n    },\n\n    silver_armour: {\n        name: \"silver armour\",\n        type: \"body\",\n        def: 5,\n        mdef: 4,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n                water: -5,\n                fire: 2,\n            }\n        },\n        element: \"physical\",\n        desc: \"Armour designed to protect the main vulnerable part of the body, leaving a chainmail pattern around the joints\" +\n        \" for movement. Not expertly cafted, but well made nonetheless.\",\n        sell_value: 50\n    },\n\n    advanced_silver_armour: {\n        name: \"advanced silver armour\",\n        type: \"body\",\n        def: 8,\n        mdef: 4,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n                water: -5,\n                fire: 2,\n            }\n        },\n        element: \"physical\",\n        desc: \"An armour made almost entirely of silver. The joints use overlapping and interlocking pieces of iron to enable\" +\n        \" movement while facilitating good protection.\",\n        sell_value: 80\n    },\n\n    silver_knight_armour: {\n        name: \"silver knight armour\",\n        type: \"body\",\n        def: 13,\n        mdef: 7,\n        speed: -5,\n        evasion: -0.1,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n                water: -5,\n                fire: 3,\n            }\n        },\n        element: \"physical\",\n        desc: \"A complete silver knight's armour. It still allows movement at the joints, but still restricts movement slightly.\" +\n        \" In exchange, the wearer is granted greater defenses.\",\n        sell_value: 200\n    },\n\n    ninja_garb: {\n        name: \"ninja garb\",\n        type: \"body\",\n        def: 5,\n        mdef: 2,\n        speed: 10,\n        evasion: 0.1,\n        elemental: {\n            offence: {},\n            defence: {\n                dark: -5,\n                light: 10,\n            }\n        },\n        element: \"dark\",\n        desc: \"The equivalent of a chestplate for a ninja. It is made of a thin black fabric that offers little protection but\" +\n        \" allows for quick movement without detection.\",\n        sell_value: 130\n    },\n\n    light_wizard_robes: {\n        name: \"light wizard robes\",\n        type: \"body\",\n        def: 3,\n        mdef: 7,\n        matk: 7,\n        elemental: {\n            offence: {},\n            defence: {\n            }\n        },\n        element: \"physical\",\n        desc: \"Grey and blue wizard robes are often worn by new mages. They have a light enchant to enhance spells cast by the\" +\n        \" user, are comfortable to move about in and are fairly stylish.\",\n        sell_value: 70\n    },\n\n    tattered_magus_robes: {\n        name: \"tattered magus robes\",\n        type: \"body\",\n        def: 5,\n        mdef: 10,\n        matk: 9,\n        elemental: {\n            offence: {},\n            defence: {\n            }\n        },\n        element: \"physical\",\n        desc: \"Magi are extremely powerful magic users. Becaue of the powerful magic they use, spellcaster garb that they wear\" +\n        \" can wear out quickly. Some magi discard them and others donate them. These robes seem to have sustained a lot of damage\" +\n        \", but are still better than most beginners wear. \",\n        sell_value: 140\n    },\n\n    wolfhide_armour: {\n        name: \"wolfhide armour\",\n        type: \"body\",\n        def: 3,\n        mdef: 2,\n        speed: 5,\n        elemental: {\n            offence: { physical: 5 },\n            defence: { earth: -7 }\n        },\n        element: \"physical\",\n        desc: \"Armour fashioned from grey wolf hide. It is comfortable and enabled great movement.\",\n        sell_value: 50\n    },\n\n    water_infused_armour: {\n        name: \"water infused armour\",\n        type: \"body\",\n        def: 8,\n        mdef: 7,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n                water: -10,\n                fire: -5,\n            }\n        },\n        element: \"water\",\n        desc: \"Metal armour enhanced with water magic. Grants increased defence against the elements.\",\n        sell_value: 120\n    },\n\n    makeshift_steel_armour: {\n        name: \"makeshift steel armour\",\n        type: \"body\",\n        def: 4,\n        mdef: 3,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n            }\n        },\n        element: \"physical\",\n        desc: \"Makeshift steel armour. Not made very well, but grants rudimentary protection.\",\n        sell_value: 50\n    },\n\n    shinobi_armour: {\n        name: \"shinobi armour\",\n        type: \"body\",\n        def: 10,\n        mdef: 8,\n        speed: 8,\n        evasion: 0.05,\n        crit_chance: 0.1,\n        elemental: {\n            offence: {},\n            defence: {\n                dark: -8,\n                physical: -5,\n                light: 12\n            }\n        },\n        element: \"dark\",\n        desc: \"Body wear worn by stealth fighters enhanced with the pelt of a dark beast. Having part of them on you makes\" +\n        \" you feel a little like a dark beast yourself.\",\n        sell_value: 400\n    },\n\n    shadow_cloak: {\n        name: \"Shadow cloak\",\n        type: \"body\",\n        def: 13,\n        mdef: 10,\n        speed: 15,\n        evasion: 0.1,\n        crit_chance: 0.1,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -10,\n                dark: -15,\n                light: 15\n            }\n        },\n        element: \"physical\",\n        desc: \"A cloak that looks as though it was fashioned from darkness itself. It cannot be felt physically when worn\" +\n        \" but its power can still be felt.\",\n        sell_value: 600\n    },\n\n    bladed_armour: {\n        name: \"bladed armour\",\n        type: \"body\",\n        def: 5,\n        mdef: 3,\n        atk: 5,\n        elemental: {\n            offence: {},\n            defence: {\n                physical: -5,\n            }\n        },\n        element: \"physical\",\n        desc: \"Simple armour with claws used to grant the wearer an offensive edge.\",\n        sell_value: 120\n    },\n\n    vine_armour: {\n        name: \"vine armour\",\n        type: \"body\",\n        def: 4,\n        mdef: 4,\n        speed: -2,\n        elemental: {\n            offence: {},\n            defence: {\n                fire: 5,\n                earth: -2,\n            },\n        },\n        element: \"earth\",\n        desc: \"Armour fashioned from vines. It's surprisingly comofrtable, but grants little insulation.\",\n        sell_value: 20\n    },\n    \n    wooden_armour: {\n        name: \"wooden armour\",\n        type: \"body\",\n        def: 3,\n        mdef: 3,\n        elemental: {\n            offence: {},\n            defence: {\n            },\n        },\n        element: \"earth\",\n        desc: \"Armour made from wood. You could get splinters wearing this!\",\n        sell_value: 15\n    },\n\n    strong_vine_chestplate: {\n        name: \"strong vine chestplate\",\n        type: \"body\",\n        def: 6,\n        mdef: 6,\n        elemental: {\n            offence: {},\n            defence: {\n                fire: 4,\n                earth: -3,\n                physical: -2\n            },\n        },\n        element: \"earth\",\n        desc: \"Armour from vines enhanced with hempwood ligaments. The use of the flexible but strong ligaments allows for\" +\n        \" better movement, and they cover vulnerable gaps present in armour without it.\",\n        sell_value: 45\n    },\n\n    leather_amour: {\n        name: \"leather armour\",\n        type: \"body\",\n        def: 4,\n        mdef: 4,\n        elemental: {\n            offence: {},\n            defence: {},\n        },\n        element: \"physical\",\n        desc: \"Armour made from leather. Fairly comfortable to move in but doesn't help keep you alive that much.\",\n        sell_value: 30\n    },\n\n    forest_explorer_armour: {\n        name: \"forest explorer armour\",\n        type: \"body\",\n        def: 10,\n        mdef: 7,\n        resistance: 5,\n        elemental: {\n            offence: {},\n            defence: { earth: -10, physical: -5, dark: -3 }\n        },\n        element: \"earth\",\n        desc: \"A pair of daggers that seem to have aspects of various creatures found in the forest skillfully woven together\" +\n        \" into it. They also seem to have several enchantments upon them to make exploring the area\" +\n        \" easier. Whoever owned these must have known a lot about the place they were found..\",\n        sell_value: 250\n    },\n\n    geomancers_cloak: {\n        name: \"geomancer's cloak\",\n        type: \"body\",\n        matk: 7,\n        def: 7,\n        mdef: 8,\n        elemental: {\n            offence: { earth: 10 },\n            defence: {\n                earth: -7,\n                thunder: -10,\n                water: -3,\n                fire: 10\n            }\n        },\n        element: \"earth\",\n        desc: \"The cloak of a geomancer. It is various shades of brown and emanates a fairly strong magical aura. Those well attuned with earth magic would notice something like this from a far distance away.\",\n        sell_value: 250\n    },\n\n    virulent_brawler_plates: {\n        name: \"virulent brawler plates\",\n        type: \"body\",\n        atk: 3,\n        def: 13,\n        elemental: {\n            offence: { earth: 5 },\n            defence: {\n                earth: -7,\n                thunder: -10,\n                water: -3,\n                fire: 10,\n                physical: -5\n            }\n        },\n        element: \"earth\",\n        desc: \"The chestplate of a brawler, made with various items found in the F1 Deep Forest. There are many places wherein there is not much protection to allow for flexible joint movement. However the vital spaces that are covered are shielded by a very tough material.\",\n        sell_value: 250\n    },\n\n    deep_forest_explorer_armour: {\n        name: \"deep forest explorer armour\",\n        type: \"body\",\n        atk: 2,\n        matk: 2,\n        mdef: 6,\n        def: 8,\n        elemental: {\n            offence: { earth: 5 },\n            defence: {\n                earth: -12,\n            }\n        },\n        element: \"earth\",\n        desc: \"Green armour that seems fashioned primarily from forest scourge scales. It is comfortable and highly flexible.\",\n        sell_value: 250\n    },\n    //#endregion\n\n\n    // LEGS\n    //#region \n    damaged_pantaloons: {\n        name: \"damaged pantaloons\",\n        type: \"legs\",\n        def: 5,\n        mdef: 3,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                physical: -5,\n                fire: 1\n            }\n        },\n        element: \"physical\",\n        desc: \"Damaged pantaloons. They're pretty uncomfortable, and rapid movement causes them to make a sound that hurts the\" +\n        \" ear. Also, pantaloons is such a silly sounding word.\",\n        sell_value: 100\n\n    },\n\n    leather_pants: {\n        name: \"leather pants\",\n        type: \"legs\",\n        def: 4,\n        mdef: 3,\n        elemental: {\n            offence: {\n            },\n            defence: {}\n        },\n        element: \"physical\",\n        desc: \"Trousers made of brown leather.\",\n        sell_value: 20\n\n    },\n\n    silver_legwear: {\n        name: \"silver legwear\",\n        type: \"legs\",\n        def: 3,\n        mdef: 2,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                physical: -4,\n                water: -3,\n                fire: 2,\n            }\n        },\n        element: \"physical\",\n        desc: \"Silver legwear. There is some type of fabric protecting the legs down to the knees, beyond which silver armour\" +\n        \" is present.\",\n        sell_value: 50\n\n    },\n\n    advanced_silver_legwear: {\n        name: \"advanced silver legwear\",\n        type: \"legs\",\n        def: 6,\n        mdef: 3,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                physical: -5,\n                water: -5,\n                fire: 2,\n            }\n        },\n        element: \"physical\",\n        desc: \"Advanced silver legwear. It uses relatively advanced craftsmanship to allow movement at the joints with overlapping\" +\n        \" and interlocking pieces of silver.\",\n        sell_value: 80\n\n    },\n\n    silver_knight_legwear: {\n        name: \"silver knight legwear\",\n        type: \"legs\",\n        def: 10,\n        mdef: 7,\n        speed: -10,\n        evasion: -0.1,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                physical: -5,\n                water: -5,\n                fire: 3,\n            }\n        },\n        element: \"physical\",\n        desc: \"Legwear made of silver used by knights. There is a considerable compromise in movement in exchange for improved\" +\n        \" defenses.\",\n        sell_value: 200\n\n    },\n\n    ninja_legwear: {\n        name: \"ninja legwear\",\n        type: \"legs\",\n        def: 7,\n        mdef: 3,\n        speed: 10,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                dark: -2,\n                light: 10,\n            }\n        },\n        element: \"dark\",\n        desc: \"Plain black legwear that looks a little like joggings. They offer great movement and are very comfortable, and\" +\n        \" seem to have been lightly enchanted for a little protection\",\n        sell_value: 90\n\n    },\n\n    light_wizard_leggings: {\n        name: \"light wizard leggings\",\n        type: \"legs\",\n        def: 2,\n        mdef: 5,\n        matk: 3,\n        elemental: {\n            offence: {\n            },\n            defence: {\n            }\n        },\n        element: \"physical\",\n        desc: \"Simple legwear designed to synergise aesthetically with simple wizard robes. Has a light enchant to boost magical\" +\n        \" power.\",\n        sell_value: 70\n\n    },\n\n    wolfhide_leggings: {\n        name: \"wolfhide leggings\",\n        type: \"legs\",\n        def: 1,\n        mdef: 2,\n        speed: 3,\n        elemental: {\n            offence: {\n                physical: 5\n            },\n            defence: { earth: -5 }\n        },\n        element: \"physical\",\n        desc: \"Legwewar fasioned from grey wolf's hide. It is comfortable, and allows for great movement.\",\n        sell_value: 50\n\n    },\n\n    water_infused_legwear: {\n        name: \"water infused legwear\",\n        type: \"legs\",\n        def: 6,\n        mdef: 5,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                physical: -5,\n                water: -10,\n                fire: -5,\n            }\n        },\n        element: \"water\",\n        desc: \"Basic metal armour infused with water magic. Asides from enhanced physical protection, it also grants some\" +\n        \" defence against the elements.\",\n        sell_value: 120\n\n    },\n\n    makeshift_steel_legwear: {\n        name: \"makeshift steel legwear\",\n        type: \"legs\",\n        def: 2,\n        mdef: 1,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                physical: -4,\n            }\n        },\n        element: \"physical\",\n        desc: \"Steel legwear made somewhat poorly, but not unwearable. Seems like it might fall apart after some use.\",\n        sell_value: 50\n\n    },\n\n    shinobi_leggings: {\n        name: \"shinobi leggings\",\n        type: \"legs\",\n        def: 9,\n        mdef: 5,\n        speed: 10,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                dark: -9,\n                physical: -5,\n                light: 12\n            }\n        },\n        element: \"dark\",\n        desc: \"Plain black legwear that looks a little like joggings, but that have been enhanced using the pelt of a dark\" +\n        \" beast. Quite comfortable, but have an ethereal quality to them.\",\n        sell_value: 400\n\n    },\n\n    vine_pantaloons: {\n        name: \"vine pantaloons\",\n        type: \"legs\",\n        def: 2,\n        mdef: 2,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                fire: 3,\n                earth: -2\n            }\n        },\n        element: \"earth\",\n        desc: \"Trousers fashioned from vines. It's surprisingly comofrtable, but grants little insulation.\",\n        sell_value: 15\n\n    },\n\n    wooden_trousers: {\n        name: \"wooden trousers\",\n        type: \"legs\",\n        def: 1,\n        mdef: 1,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                fire: 3,\n            }\n        },\n        element: \"physical\",\n        desc: \"Trousers crudely made from wood. You could get splinters from these!\",\n        sell_value: 10\n\n    },\n\n    leather_pants: {\n        name: \"leather pants\",\n        type: \"legs\",\n        def: 2,\n        mdef: 2,\n        elemental: {\n            offence: {\n            },\n            defence: {}\n        },\n        element: \"physical\",\n        desc: \"Trousers fashioned entirely from brown leather. Comfortable to wear but do not offer great protecton.\",\n        sell_value: 15\n\n    },\n\n    forest_explorer_pants: {\n        name: \"forest explorer pants\",\n        type: \"legs\",\n        def: 9,\n        mdef: 6,\n        resistance: 5,\n        elemental: {\n            offence: {\n            },\n            defence: { earth: -10, physical: -5, dark: -3}\n        },\n        element: \"earth\",\n        desc: \"Legwear that somehow has aspects of all the creatures found in the F1 forest woven together and still looks\" +\n        \" nice. It also seems to have various enchantments placed upon it aimed to grant an advantage to the wearer against\" +\n        \" the enemies found in the area. Whoever previously owned these must have known a lot about the place they were found..\",\n        sell_value: 250\n\n    },\n\n    geomancers_lower_robes: {\n        name: \"geomancer's lower robes\",\n        type: \"legs\",\n        def: 3,\n        mdef: 6,\n        matk: 5,\n        elemental: {\n            offence: {\n                earth: 5\n            },\n            defence: {\n                earth: -6,\n                thunder: -6,\n                fire: 12,\n                water: -3\n            }\n        },\n        element: \"earth\",\n        desc: \"The lower cloak of a geomancer, for covering their legs and feet. It is various shades of brown and emanates a fairly strong magical aura. Those well attuned with earth magic would notice something like this from a far distance away.\",\n        sell_value: 150\n\n    },\n\n    virulent_brawler_leg_guards: {\n        name: \"virulent brawler leg guards\",\n        type: \"legs\",\n        def: 10,\n        mdef: 5,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                earth: -2,\n                thunder: -6,\n                fire: 15,\n                water: -2,\n                physical: -5\n            }\n        },\n        element: \"earth\",\n        desc: \"'Armour' is probably the wrong word to describe this equipment; it is closer to a few plates protection joints such as the knees, since much more could hinder the amount of maneouvrability required for success with this battle style. The plates are very strong, however, and an experienced brawler could probably use the leg guards creatively to block some attacks.\",\n        sell_value: 150\n\n    },\n\n    deep_forest_explorer_pants: {\n        name: \"deep forest explorer pants\",\n        type: \"legs\",\n        def: 8,\n        mdef: 5,\n        elemental: {\n            offence: {\n                earth: 5\n            },\n            defence: {\n                earth: -8,\n            }\n        },\n        element: \"earth\",\n        desc: \"The pants of a deep forest explorer. It grants good camoflague in a forest, and forest scourge scales seem to be protecting important joints like the knees.\",\n        sell_value: 150\n\n    },\n\n\n    //#endregion\n\n\n    //MISC\n    //#region \n\n    villageseeker_charm: {\n        name: \"Villageseeker Charm\",\n        type: \"misc\",\n        atk: 1,\n        def: 1,\n        matk: 1,\n        mdef: 1,\n        speed: 1,\n        elemental: {\n            offence: {\n                all: 10\n            },\n            defence: {\n                all: -10\n            }\n        },\n        element: \"light\",\n        desc: \"Evidence of one who reached the small village settlement on the outskirts of the forest. Congratulations, and thanks for playing TRPG!\",\n        sell_value: \"unsellable\"\n    },\n\n    shadowwarding_pendant: {\n        name: \"Shadowwarding Pendant\",\n        type: \"misc\",\n        atk: 5,\n        def: 5,\n        matk: 7,\n        mdef: 8,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                dark: -10,\n                light: 10\n            }\n        },\n        element: \"physical\",\n        desc: \"A short pendant with a silver chain. On the front seems to be a small, dark purple crystal. It seems\" +\n        \" that the pendant is designed to defend against the more dangerous creatures in the dark forest.\",\n        sell_value: 500\n    },\n\n    slime_bracers: {\n        name: \"Slime bracers\",\n        type: \"misc\",\n        def: 3,\n        mdef: 4,\n        speed: -3,\n        resistance: 5,\n        elemental: {\n            offence: {\n                water: 10\n            },\n            defence: {\n                water: -5,\n                fire: -10,\n                thunder: 10\n            }\n        },\n        element: \"water\",\n        desc: \"Bracers for defending one's arms fashioned from slime. The solid and slightly sticky substance offers\" +\n        \" fairly good elemental protection but stunts one's ability to move somewhat.\",\n        sell_value: 30\n    },\n\n    wolfhide_charm: {\n        name: \"Wolfhide charm\",\n        type: \"misc\",\n        atk: 4,\n        def: 3,\n        mdef: 2,\n        speed: 3,\n        evasion: 0.05,\n        crit_chance: 0.1,\n        elemental: {\n            offence: {\n                physical: 8\n            },\n            defence: {\n                fire: 10,\n            }\n        },\n        element: \"physical\",\n        desc: \"A charm fashioned from wolf pelts. The residual inherent mana of the wolves seems to grant the charm\" +\n        \" some special qualities.\",\n        sell_value: 60\n    },\n\n    lizard_bracelet: {\n        name: \"Lizard bracelet\",\n        type: \"misc\",\n        atk: 7,\n        def: 4,\n        mdef: 3,\n        evasion: 0.1,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                fire: -5,\n            }\n        },\n        element: \"water\",\n        desc: \"Small parts of lizard tails were wrapped intricately together to create a bracelet. It is quite pretty, \"+\n        \"and seems to have some magical properties.\",\n        sell_value: 100\n    },\n\n    aquus_orb: {\n        name: \"Aquus orb\",\n        type: \"misc\",\n        matk: 7,\n        mdef: 6,\n        resistance: 10,\n        elemental: {\n            offence: {\n                water: 10,\n                fire: -10\n            },\n            defence: {\n                water: -15,\n                fire: -6,\n                thunder: 12\n            }\n        },\n        element: \"water\",\n        desc: \"Aquus clusters condensed to form a small orb capable of enhancing the capabilities of the wielder.\",\n        sell_value: 100\n    },\n\n    luminant_charm: {\n        name: \"Luminant charm\",\n        type: \"misc\",\n        matk: 5,\n        atk: 5,\n        mdef: 6,\n        speed: 2,\n        elemental: {\n            offence: {\n                light: 10\n            },\n            defence: {\n                light: -5,\n                dark: -10\n            }\n        },\n        element: \"light\",\n        desc: \"A simple charm enhanced with the luminescent eye of a water lizard. Can be worn on jewelry or held in\" +\n        \" a pocket.\",\n        sell_value: 150\n    },\n    \n    tear_of_lucia: {\n        name: \"Tear of lucia\",\n        type: \"misc\",\n        matk: 7,\n        mdef: 7,\n        resistance: 5,\n        elemental: {\n            offence: {\n                water: 20\n            },\n            defence: {\n                water: -15,\n                fire: -10,\n                dark: -5,\n                light: -5,\n                earth: -5,\n                thunder: -5,\n                wind: -5\n            }\n        },\n        element: \"water\",\n        desc: \"A manasoul condensed using a makeshift orb into a very small space. The compactness of the charm causes\" +\n        \" the mana inside the be quite powerful. Items of this nature are called 'Tears of Lucia' as it believed that the\" +\n        \" tears of the Solace goddess will grant any who observes them inpenetrable safety, and the mana of this item for\" +\n        \" some reason has a very soothing aura.\",\n        sell_value: 350\n    },\n\n    lores_legacy: {\n        name: \"Lore's Legacy\",\n        type: \"misc\",\n        atk: 5,\n        def: 5,\n        matk: 5,\n        mdef: 5,\n        speed: 5,\n        elemental: {\n            offence: {\n                all: 7\n            },\n            defence: {\n                all: -7,\n            }\n        },\n        element: \"light\",\n        desc: \"A trinket previously owned by a man who adventured with a girl named Lucia. After a fearsome encounter one day, she disappeared after making a deal with a higher being,\" +\n        \" and he never saw her again. It is said that the first thing he did after the event is return to Arlam, his hometown, however since he\" +\n        \" was now blind, he received help along the way from adventurers he met. Some of them stuck around with him, and they formed an team.\" +\n        \" They then became renowned adventurers, and later Wanderers.\",\n        sell_value: \"unsellable\"\n    },\n\n    red_slime_bracers: {\n        name: \"Red slime bracers\",\n        type: \"misc\",\n        def: 9,\n        mdef: 13,\n        speed: -5,\n        resistance: 5,\n        crit_damage: 0.1,\n        elemental: {\n            offence: {\n                fire: 10\n            },\n            defence: {\n                water: 5,\n                fire: -13,\n                thunder: -5\n            }\n        },\n        element: \"water\",\n        desc: \"Bracers for defending one's arms fashioned from red slime. It is more solid than blue slime and has\" +\n        \" different elemental properties.\",\n        sell_value: 300\n    },\n\n    special_armband: {\n        name: \"Special armband\",\n        type: \"misc\",\n        atk: 3,\n        def: 3,\n        matk: 3,\n        mdef: 3,\n        speed: 3,\n        max_stamina: 60,\n        max_mana: 60,\n        elemental: {\n            offence: {\n                all: 5\n            },\n            defence: {\n                all: -5\n            }\n        },\n        element: \"physical\",\n        desc: \"A simple bracelet that promotes spirituality. It's a little tight..\",\n        sell_value: 200\n    },\n    \n    friendly_slime: {\n        name: \"Friendly slime\",\n        type: \"misc\",\n        def: 9,\n        mdef: 13,\n        resistance: 5,\n        max_mana: 20,\n        max_stamina: 5,\n        elemental: {\n            offence: {\n                water: 20\n            },\n            defence: {\n                water: -7,\n                fire: -8,\n                thunder: 15\n            }\n        },\n        element: \"water\",\n        desc: \"A slime to help you in battle! Where'd you find this little guy?\",\n        sell_value: 250\n    },\n\n    friendly_greater_slime: {\n        name: \"Friendly greater slime\",\n        type: \"misc\",\n        def: 15,\n        mdef: 20,\n        resistance: 5,\n        max_mana: 30,\n        max_stamina: 5,\n        elemental: {\n            offence: {\n                water: 25\n            },\n            defence: {\n                water: -10,\n                fire: -10,\n                thunder: 15\n            }\n        },\n        element: \"water\",\n        desc: \"A greater slime to help you in battle! Where'd you find this little guy?\",\n        sell_value: 400\n    },\n\n    vine_membrane_bracers: {\n        name: \"Vine membrance bracers\",\n        type: \"misc\",\n        atk: 2,\n        def: 5,\n        mdef: 4,\n        max_stamina: 5,\n        elemental: {\n            offence: {\n                earth: 10\n            },\n            defence: {\n                earth: -4,\n                fire: 4\n            }\n        },\n        element: \"earth\",\n        desc: \"Bracers made from vines and hempweed ligaments. They offer a good mixture of offence and defence.\",\n        sell_value: 40\n    },\n\n    water_orb_necklace: {\n        name: \"Water orb necklace\",\n        type: \"misc\",\n        matk: 10,\n        def: 5,\n        mdef: 10,\n        max_mana: 50,\n        elemental: {\n            offence: {\n                water: 25, thunder: -10, fire: -10\n            },\n            defence: {\n                thunder: 20,\n                fire: -10,\n                water: -5\n            }\n        },\n        element: \"water\",\n        desc: \"A simple necklace with a water orb encrusted at its center. Basic but very effective.\",\n        sell_value: 200\n    },\n\n    blue_vine_charm: {\n        name: \"Blue vine charm\",\n        type: \"misc\",\n        atk: 3,\n        matk: 3,\n        def: 3,\n        mdef: 3,\n        speed: -2,\n        max_mana: 10,\n        max_stamina: 10,\n        elemental: {\n            offence: {\n                water: 5, earth: 5\n            },\n            defence: {\n                fire: 25,\n                water: -5,\n                earth: -5\n            }\n        },\n        element: \"water\",\n        desc: \"A necklace fashioned from various items that can be found from blue slimes and vined creatures.\" +\n        \" The coalesce of their inherent magics grants the wearer a range of boons.\",\n        sell_value: 30\n    },\n\n    fishers_lucky_charm: {\n        name: \"Fisher's lucky charm\",\n        type: \"misc\",\n        atk: 6,\n        matk: 7,\n        def: 4,\n        mdef: 5,\n        crit_chance: 0.2,\n        crit_damage: 0.15,\n        evasion: 0.05,\n        elemental: {\n            offence: {\n            },\n            defence: {\n            }\n        },\n        element: \"water\",\n        desc: \"Many fishers are known for their extreme luck both in finding rare and dangerous fish and surviving\" +\n        \" various encounters with them. Is this item the sole reason for that..?\",\n        sell_value: 50\n    },\n\n    vinewarding_charm: {\n        name: \"Vinewarding charm\",\n        type: \"misc\",\n        atk: 3,\n        matk: 2,\n        def: 4,\n        mdef: 3,\n        resistance: 15,\n        elemental: {\n            offence: {\n            },\n            defence: { earth: -10 }\n        },\n        element: \"earth\",\n        desc: \"A charm infused with the essence of a teravalum. As such, it is useful in defending against them.\",\n        sell_value: 30\n    },\n\n    bearkiller_charm: {\n        // note to self: give this item SP regen when that becomes possible\n        name: \"Bearkiller charm\",\n        type: \"misc\",\n        def: 9,\n        elemental: {\n            offence: {\n            },\n            defence: { physical: -5 }\n        },\n        element: \"physical\",\n        desc: \"This charm isn't actually infused with a bear's essence, unfortunately. Since bears specialise in\" +\n        \" offence what is needed to beat them is a good defence, and this is what this item offers.\",\n        sell_value: 30\n    },\n\n    canine_charm: {\n        name: \"Canine charm\",\n        type: \"misc\",\n        atk: 5,\n        speed: 8,\n        elemental: {\n            offence: { physical: 10 },\n            defence: { }\n        },\n        element: \"physical\",\n        desc: \"A charm infused with the essence of a wolf. Interestingly, many species of wolves may show respect\" +\n        \", rather than hatred towards wearers of this charm. Such is the way of the canine.\",\n        sell_value: 30\n    },\n\n    forest_explorer_pendant: {\n        name: \"Forest explorer pendant\",\n        type: \"misc\",\n        def: 8,\n        mdef: 8,\n        resistance: 10,\n        elemental: {\n            offence: { earth: 10 },\n            defence: { earth: -10, physical: -5, dark: -3 }\n        },\n        element: \"earth\",\n        desc: \"A pendant with a silver chain and green gem at the center. The gem seems to have the essences of\" +\n        \" various creatures found in floor one infused into it, granting the wearer a series of boons.\",\n        sell_value: 250\n    },\n\n    forest_explorer_charm: {\n        name: \"Forest explorer charm\",\n        type: \"misc\",\n        atk: 8,\n        mdef: 8,\n        effectiveness: 10,\n        elemental: {\n            offence: { earth: 15 },\n            defence: { earth: -6, physical: -2, dark: -1 }\n        },\n        element: \"earth\",\n        desc: \"A charm made with several parts of various creatures from the floor one forest. It should look like a\" +\n        \" complete mess, but... it actually looks rather nice.\",\n        sell_value: 250\n    },\n\n    ailwarder_charm: {\n        name: \"Ailwarder Charm\",\n        type: \"misc\",\n        atk: 1,\n        def: 3,\n        matk: 2,\n        mdef: 4,\n        elemental: {\n            offence: {\n            },\n            defence: {\n            }\n        },\n        resistance: 15,\n        element: \"earth\",\n        desc: \"A small charm formed that although made using poison, seems to paradoxically help repel it. You should still probably keep this away from your mouth, though.\",\n        sell_value: 200\n    },\n\n    small_scaled_shield: {\n        name: \"Small Scaled Shield\",\n        type: \"misc\",\n        atk: 1,\n        def: 9,\n        mdef: 4,\n        resistance: 4,\n        elemental: {\n            offence: {\n            },\n            defence: {\n                all: -2,\n                physical: -5,\n            }\n        },\n        element: \"physical\",\n        desc: \"A small shield formed with various interlocking scales. The design is plain since the scales are all the same, but the curved tile-like scales still look quite nice. The protection is nice for blocking some attacks, but would be impractical as a primary method of defence.\",\n        sell_value: 150\n    },\n\n    tectonic_charm: {\n        name: \"Tectonic Charm\",\n        type: \"misc\",\n        atk: 12,\n        matk: 6,\n        elemental: {\n            offence: {\n                all: 5,\n                earth: 5\n            },\n            defence: {\n            }\n        },\n        element: \"earth\",\n        desc: \"A charm imbued with raging earth magic. Is it just you, or does this item quake in your grasp?\",\n        sell_value: 200\n    },\n\n    virulent_charm: {\n        name: \"Virulent Charm\",\n        type: \"misc\",\n        atk: 7,\n        elemental: {\n            offence: {\n            },\n            defence: {\n            }\n        },\n        resistance: 10,\n        effectiveness: 10,\n        element: \"earth\",\n        desc: \"A venomous enchanted charm. It's hard to wear this safely, but if you are able, the boons it grants are sure to be very helpful to an up-and-coming adventurer.\",\n        sell_value: 200\n    },\n\n    deep_forest_explorer_necklace: {\n        name: \"deep forest explorer necklace\",\n        type: \"misc\",\n        atk: 4,\n        def: 4,\n        mdef: 4,\n        matk: 4,\n        effectiveness: 30,\n        elemental: {\n            offence: {\n                earth: 10\n            },\n            defence: {\n                earth: -10\n            }\n        },\n        element: \"earth\",\n        desc: \"A necklace enchanted with potent magic. It seems to be enchanted with the manasouls of various creatures that inhabit the deep forest on Floor one.\",\n        sell_value: 250\n    },\n\n    deep_forest_explorer_bracelet: {\n        name: \"deep forest explorer bracelet\",\n        type: \"misc\",\n        atk: 4,\n        def: 4,\n        mdef: 4,\n        matk: 4,\n        resistance: 30,\n        elemental: {\n            offence: {\n                earth: 10\n            },\n            defence: {\n                earth: -10\n            }\n        },\n        element: \"earth\",\n        desc: \"A bracelet enchanted with potent magic. It seems to be enchanted with the manasouls of various creatures that inhabit the deep forest on Floor one.\",\n        sell_value: 250\n    },\n\n    cats_foot: {\n        name: \"Cat's foot\",\n        type: \"misc\",\n        atk: 2,\n        def: 2,\n        matk: 2,\n        mdef: 2,\n        speed: 2,\n        crit_chance: 0.1,\n        crit_damage: 0.25,\n        evasion: 0.07,\n        resistance: 5,\n        effectiveness: 5,\n        elemental: {\n            offence: {\n                all: 2\n            },\n            defence: {\n                all: -2\n            }\n        },\n        element: \"physical\",\n        desc: \"Not actually the foot of a cat. It's just a good luck charm that is known as 'cats foot'. It does have some fur on it though...\",\n        sell_value: 250\n    },\n\n    /*\n    eternal_life: { TBA\n        name: \"Ailwarder Charm\",\n        type: \"misc\",\n        atk: 1,\n        def: 3,\n        matk: 2,\n        mdef: 4,\n        elemental: {\n            offence: {\n            },\n            defence: {\n            }\n        },\n        resistance: 15,\n        element: \"earth\",\n        desc: \"A small charm formed that although made using poison, seems to paradoxically help repel it. You should still probably keep this away from your mouth, though.\",\n        sell_value: 200\n    },\n    */\n\n    //#endregion\n\n\n    // REAGENTS\n    //#region \n    slime_ball: {\n        name: \"Slime Ball\",\n        type: \"reagent\",\n        desc: \"A ball of blue slime. Although it has shape, it is easy to press into. Has a peculiar texture.\",\n        sell_value: 5\n    },\n\n    grey_wolf_pelt: {\n        name: \"Grey Wolf Pelt\",\n        type: \"reagent\",\n        desc: \"The fur of a grey wolf. Most of it remains intact, but if you shake the straps of fur, parts of it will flake off rapidly\",\n        sell_value: 7\n    },\n\n    wanderer_memorabilia: {\n        name: \"Adventurer Memorabilia\",\n        type: \"reagent\",\n        desc: \"Various things that may remind an old advenutrer of the adventures they had.\",\n        sell_value: 0\n    },\n\n    weak_membrane: {\n        name: \"Weak Membrane\",\n        type: \"reagent\",\n        desc: \"A very thin layer of skin from some kind of weap reptile. A single wrong move and it would tear.\",\n        sell_value: 10\n    },\n\n    tiny_lizard_tail: {\n        name: \"Tiny Lizard Tail\",\n        type: \"reagent\",\n        desc: \"The tail of a lizard. It still moves sometimes.\",\n        sell_value: 12\n    },\n\n    aquus_cluster: {\n        name: \"Aquus Cluster\",\n        type: \"reagent\",\n        desc: \"An undeveloped orb of weak water magic. 'Aquus' refers to weak water magic. There wasn't enough of it to form\" +\n        \" an orb, so the mana settled as a semi-solid substance that has form and yet is very soft and malleable. Even so,\" +\n        \" it is fairly useful to novice mages.\",\n        sell_value: 25\n    },\n\n    water_orb: {\n        name: \"Water Orb\",\n        type: \"reagent\",\n        desc: \"Water magic that gathered at a single point over a fairly long period of time and eventually reached a high\" +\n        \" enough concentration to possess crystalline form. These very rarely form naturally, and are often crafted by\" +\n        \" strong magic users to store mana of a particular alignment.\",\n        sell_value: 400\n    },\n\n    manasoul: {\n        name: \"Manasoul\",\n        type: \"reagent\",\n        desc: \"Beings such as klastera and elementals with no anatomy or creature soul are animated by a 'manasoul', mana\" +\n        \" with the power to grant consciousness. It is not known how to create these and so they are often extracted from\" +\n        \" naturally occurring creatures such as klastera, elementals and very rarely, dragons.\",\n        sell_value: 1000\n    },\n\n    light_absorbant_eye: {\n        name: \"Light absorbant eye\",\n        type: \"reagent\",\n        desc: \"The eye of a class of lizard that absorbs light from the sun to be used to keep the body warm during hibernation.\" +\n        \" In many places with cold winters there is little space to burrow or make warm refuge, and so this skill is essential\" +\n        \" in keeping the lizards alive when the climate becomes cold.\",\n        sell_value: 20\n    },\n\n    red_slime_ball: {\n        name: \"Red slime ball\",\n        type: \"reagent\",\n        desc: \"A ball of red slime. It can be pressed into but seems to return to a general shape after the deforming force is\" +\n        \" removed. Has a peculiar texture.\",\n        sell_value: 7\n    },\n\n    sharp_claw: {\n        name: \"Sharp claw\",\n        type: \"reagent\",\n        desc: \"A dull grey claw. Seems to be sharper than most. Both the sides and prick cause bleeding upon contact.\",\n        sell_value: 8\n    },\n\n    venomous_claw: {\n        name: \"Venomous claw\",\n        type: \"reagent\",\n        desc: \"A dull greenish-grey claw. The venom the claw is laced with seems to cause fatigue in small amounts. It would\" +\n        \" be unwise to toy with this item.\",\n        sell_value: 8\n    },\n\n    shadow_pelt: {\n        name: \"Shadow pelt\",\n        type: \"reagent\",\n        desc: \"A patch of fur from a Dark beast. Although it is clearly tangible, it has an ethereal quality that makes it\" +\n        \" uncomfortable to hold - like it would just fade into black smoke.\",\n        sell_value: 10\n    },\n\n    shadow_corona: {\n        name: \"Shadow corona\",\n        type: \"reagent\",\n        desc: \"It's difficult to tell what part of the Dark beast this comes from - it seems like a particularly tough, solid\" +\n        \" patch of its fur. It is heavily enchanted and seems to serve as some kind of evidence that the dark beast is in fact\" +\n        \" a dark beast.\",\n        sell_value: 20\n    },\n\n    trash: {\n        name: \"Trash\",\n        type: \"reagent\",\n        desc: \"Human garbage. Arguably of negative value.\",\n        sell_value: -1\n    },\n\n    fire_rune: {\n        name: \"Fire rune\",\n        type: \"reagent\",\n        desc: \"A simple flame rune. It is contained in a transparent box of some material that seems to block any heat\" +\n        \" emanating from them.\",\n        sell_value: 40\n    },\n\n    water_rune: {\n        name: \"Water rune\",\n        type: \"reagent\",\n        desc: \"A simple water rune. It isn't dangerous, but feels a little weird to touch - probably due to the water mana\" +\n        \" constantly emanating from it.\",\n        sell_value: 40\n    },\n\n    thunder_rune: {\n        name: \"Thunder rune\",\n        type: \"reagent\",\n        desc: \"A simple thunder rune. Touching it would shock the user a little, so it is encased in a transparent box of\" +\n        \" some material.\",\n        sell_value: 40\n    },\n\n    dark_rune: {\n        name: \"Dark rune\",\n        type: \"reagent\",\n        desc: \"A simple dark rune. It is uncomfortable to have in your inventory due to the foreboding enery it emits.\",\n        sell_value: 40\n    },\n\n    light_rune: {\n        name: \"Light rune\",\n        type: \"reagent\",\n        desc: \"A simple light rune. It is difficult to tell whether it is emitting light or light mana.\",\n        sell_value: 40\n    },\n\n    vip_card: {\n        name: \"VIP card\",\n        type: \"reagent\",\n        desc: \"A basic-looking small card. Apparently functions as evidence of one's generous patronage.\",\n        sell_value: 100\n    },\n\n    steel: {\n        name: \"steel\",\n        type: \"reagent\",\n        desc: \"It's steel. What more do you want?\",\n        sell_value: 10\n    },\n\n    wood: {\n        name: \"wood\",\n        type: \"reagent\",\n        desc: \"Some wood. Who cares what type it is?\",\n        sell_value: 8\n    },\n\n    leather: {\n        name: \"leather\",\n        type: \"reagent\",\n        desc: \"Leather. It is cheap but fairly well made.\",\n        sell_value: 9\n    },\n\n    stone: {\n        name: \"stone\",\n        type: \"reagent\",\n        desc: \"Stone.\",\n        sell_value: 3\n    },\n\n    water_energy: {\n        name: \"water energy\",\n        type: \"reagent\",\n        desc: \"Pure water energy. Humans have not yet learned to replicate this with magic; this is something only animals\" +\n        \" can create. Can be used by some creatures to strengthen themselves.\",\n        sell_value: 60\n    },\n\n    weak_vine: {\n        name: \"weak vine\",\n        type: \"reagent\",\n        desc: \"Weak vines woven of some kind of thick cellulose material. It feels a little leathery.\",\n        sell_value: 6\n    },\n\n    hempweed_ligament: {\n        name: \"hempweed ligament\",\n        type: \"reagent\",\n        desc: \"Seems to form the ligaments of a Lesser Teravalum. It is very thin, but very strong. Could probably be woven\" +\n        \" into a fabric\",\n        sell_value: 7\n    },\n\n    brown_fur: {\n        name: \"brown fur\",\n        type: \"reagent\",\n        desc: \"The brown fur of a brown bear. Despite feeling quite nice, it smells very bad.\",\n        sell_value: 6\n    },\n\n    magic_bark: {\n        name: \"Magic bark\",\n        type: \"reagent\",\n        desc: \"Bark of a tree imbued with magic. The material of the tree itself seems to have a relatively poor magical\" +\n        \", however bark of this nature could still be very useful to beginning adventurers.\",\n        sell_value: 12\n    },\n\n    special_sap: {\n        name: \"Special sap\",\n        type: \"reagent\",\n        desc: \"The sap of a treant. It has potent magical qualities, specifically in healing. It's quite bitter, so\" +\n        \" in healing potions for children, sugar is often added to it.\",\n        sell_value: 15\n    },\n\n    forest_scourge_scale: {\n        name: \"Forest scourge scale\",\n        type: \"reagent\",\n        desc: \"The scales of a forest scourge. They are dull, likely to aid camoflague, but incredibly tough and smooth\" +\n        \" to the touch.\",\n        sell_value: 12\n    },\n\n    mage_cheat_sheet: {\n        name: \"Mage cheat sheet\",\n        type: \"reagent\",\n        desc: \"A cheat sheet for some basic spells. It reads (messily):\" +\n        \"<i><br>Water charge: fire + ice\" +\n        \"<br>Steam charge: fire + water\" +\n        \"<br>Soil charge: earth + water\" +\n        \"<br>Magma charge: fire + earth\" +\n        \"<br>Volcano charge: magma + earth\" +\n        \"<br>Obsidian charge: magma + water\" +\n        \"<br>Frozen Earth charge: ice + earth</i>\", \n        sell_value: 300\n    },\n\n    forest_merchant_advert: {\n        name: \"Forest merchant advert\",\n        type: \"reagent\",\n        desc: 'Less of an advert and more a slip of paper. It reads simply <b>\"Find me at [ADD COORDS]! I sell all sorts of items found in the deep forest, for affordable priecs!\"</b>',\n        sell_value: 1\n    },\n\n    earthen_manasoul: {\n        name: \"Earthen manasoul\",\n        type: \"reagent\",\n        desc: \"It looks like a sphere of green glowing mist with an ephemeral feel. It seems to be a ball of condensed Earth magic, capable of granting sentience to\" +\n        \" things that it has an affinity with. It is the catalyst for creating lesser Earth elementals.\",\n        sell_value: 30\n    },\n\n    cat_food: {\n        name: \"Cat food\",\n        type: \"reagent\",\n        desc: \"Food for a cat. You will not want to eat this.\",\n        sell_value: \"unsellable\"\n    },\n\n    bellas_cat: {\n        name: \"Bella's Cat\",\n        type: \"reagent\",\n        desc: \"Bella's Cat. It's a black and white cat with brown eyes. You don't know the breed, but it is very cute. Meow!\",\n        sell_value: \"unsellable\"\n    },\n    //#endregion\n\n\n    // MISC - USABLES\n    //#region \n    f1_settlement_teleportation_stone: {\n        name: \"f1 settlement tp stone\",\n        type: \"reagent\",\n        desc: \"It is difficult to explain the function of this item, but it allows for instantaneous travel, albeit is destroyed\" +\n        \" afterwards. When exploring on floor one, consume to travel to the settlement in the north-west of the map.\",\n        sell_value: 5,\n        use: {\n            case: \"outside\",\n            effect: [[\"player\", \"teleport\", \"floor1\", [4,2]]] // change to correct\n            // TBA: ADD BATTLE EFFECT?\n        }\n    },\n\n    f1_forest_settlement_teleportation_stone: {\n        name: \"f1 forest settlement tp stone\",\n        type: \"reagent\",\n        desc: \"It is difficult to explain the function of this item, but it allows for instantaneous travel, albeit is destroyed\" +\n        \" afterwards. [When exploring on floor one, consume to travel to the settlement in the forest region of the map.]\",\n        sell_value: 5,\n        use: {\n            case: \"outside\",\n            effect: [[\"player\", \"teleport\", \"floor1\", [17,20]]] // change to correct\n            // TBA: ADD BATTLE EFFECT?\n        }\n    },\n\n    f1_oras_hut_teleportation_stone: {\n        name: \"f1 ora's hut tp stone\",\n        type: \"reagent\",\n        desc: \"It is difficult to explain the function of this item, but it allows for instantaneous travel, albeit is destroyed\" +\n        \" afterwards. [When exploring on floor one, consume to travel to ora's hut in the forest region of the map.]\",\n        sell_value: 5,\n        use: {\n            case: \"outside\",\n            effect: [[\"player\", \"teleport\", \"floor1\", \"h\"]] // change to correct\n            // TBA: ADD BATTLE EFFECT?\n        }\n    },\n\n    f0_end_teleportation_stone: {\n        name: \"f0 end tp stone\",\n        type: \"reagent\",\n        desc: \"It is difficult to explain the function of this item, but it allows for instantaneous travel, albeit is destroyed\" +\n        \" afterwards. [When exploring on floor zero, consume to travel to the end of the path.]\",\n        sell_value: \"unsellable\",\n        use: {\n            case: \"outside\",\n            effect: [[\"player\", \"teleport\", \"floor0\", \"z1\"]] // change to correct\n            // TBA: ADD BATTLE EFFECT?\n        }\n    },\n    //#endregion\n\n\n    // MISC - USABLE IN BATTLE\n    //#region \n    stamina_vial: {\n        name: \"stamina vial\",\n        type: \"reagent\",\n        desc: \"A vial filled with invigorating reagents. Recovers 40 stamina upon use.\",\n        sell_value: 3,\n        use: {\n            case: \"all\",\n            effect: [[\"player\", \"stamina\", \"flat\", 40]],\n            battleEffect: () => {\n                const state = [\"item:stamina_vial\", {\n                    damage: 30,\n                    type: [\"gain_stamina\", \"item\"],\n                    target: \"self\",\n                }, \"player\"]\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used stamina vial!`])\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainStamina(\"player\", 40, \"self\", state, true, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy());\n            },\n            pouchMax: 4\n        }\n    },\n\n    health_potion: {\n        name: \"health potion\",\n        type: \"reagent\",\n        desc: \"A simple health potion. Recovers 40 HP upon use.\",\n        sell_value: 3,\n        use: {\n            case: \"all\",\n            effect: [[\"player\", \"health\", \"flat\", 40]],\n            battleEffect: () => {\n                const state = [\"item:health_potion\", {\n                    damage: 30,\n                    type: [\"heal\", \"item\"],\n                    target: \"self\",\n                }, \"player\"]\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used health potion!`])\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainHealth(\"player\", 40, \"self\", state, true, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy());\n            },\n            pouchMax: 5\n        }\n    },\n\n    greater_health_potion: {\n        name: \"greater health potion\",\n        type: \"reagent\",\n        desc: \"A fairly well-made health potion. Recovers 80 HP upon use.\",\n        sell_value: 15,\n        use: {\n            case: \"all\",\n            effect: [[\"player\", \"health\", \"flat\", 80]],\n            battleEffect: () => {\n                const state = [\"item:greater_health_potion\", {\n                    damage: 80,\n                    type: [\"heal\", \"item\"],\n                    target: \"self\"\n                }, \"player\"]\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used greater health potion!`])\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainHealth(\"player\", 80, \"self\", state, true, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy());\n            },\n            pouchMax: 5\n        }\n    },\n\n    crafted_health_potion: {\n        name: \"crafted health potion\",\n        type: \"reagent\",\n        desc: \"This health potion is somewhat of a spectacle of artisanship. Recovers 200 HP upon use.\",\n        sell_value: 50,\n        use: {\n            case: \"all\",\n            effect: [[\"player\", \"health\", \"flat\", 200]],\n            battleEffect: () => {\n                const state = [\"item:crafted_health_potion\", {\n                    damage: 150,\n                    type: [\"heal\", \"item\"],\n                    target: \"self\",\n                }, \"player\"]\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used crafted health potion!`])\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainHealth(\"player\", 200, \"self\", state, true, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy());\n            },\n            pouchMax: 5\n        }\n    },\n\n    mana_potion: {\n        name: \"mana potion\",\n        type: \"reagent\",\n        desc: \"A simple mana potion. Recovers 40 MP upon use.\",\n        sell_value: 3,\n        use: {\n            case: \"all\",\n            effect: [[\"player\", \"mana\", \"flat\", 40]],\n            battleEffect: () => {\n                const state = [\"item:health_potion\", {\n                    type: [\"mana_gain\", \"item\"],\n                    mana: 40,\n                    target: \"self\",\n                }, \"player\"]\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used mana potion!`])\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainMana(\"player\", 40, \"self\", state, true, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy());\n            },\n            pouchMax: 5\n        }\n    },\n\n    greater_mana_potion: {\n        name: \"greater mana potion\",\n        type: \"reagent\",\n        desc: \"A fairly well-made mana potion. Recovers 80 MP upon use.\",\n        sell_value: 15,\n        use: {\n            case: \"all\",\n            effect: [[\"player\", \"mana\", \"flat\", 80]],\n            battleEffect: () => {\n                const state = [\"item:greater_health_potion\", {\n                    mana: 200,\n                    type: [\"mana_gain\", \"item\"],\n                    target: \"self\",\n                }, \"player\"]\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used greater mana potion!`])\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainMana(\"player\", 80, \"self\", state, true, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy());\n            },\n            pouchMax: 5\n        }\n    },\n\n    crafted_mana_potion: {\n        name: \"crafted mana potion\",\n        type: \"reagent\",\n        desc: \"This mana potion is somewhat of a spectacle of artisanship. Recovers 200 MP upon use.\",\n        sell_value: 50,\n        use: {\n            case: \"all\",\n            effect: [[\"player\", \"mana\", \"flat\", 200]],\n            battleEffect: () => {\n                const state = [\"item:crafted_health_potion\", {\n                    mana: 200,\n                    type: [\"mana_gain\", \"item\"],\n                    target: \"self\",\n                }, \"player\"]\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used crafted mana potion!`])\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainMana(\"player\", 200, \"self\", state, true, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy());\n            },\n            pouchMax: 5\n        }\n    },\n\n    earthen_shield_potion: {\n        name: \"earthen shield potion\",\n        type: \"reagent\",\n        desc: \"A potion infused with the concentrated essence of the forest. Applies <u>Earthen Shield</u> [+100 resistance\"+ \n        \", +50% mitigation, 1T duration] to the user. Can only be used in battle.\",\n        sell_value: 10,\n        use: {\n            case: \"battle\",\n            battleEffect: () => {\n                const state = [\"item:health_potion\", {\n                    damage: 0,\n                    type: [\"buff\", \"item\"],\n                    target: \"self\",\n                }, \"player\"]\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used earthen shield potion!`])\n                const buff = {\n                    name: \"earthen shield\",\n                    duration: 1,\n                    resistance: 100,\n                    mitigation: 0.5,\n                    element: \"earth\",\n                    types: [\"buff\"],\n                    apply_text: \" is protected by the earth!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].applyBuff(buff, 100, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), \"buffs\");\n                };\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].applyBuff(\"player\", func, \"self\", state, true, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy());\n            },\n            pouchMax: 3\n        }\n    },\n\n    weak_slingshot: {\n        name: \"weak slingshot\",\n        type: \"reagent\",\n        desc: \"A weak slingshot. It can be used once but will break afterwards. Use in battle to deal low physical damage and\" +\n        \" gain an action.\",\n        sell_value: 10,\n        use: {\n            case: \"battle\",\n            battleEffect: () => {\n                const state = [\"item:weak_slingshot\", {\n                    damage: 0,\n                    type: [\"attack\", \"item\"],\n                    target: \"opponent\",\n                }, \"player\"]\n                const player = _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer();\n                const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy();\n\n                const damage = _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].calcDamage(player, enemy, \"atk\", \"def\", \"physical\", \"physical\", 0.9, 1.15, 0.5);\n            \n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].prepareAttackMessage(player.name, enemy.name, `<br>${player.name} slung a slingshot at their enemy!`, damage);\n\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].dealDamage(\"player\", damage.damage, \"opponent\", false, false, player, enemy);\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainActions(\"player\", 1, \"self\", state, true, player, enemy, true);\n            },\n            pouchMax: 4\n        }\n    },\n\n    invigorating_flower: {\n        name: \"invigorating flower\",\n        type: \"reagent\",\n        desc: \"An edible flower with invigorating qualities. Eat it in battle to gain 20 SP.\",\n        sell_value: 10,\n        use: {\n            case: \"battle\",\n            battleEffect: () => {\n                const state = [\"item:invigorating_flower\", {\n                    damage: 0,\n                    type: [\"buff\", \"item\"],\n                    target: \"self\",\n                }, \"player\"]\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used invigorating flower!`])\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainSP(\"player\", 20, \"self\", state, true, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy(), true);\n            },\n            pouchMax: 3\n        }\n    },\n\n    desperate_flower: {\n        name: \"desperate flower\",\n        type: \"reagent\",\n        desc: \"An edible flower with properties that increase with in effectiveness depending on the desperation\" +\n        \" of the consumer. Grants 2 extra actions, then 1 additional action for every 30% of HP lost.\",\n        sell_value: 10,\n        use: {\n            case: \"battle\",\n            battleEffect: () => {\n                const state = [\"item:desperate_flower\", {\n                    damage: 0,\n                    type: [\"buff\", \"item\"],\n                    target: \"self\",\n                }, \"player\"]\n                const player = _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer();\n                const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy();\n\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used desperate flower!`])\n\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainActions(\"player\", 2, \"self\", false, false, player, enemy, true);\n                if (player.health <= player.max_health * (70/100)) {\n                    _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainActions(\"player\", 1, \"self\", false, false, player, enemy, true);\n                }\n                if (player.health <= player.max_health * (40/100)) {\n                    _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainActions(\"player\", 1, \"self\", false, false, player, enemy, true);\n                }\n                if (player.health <= player.max_health * (10/100)) {\n                    _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainActions(\"player\", 1, \"self\", false, false, player, enemy, true);\n                }\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushCustomFunc(\"player\", () => {}, \"self\", state, true, player, enemy, false);\n            },\n            pouchMax: 2\n        }\n    },\n\n    monster_essence: {\n        name: \"monster essence\",\n        type: \"reagent\",\n        desc: \"A pouch infused with various monster essences. Consume during battle to grant oneself a <u>Monster Soul</u>\" +\n        \" for the duration of that battle.\",\n        sell_value: 20,\n        use: {\n            case: \"battle\",\n            battleEffect: () => {\n                const state = [\"item:monster_essence\", {\n                    damage: 0,\n                    type: [\"buff\", \"item\"],\n                    target: \"self\",\n                }, \"player\"]\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used monster essence!`])\n                const buff = {\n                    name: \"monster soul\",\n                    duration: 999,\n                    element: \"none\",\n                    types: [\"buff\"],\n                    fade: false,\n                    unstrippable: true,\n                    onTick: (type, user, plr, enemy) => {\n                        _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([\"<br>The afflicted's monster soul radiates energy!\"], true, \"push\");\n                        _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainSP(type, 5, \"self\", false, false, plr, enemy, true);\n                    },\n                    apply_text: \"'s monster soul radiates energy!\",\n                    max_stacks: 1\n                }\n                const func = () => {\n                    _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].applyBuff(buff, 100, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), \"buffs\");\n                };\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].applyBuff(\"player\", func, \"self\", state, true, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy());\n            },\n            pouchMax: 1\n        }\n    },\n\n    kindred_essence: {\n        name: \"kindred essence\",\n        type: \"reagent\",\n        desc: \"A pouch infused with various kindred essences. Consume during battle to grant oneself a <u>Kindred Soul</u>\" +\n        \" for the duration of that battle.\",\n        sell_value: 20,\n        use: {\n            case: \"battle\",\n            battleEffect: () => {\n                const state = [\"item:kindred_essence\", {\n                    damage: 0,\n                    type: [\"buff\", \"item\"],\n                    target: \"self\",\n                }, \"player\"]\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`Used kindred essence!`])\n                const buff = {\n                    name: \"kindred soul\",\n                    duration: 999,\n                    element: \"earth\",\n                    types: [\"buff\"],\n                    fade: false,\n                    unstrippable: true,\n                    onTick: (type, target, plr, enemy) => {\n                        console.log(target);\n                        _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([\"<br>The afflicted's kindred soul radiates energy!\"], true, \"push\");\n                        _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].gainHealth(type, Math.round(user.max_health * (3/100)), \"self\", false, false, plr, enemy, true);\n                    },\n                    apply_text: \"'s kindred soul radiates energy!\",\n                    max_stacks: 1\n                }\n                const func = () => {\n                    _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].applyBuff(buff, 100, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), \"buffs\");\n                };\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].applyBuff(\"player\", func, \"self\", state, true, _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer(), _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy());\n            },\n            pouchMax: 1\n        }\n    },\n\n    toxic_grenade: {\n        name: \"toxic grenade\",\n        type: \"reagent\",\n        desc: \"A small handcrafted grenade containing noxious materials. Deals very low physical damage, and applies <u>Empoisoned</u> [1% HP DOT, 50T duration, unstrippable] to the enemy. Application ignores resistance, and the attack cannot be evaded or crit.\",\n        sell_value: 30,\n        use: {\n            case: \"battle\",\n            battleEffect: () => {\n                const state = [\"item:toxic_grenade\", {\n                    damage: 0,\n                    type: [\"attack\", \"item\",\"debuff\"],\n                    target: \"opponent\",\n                }, \"player\"]\n                const player = _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer();\n                const enemy = _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy();\n\n                const damage = _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].calcDamage(player, enemy, \"atk\", \"def\", \"physical\", \"physical\", 0.25, 1.15, 0.5, { canCrit: false, canEvade: false});\n                state.damage = damage;\n            \n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].prepareAttackMessage(player.name, enemy.name, `<br>${player.name} threw a toxic bomb at the enemy!`, damage);\n\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].dealDamage(\"player\", damage.damage, \"opponent\", false, false, player, enemy);\n\n                const buff = {\n                    name: \"empoisoned\",\n                    duration: 50,\n                    element: \"physical\",\n                    types: [\"debuff\"],\n                    apply_text: \" is empoisoned!\",\n                    damage: [\"percentile\", 1],\n                    max_stacks: 1,\n                    unstrippable: true\n                };\n                const func = () => {\n                    _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer() : user), (type == 'player' ? _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getEnemy() : _js_models_combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayer()), \"debuffs\", { ignoreRes: true });\n                };\n                _js_models_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].applyBuff(\"player\", func, \"opponent\", state, true, plr, enemy);\n\n            },\n            pouchMax: 4\n        }\n    },\n    //#endregion\n}\n//\n\n//# sourceURL=webpack:///./src/directories/items/items.js?");

/***/ }),

/***/ "./src/directories/npc/floor0.js":
/*!***************************************!*\
  !*** ./src/directories/npc/floor0.js ***!
  \***************************************/
/*! exports provided: floor0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"floor0\", function() { return floor0; });\n/* harmony import */ var _js_models_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../js/models/data */ \"./src/js/models/data.js\");\n/* harmony import */ var _js_models_settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../js/models/settings */ \"./src/js/models/settings.js\");\n/* harmony import */ var _js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../js */ \"./src/js/index.js\");\n// -- IMPORTS -- \\\\\n\n\n\n//\n\n\n// -- NPCS -- \\\\\nconst floor0 = {\n\n    f0_intro: {\n        name: \"Lucia\",\n        say: [[\"... <i>(Input anything to continue.)</i>\", 0],\n                [\"...\", 0],\n                ['\"Lore?\"', 0],\n                ['You slowly regain consciousness.', 0],\n                ['\"Lore! Lore!\"', 0],\n                ['You open your eyes.', 0],\n                [\"You're in a grassy clearing, surrounded by trees.\", 0],\n                ['???: Lore? Are you alright?', 0],\n                ['Someone is standing a few feet away, staring at you. She has long blue hair and a shiny dress.', 0],\n                [\"???: ..Lore?\", 0],\n                [\"???: Um, do you remember me? My name's Lucia.\", 0],\n                [\"Lucia: Loo-See-Ah. Can you say it?\", 0],\n                [\"Her repeated enunciation feels a little patronising.\", 0],\n                [\"You should probably respond.\", 0]],\n        options: {\n            \"Loo-See-Ah\": {\n                say: [[\"Lucia smiles and claps happily. She looks a lot nicer with that expression.\", 0],\n                        [\"[name]: Great! Great job!\", 0],\n                        [\"[name]: Uhm...\", 0], \n                        [\"[name]: OK!\", 0]],\n                action: [\"waypoint\", \"partTwo\"]\n            },\n            \"Loo-Sea\": {\n                say: [[\"Lucia pouts angrily at you. But you get the feeling that even if she were erupting with fury,\" +\n                \" it wouldn't be the least bit intimidating.\", 0],\n                [\"[name]: Th-that's not how you say it!\", 0],\n                [\"[name]: Loo-See-Ah! Loo-See-Ah! Understand?\", 0],\n                [\"You wonder if she can tell that you're messing with her.\", 0],\n                [\"[name]: <i>*sigh*</i>\", 0]],\n                action: [\"waypoint\", \"partTwo\"]\n            }\n        },\n        \"partTwo\": {\n            say: [\n                [\"[name]: We should get going. Follow me, okay? And don't lag behind!\", 0],\n                [\"Lucia turns around and begins running (at a fairly pitiful pace) in the north direction, the only exit.\", 0, true, { unskippable: true}],\n                [\"You should probably follow her...\", 0],\n            ],\n            say2: [\n                [\"<b>NOTE: You will probably want to enable your minimap. Input 'sm'/'show minimap' or use the supercommand\" +\n                \" 'sc-minimap' to toggle it. Otherwise, you won't know where you're going!</b>\", 0, true, { unskippable: true }],\n                [\"<b>Squares that are blank white are squares you have seen (been adjacent to). Coloured squares\" +\n                \" are places you have been to (different colour denotes a different 'type' of area). Squares with vertical\" +\n                \" lines are unseen, and squares with two sets of diagonal lines are walls.\", 0, true, { unskippable: true}]\n            ],\n            action2: [\"flag\", \"f0_done_intro\", \"true\"],\n            action3: [\"save\"],\n            action: [\"end\"]\n        },\n        end: [[\"\", 0]]\n    },\n\n    f0_slime_fight: {\n        name: \"Lucia\",\n        say: [[\"It only takes a brisk walk in order to catch up with Lucia.\", 0],\n                [\"But as you near her, you hear a slow, shifting movement in a group of bushes to the right just in front\" +\n                \" of her.\", 0],\n                [\"You grab her shoulder, and she stops moving.\", 0],\n                [\"[name]: ..?\", 0],\n                [\"The quiverings in the small thicket grow stronger and stronger, until--\", 0]\n        ],\n        action: [\"music\", \"battle$\"],\n        say2: [\n                [\"Without warning, a relatively small, somewhat amorphous blue creature bursts from the leaves!\", 0],\n                [\"You charge at it without hesistation--\", -0.5],\n                [\"[name]: Lore--\", -0.2]\n        ],\n        action2: [\"battle\", [[\"slime\", {\n            overlayMusic: true\n        }], [\"waypoint\", \"postBattle\"]]],\n        \"postBattle\": {\n            action: [\"music\", \"forest\"],\n            say: [\n                [\"Lucia sighs.\", 0],\n                [\"[name]: I could've handled that myself, Lore.. but thanks--\", 0],\n                [\"You feel a sudden headache and grab at your head.\", 0],\n                [\"[name]: Are you ok..? Are you remembering something?\", 0],\n                [\"Despite her concern, there is a hint of hope in her voice..\", 0],\n                [\"[name]: Just stay here and rest for a bit, okay? We can keep going when you feel better.\", 0],\n                [\"<b>It looks like the battle against the slime jogged Lore's memory a bit, and he can remember some of\" +\n                \" the skills he used to use.</b>\", 0, true, { unskippable: true }],\n                [\"<b>Navigate the newly-unlocked <u>Stats</u> menu to learn the skills <u>Boost</u>, <u>Check</u> and\" +\n                \" <u>Forgotten Haste</u>. Then, continue moving north.</b>\", 0, true, { unskippable: true}]\n            ],\n            action5: [\"heal\"],\n            action3: [\"flag\", \"f0_fought_slime\", \"true\"],\n            action2: [\"custom\", () => {\n                _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"data\"].unlocked.stats = true;\n                Object(_js_models_settings__WEBPACK_IMPORTED_MODULE_1__[\"saveGame\"])();\n            }],\n            action4: [\"end\"]\n        },\n        end: [[\"\", 0]]\n    },\n\n    f0_young_wolf_fight: {\n        name: \"Lucia\",\n        action: [\"custom\", () => {\n            const skills = _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player.stats.skills;\n            if (skills.includes(\"lore-0\") && skills.includes(\"lore-1\") && skills.includes(\"lore-2\")) {\n                _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"flags\"].f0_learnt_prerequisite_skills_1.complete = true;\n            }\n        }],\n        conditional: {\n            \"flag: f0_learnt_prerequisite_skills_1\": {\n                action4: [\"save\"],\n                action3: [\"heal\"],\n                say: [\n                    [\"[name]: Ah-- wait up!\", 0],\n                    [\"As you continue ahead of Lucia, there is a further rustle in a cluster of leaves again. To the left, \"+\n                    \"this time--\", 0]\n                ],\n                action: [\"music\", \"battle$\"],\n                say2: [\n                    [\"The leaves quickly part to make way for a moderately-sized wolf, whose low growls appear almost\"+\n                    \" in sync with the bristling of it's grey fur.\"],\n                    [\"Lucia appears to stay back intentionally this time, watching you intently.\"],\n                    [\"It would appear that there is nothing to do except fight--\"]\n                ],\n                action2: [\"battle\", [[\"young_wolf\", {\n                    overlayMusic: true\n                }], [\"waypoint\", \"postBattle\"]]],\n            },\n            \"level: 0\": {\n                say: [\n                    [\"<b>You need to learn and equip the prerequisite skills before proceeding.</b>\", 0]\n                ],\n                action: [\"teleport\", \"t1\"],\n                action2: [\"end\"]\n            }\n        },\n        \"postBattle\": {\n            action: [\"music\", \"forest\"],\n            say: [\n                [\"Lucia stares at you for a few seconds before speaking up.\", 0],\n                [\"[name]: Um-- Lore, do you remember anything?\", 0],\n                [\"You feel a little stronger, but you can't remember much--\", 0],\n                [\"Another headache. Stronger this time, and it spreads throughout your entire body - as though something foreign was entering your body.\", 0],\n                [\"[name]: L-Lore!\", 0],\n                [\"[name]: Rest here again for a bit.. we're in no rush. Just try and calm down for a little, okay?\", 0],\n                [\"Lucia's voice puts you at ease. You sit down and try to empty your mind.\", 0],\n                [\"<b>A tiny fraction of Lore's power is returning to him. You should now be able to unlock the remainder\" +\n                \" of his skills. Do so, then equip them and proceed.</b>\", 0, true, { unskippable: true }]\n            ],\n            action2: [\"flag\", \"f0_fought_young_wolf\", \"true\"],\n            action3: [\"save\"],\n            action5: [\"heal\"],\n            action4: [\"end\"]\n        },\n        end: [[\"\", 0]]\n    },\n\n    // -- unshortened\n\n    f0_teaching_crafting: {\n        name: \"Lucia\",\n        action: [\"custom\", () => {\n            const skills = _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player.stats.skills;\n            if (skills.includes(\"lore-3\") && skills.includes(\"lore-4\") && skills.includes(\"lore-5\")) {\n                _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"flags\"].f0_learnt_prerequisite_skills_2.complete = true;\n            }\n        }],\n        conditional: {\n            \"flag: f0_learnt_prerequisite_skills_2\": {\n                say: [[\"You begin to continue walking. Lucia follows to your right, keeping pace.\", 0],\n                        [\"You may imagining this, but is there a slight spring in her step?\", 0],\n                        [\"[name]: Alright! *<i>She taps your shoulder twice before slowing down.*</i>\", 0],\n                        [\"[name]: Lore? I'm going to try and teach you something else now..\", 0]\n                ],\n                options: {\n                    \"Stop walking\": {\n                        say: [\n                            [\"You stop walking and listen.\", 0],\n                            [\"[name]: Wait here for a second!\", 0],\n                            [\"She runs to the south.\", 0],\n                            [\"A few seconds later she returns, holding a few clusters of fairly stiff blue slime in one hand\" +\n                            \", and some pieces of wood in another.\", 0],\n                            [\"[name]: Um.. you used to be quite good at crafting, so try and make something with these, Okay?\", 0],\n                            [\"[name]: It's okay if you don't get it right the first time, but I think you might remember more\" +\n                            \" if you give this a try!\", 0],\n                            [\"She forces the items into your chest and you take hold of them. Then she stands there expectantly,\" +\n                            \" waiting for you to do something.\", 0]\n                        ],\n                        action: [\"waypoint\", \"postChoice\"]\n                    },\n                    \"Ignore her\": {\n                        say: [\n                            [\"You ignore her and keep walking, leaving her behind in the process. You can tell without looking back\" +\n                            \" that she is both hurt and irritated.\", 0],\n                            [\"[name]: Lore!! Stop ignoring me--\", 0]\n                        ],\n                        action: [\"music\", \"battle$\"],\n                        say2: [\n                            [\"[name]: AAH--!\", 0],\n                            [\"A scream?! You quickly ready yourself and whip your head around--\"]\n                        ],\n                        action2: [\"music\", \"forest\"],\n                        say3: [\n                            [\"[name]: Just kidding!\", 0],\n                            [\"[name]: That'll teach you to mess with me!\", 0],\n                            [\"Lucia laughs at you for a bit. Then, just as you notice she has her hands behind her back,\" +\n                            \" she reproduces from behind her some pieces of wood and some balls of slime.\", 0],\n                            [\"[name]: Try and craft something with these, okay? It might help you remember something.\", 0],\n                        ],\n                        action3: [\"waypoint\", \"postChoice\"]\n                    }\n                }\n            },\n            \"level: 0\": {\n                say: [\n                    [\"<b>You need to learn and equip the prerequisite skills before proceeding.</b>\", 0],\n                    [\"<b>Learn and equip the remainder of Lore's skills before continuing.</b>\", 0]\n                ],\n                action: [\"teleport\", \"t2\"],\n                action2: [\"end\"]\n            },\n            \"postChoice\": {\n                say: [\n                    [\"<b>Lucia's given you some items to practice crafting with. After this, you'll see that you've unlocked\" +\n                    \" the crafting menu. Craft a <u>Wooden Sword</u> and then equip it via the <u>inventory</u>. Then,\" +\n                    \" craft a <u>Health Potion</u> and add it to your pouch, also via the inventory. Then, continue north.\", 0,\n                    true, { unskippable: true }],\n                    [\"<b>Also, don't worry if you mess up! The game won't save until you progress beyond this point\" +\n                    \", so just refresh the page if you accidentally consume the health potion.\", 0, true, { unskippable: true }]\n                ],\n                action: [\"items\", \"wood\", 2],\n                action2: [\"items\", \"slime_ball\", 2],\n                action3: [\"flag\", \"f0_been_taught_crafting\", \"true\"],\n                action4: [\"custom\", () => {\n                    _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"data\"].unlocked.crafting = true;\n                    _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"data\"].unlocked.inventory = true;\n                    Object(_js_models_settings__WEBPACK_IMPORTED_MODULE_1__[\"saveGame\"])();\n                }],\n                action5: [\"end\"]\n            }\n        },\n        end: [[\"\", 0]]\n    },\n\n    f0_f4_checkpoint: {\n        name: \"Lucia\",\n        action: [\"custom\", () => {\n            const equip = _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player.stats.equips;\n            const pouch = _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"data\"].player.stats.pouch;\n            if (equip.weapon == \"wooden_sword\" && pouch.findIndex(e => { return e[0] == \"health_potion\"}) != -1 ) {\n                _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"flags\"].f0_crafted_required_items.complete = true;\n            }\n        }],\n        conditional: {\n            \"flag: f0_crafted_required_items\": {\n                say: [\n                    [\"Lucia is looking at you expectantly.\", 0],\n                    [\"[name]: Well? Remember anything?\", 0],\n                    [\"...\", 0],\n                    [\"She takes your silence to mean 'no'. She sighs and her face adorns a downcast expression.\", 0],\n                    [\"[name]: Well.. let's just keep going.. watch your step because it looks like there are monsters about.\", 0],\n                    [\"Lucia starts north once again, before disappearing around a turn. It seems at this point the straight north tunnel branches out into different paths.\", 0],\n                    [\"<b>Keep following Lucia as best you can. As she said, watch out for monsters ambushing you as you walk.\" +\n                    \" If you come across some slimes, you might be able to use their drops to make more health potions. Also, look out for additional options to interact with objects while you explore!\", 0, true,\n                    { unskippable: true }],\n                    [\"<b>In the area to come, you may be able to find some things if you <u>Explore</u>, as well.\" +\n                    \" You will either find items or encounter an enemy, so be on your toes!.\", 0, true,\n                    { unskippable: true }]\n                ],\n                action5: [\"recipe\", \"mana_potion\"],\n                say2: [\n                    [\"<b>You'll find that you've unlocked a personal recipe for crafting mana potions.</b>\", 0, true, { unskippable: true }],\n                    [\"<b>You might need it in the future, so keep it in mind!</b>\", 0, true, { unskippable: true }],\n                    [\"<b>By the way-- auto save will be enabled from this point. If you'd like to disable it, you can do so in setings.\", 0, true, { unskippable: true }]\n                ],\n                action4: [\"custom\", () => {\n                    _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"settings\"].autoSave = true;\n                    _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"data\"].special.canToggleAutosave = true;\n                }],\n                action: [\"flag\", \"f0_passed_t4\", \"true\"],\n                action3: [\"save\"],\n                action2: [\"end\"]\n            },\n            \"level: 0\": {\n                say: [\n                    [\"<b>You need to craft and equip the wooden sword, and craft the health potion and add it to your pouch.</b>\"],\n                    [\"<b>Do these two things, then proceed to the north.</b>\"]\n                ],\n                action: [\"teleport\", \"t3\"],\n                action2: [\"end\"]\n            }\n        },\n        end: [[\"\", 0]]\n    },\n\n    f0_dreadful_wolf_fight: {\n        name: \"Lucia\",\n        action2: [\"save\"],\n        action: [\"heal\"],\n        action3: [\"items\", \"f0_end_teleportation_stone\", 1],\n        say: [\n            [\"You and Lucia have been walking for a while now, in complete silence.\", 0],\n            [\"It's difficult to tell how she feels about the situation, and your reluctance to speak. But\" +\n            \" because of your previous headaches and pains, hearing only the low whisp of leaves overhead is quite a\" +\n            \" soothing experience.\", 0],\n            [\"[name]: Umm... Lore.\", 0],\n            [\"Lucia chooses to break the silence.\", 0],\n            [\"[name]: I'm sorry, I've been pushing you around a lot since you woke up.\", 0],\n            [\"[name]: Do you have any questions? You know, about the situation, or what happened...\", 0],\n            [\"It looks like this would be a good chance to get some info. You gathered a bit from things she's\" +\n            \" said but you're still very much in the dark. Really, you don't even know who she is. So, you decide to ask about..\", 0]\n        ],\n        options: {\n            \"Ask about who Lucia is\": {\n                say: [\n                    [\"You ask Lucia about who she is.\", 0],\n                    [\"[name]: Me? Um..\"],\n                    [\"She thinks for a bit.\", 0],\n                    [\"[name]: Well, my name's Lucia. I'm 17 years old!\", 0],\n                    [\"This isn't really what you meant, but you don't say anything.\", 0],\n                    [\"[name]: I'm a type of magic user called a Nexus, which means I draw magic from beings I've\" +\n                    \" contracted with while adventuring. I'm quite accomplished in my field, actually!\", 0],\n                    [\"She smacks her chest in a motion of pride.\", 0],\n                    [\"[name]: I can also do lots of other things like use normal magic, ritual magic,\" + //  like use basic magic, use ritual magic, perform\n                    \" internal and external summoning, some spiritual arts..\", 0],\n                    [\"Lucia checks herself.\", 0],\n                    [\"[name]: Um-- anyways, I met you a few years ago and we went on some adventures... then...\", 0],\n                    [\"[name]: ..well, that's everything about me.\"],\n                    [\"Lucia stops talking and looks forwards again. You continue in silence for a while.\", 0]\n                ],\n                action: [\"waypoint\", \"postChoice\"]\n            },\n            \"Ask about who you are\": {\n                say: [\n                    [\"You ask Lucia about who you are.\", 0],\n                    [\"To be honest, you can remember quite a bit about yourself.\", 0],\n                    [\"You're 17, and you come from a rural town named Arlam.\", 0],\n                    [\"You're good with a sword and often called kind, alhough reticent. You had a younger sister.\", 0],\n                    [\"Despite all this knowledge, you feel like there's something missing.. lost in your thoughts\" +\n                    \" for a short while, you miss some of what Lucia was saying.\", 0],\n                    [\"[name]: --And your dad is a great cook-- hey, are you listening?\", 0],\n                    [\"You affirm to her your attention. She looks suspiciously at you then turns forward and continues speaking\", 0],\n                    [\"[name]: Anyways, we met a few years ago. I think your village has a lot of ex-adventurers and mercenaries,\" +\n                    \" so by the time we met, you were already good at fighting.\", 0],\n                    [\"[name]: We went on some adventures, finding rare things and learning lots of secrets.\", 0],\n                    [\"Lucia looks at you with a sad smile.\", 0],\n                    [\"[name]: Anyways, it looks like you don't remember much of that stuff.. I won't get into it here.\", 0],\n                    [\"Lucia stops talking and looks forwards again. You continue in silence for a while.\", 0]\n                ],\n                action: [\"waypoint\", \"postChoice\"]\n            },\n            \"Ask about what happened\": {\n                say: [\n                    [\"You ask Lucia about what happened.\", 0],\n                    [\"As she listens to your question, she starts to look a bit uncomfortable. You can't tell\" +\n                    \" if it's because you're bringing up something she doesn't want you to know, or if it's\" +\n                    \" because you're bringing up something she doesn't want to recall.\", 0],\n                    [\"[name]: ..Um..\", 0],\n                    [\"[name]: Well, we were adventuring partners for a while... but one day..\", 0],\n                    [\"[name]: We were battling an enemy, and they.. did something to you..\", 0],\n                    [\"[name]: And you became like this.\", 0],\n                    [\"[name]: I had to get away with you, but it was hard, and I got hurt a little..\", 0],\n                    [\"Lucia runs her right hand over her left arm. If you squint, you can see very faded cuts and bruises\" +\n                    \". It looks like they were healed with some kind of magic.\", 0],\n                    [\"[name]: But it's okay now! Really... I think you're slowly returning to normal..\", 0],\n                    [\"Lucia smiles sadly.\", 0]\n                ],\n                action: [\"waypoint\", \"postChoice\"]\n            },\n            \"Ask about your relationship with Lucia\": {\n                say: [\n                    [\"It's a bit weird how you awoke with Lucia alone, with nothing or nobody in sight.\", 0],\n                    [\"So, you decide to ask about your relationship with Lucia\", 0],\n                    [\"[name]: ..Huh?\", 0],\n                    [\"Lucia seems a little startled at your question.\", 0],\n                    [\"[name]: Is now really the time to be asking something like that? *<i>She says quietly.</i>*\"],\n                    [\"[name]: A-Anyways, we were good friends. We've known each other for a while.\", 0],\n                    [\"She doesn't elaborate.\", 0]\n                ],\n                action: [\"waypoint\", \"postChoice\"]\n            }, \n            \"Don't ask anything\": {\n                say: [\n                    [\"You look at her as though to elucidate that you have nothing to say. She looks back at you,\" +\n                    \" and then turns her head forwards again.\", 0],\n                    [\"[name]: Hm.. Okay.\", 0]\n                ],\n                action: [\"waypoint\", \"postChoice\"]\n            }\n        },\n        \"postChoice\": {\n            say: [\n                [\"It's been a while. Just as you had started to get into the flow of silently following the repetitive path\" +\n                \", Lucia stops walking and grabs your arm.\", 0]\n            ],\n            action: [\"music\", \"stop\"],\n            say2: [\n                [\"[name]: There's something nearby...\", 0],\n                [\"You sense it isn't as great as what Lucia feels, but a feeling of alarm creeps down your spine and\" +\n                \" throughout your body.\", 0],\n                [\"A rustling sensation crops up in the foliage surrounding the tunnel. It comes and goes, in different\" +\n                \" places each time.\", 0],\n                [\"At first it is distant. You wonder if Lucia heard it from so far away. But it grows closer and closer..\", 0],\n                [\"[name]: LORE! Look out!--\", 0]\n            ],\n            action3: [\"music\", \"intimidating_enemy$\"],\n            say3: [\n                [\"A dark grey blur bursts from the right and cuts straight through you!--\", 0],\n                [\"Or it would've, you realised, had Lucia not pushed you out of the way.\", 0],\n                [\"You get up and turn your head to Lucia--\", 0],\n                [\"She's clearly alive, but the <i>thing</i> grazed her arm. It's bleeding, and underneath her skin, you\" +\n                \" can see something blackish-purple pulsating balefully.\", 0],\n                [\"You get up to help her, but something stands in your path.\", 0],\n                [\"It's some kind of wolf, but it's hairs are not only standing on end, but writhing and threshing as though\"+ \n                \" they're trying to escape the skin of the creature.\", 0],\n                [\"It has irises of purple, the pigment of which leak into a pair of deep black sclera.\", 0],\n                [\"[name]: Lor-e. . Ru-n...\", 0],\n                [\"Lucia looks as though she's on the verge of collapsing. But really, you don't notice.\", 0],\n                [\"Your attention is absorbed by the thing before you, and the fighting instinct that it's awakening in you.\", 0],\n                [\"The thing whose growls sound like how it would feel to drown in a sea of spiders, that is pouncing at you this very moment--\", -1]\n            ],\n            action2: [\"battle\", [[\"dreadful_wolf\", {\n                overlayMusic: true\n            }], [\"waypoint\", \"postBattle\"]]],\n        },\n        \"postBattle\": {\n            action: [\"music\", \"none\"],\n            say: [\n                [\"With the creature vanquished, your raging mind settles and you turn your focus to Lucia.\", 0],\n                [\"[name]: LORE!!\"],\n                [\"In the brief moments before she hugs you, you note that her wounds are quickly fading. It looks\" +\n                \" like she used some kind of healing magic in the time your spent fighting.\", 0],\n                [\"She quickly lets go of you.\", 0],\n                [\"[name]: W-We don't have time. We need to hurry!\", 0],\n                [\"And with that, she runs onwards, explaining nothing. She doesn't turn her back once, likely trusting\" +\n                \" that you will follow close behind.\", 0],\n                [\"<b>Up ahead is the last encounter of this tutorial. Make sure you're prepared, it may not\" +\n                \" be an easy fight. It is recommended you have full health and mana going into the battle.</b>\", 0,\n                true, { unskippable: true}],\n                [\"<b>If need be, you can go back and fight some slimes for more pouch items.</b>\", 0, true, { unskippable: true}],\n                [\"<b>If you have items you would like to preserve or use again, you can disable auto save in settings before the final confrontation.\", 0, true, { unskippable: true}]\n            ],\n            action2: [\"flag\", \"f0_fought_dreadful_wolf\", \"true\"],\n            action3: [\"save\"],\n            action4: [\"end\"]\n        },\n        end: [[\"\", 0]]\n    },\n\n    f0_charon_fight: {\n        name: \"Lucia\",\n        action8: [\"items\", \"f0_end_teleportation_stone\", 1],\n        action7: [\"save\"],\n        action6: [\"heal\"],\n        say: [\n            [\"It feels like you've been running non-stop for ages.\", 0],\n            [\"[name]: Just... <i>*pant*</i> a lit.. <i>*pant</i>* ..tle more... <i>*pant*</i>...\", 0],\n            [\"For the first time since you started running, Lucia turns back to you.\", 0],\n            [\"[name]: Lore! I can see the end--\", 0],\n            [\"...\", 0],\n            [\"???: Hey.\", 0],\n            [\"[name]: Y.. how...\", 0],\n            [\"???: How? More like, how did you escape? Amirite?\", 0],\n            [\"You haven't turned around to face it, so you don't know what it looks like. But from its voice\" +\n            \" you feel like it were an inescapable chasm, leading to a void that contained every disease;\", 0],\n            [\"Every pain, every kind of suffering possible.\", 0],\n            [\"Slowly, you wrench your head 180 degrees to face what can only be descriped as impending despair.\", 0]\n        ],\n        action: [\"music\", \"intimidating_enemy$\"],\n        say2: [\n            [\"It has the clothes of a malnourished peasant.\", 0],\n            [\"Deep black skin embroidered with bright red patterns wearing a single dark brown cloth- that covers its torso\" +\n            \" and a small amount of its legs.\", 0],\n            [\"Through it's black eyes encased in a white-and-red cornea, you wonder if it sees the same world you do.\", 0],\n            [\"???: Horribly convenient, isn't it? For something like <i>teleporation</i> to work while I was around..\", 0],\n            [\"???: I'm pretty sure you had better ways of getting away but you panicked, didn't you? Luckily for me\" +\n            \", you panicked.\", 0],\n            [\"???: You see, I'm a bit of a genius... so I just re-routed your teleportation to come here. There's nowhere to run now. Barely any mana to draw upon... but you're too wounded now anyways, aren't you?\", 0],\n            [\"[name]: W-Wh...\", 1],\n            [\"???: Aah, whatever. I don't know if I can beat you, but this kid should be easy. You're next, I guess.\", 0],\n            [\"You don't know exactly what's going on or what Lucia knows about this thing, but you don't feel the same\" +\n            \" paralysing trepidation she does.\", 0],\n            [\"You assume a battle-ready stance and face it. In all likelihood, this is your only chance. You have to beat it\" +\n            \" here, or Lucia--\", 0]\n        ],\n        action2: [\"music\", \"mechanical_rhythm$\"],\n        say3: [\n            [\"???: You want to fight back?\", 0],\n            [\"It shrugs.\", 0],\n            [\"???: Well, alright. I'll toy with you a bit.. I've been pretty bored lately.\", 0],\n            [\"You narrow your eyes and prepare yourself. He approaches slowly at first...\", 0],\n            [\"Before dashing towards you at breakneck speed!--\", -1]\n        ],\n        action4: [\"custom\", () => {\n            _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"data\"].unlocked.ascend = true;\n        }],\n        action5: [\"save\"],\n        action3: [\"battle\", [[\"charon\", {\n            overlayMusic: true\n        }], [\"waypoint\", \"postBattle\"]]],\n        \"postBattle\": {\n            action: [\"music\", \"intimindating_enemy$\"],\n            say: [\n                [\"???: Wow! You're alive.\", 0],\n                [\"There is no mockery or disrespect in his voice. He seems genuinely surprised and impressed.\", 0],\n                [\"??? But of course, you're no match for me. Get out of my sight.\", 0],\n                [\"And with that, he sweeps his arm at your torso.\", 0],\n                [\"You're convinced there must be some kind of special technique he's using; some kind of magic enhancement of his strength - \"+ \n                \"there's no time to react to his somewhat frail atramentous arm as it strikes you from the side.\", 0],\n                [\"Midway through considering this, all thought is lost as the appendage actually makes contact-- you can feel several bones\" +\n                \" in your body snap as you're flung into a tree in the distance.\", 0],\n                [\"[name]: LORE!!\", 0],\n                [\"Lucia is shouting, but you can barely hear her. Your consciousness mimics your blood and drains from your body rapidly.\", 0],\n                [\"The last thing you see as your vision fades quickly from red, to black, into nothing, is the jet black figure steadily approaching\" +\n                \" Lucia, and the last thing you hear, her cries--\", 0],\n                [\"[name]: LORE!! GET UP!!\", 0],\n                [\"It's no use. Her pleas can't reach you.\", 0]\n            ],\n            say2: [\n                [\"...\", 0],\n                [\"You're dead.\", 0],\n                [\"If you're dead, then where are you?\", 0],\n                [\"You can't tell.\", 0],\n                [\"Worse yet, you can't even tell that you can't tell, nor can you tell light from dark, night from day. You're dead, after all.\", 0],\n                [\"But still, you feel there is something in you, clinging to life. If 'death' is a murky black sea; Styx; a flowing stream of tar\" +\n                \" from which nothing can escape, then you are hanging on a crag just above--\", 0],\n                [\"You hand clapsing the edge of the cliff is not a physical one, but rather a metaphorical one; 'hope', 'willpower', call it what you will.\", 0],\n                [\"Ultimately, it matters not. Just as the strength faded from your dying body, strength too will fade from your dying soul.\", 0],\n                ['\"..orun..! ..seech! ..heed... ..!!!\"', 0],\n                [\"...\", 0],\n                [\"Was that... sound from the land of the living?\", 0],\n                [\"Just as your grip was fading, and Styx, the Reaper, Hades, all concepts of death seemed so inviting..\", 0],\n                [\"You started to feel light..\", 0],\n                [\"Until eventually, you were lighter than air. And you began to float.\", 0],\n                [\"Out of this land of impending death, out from the depths of your soul, back through the cage of your mind and into the land of the living--\", 0]\n            ],\n            action2: [\"music\", \"creator\"],\n            say3: [\n                [\"Your vision is recovering slowly, but at the moment, you can only see splotches; people or things, you presume, in a misty green backdrop.\", 0],\n                [\"One of the blotches has blue hair, you infer. And one is almost pitch black.\", 0],\n                [\"And...\", 0],\n                [\"???: Lucia, you have summoned me. Do you understand what this means?\", 0],\n                [\"It looks like your hearing has returned as well. You don't hear Lucia respond-- you can't tell if that's because she didn't or because\" +\n                \" you didn't hear it.\", 0],\n                [\"It hurts to look at the third blur. It's body emits a blazing light, but you don't think that's the reason you are unable to stare at it.\", 0],\n                [\"It's a different pain from having searing light injected into one's ears. Different from the mind-numbing sensastion of having your\" +\n                \" bones splinter and scrape at your insides.\", 0],\n                [\"Instead, whenever your eyes attempt to focus on it, there's this insurmountable feeling of dread.. like you're unworthy of existing in it's\" +\n                \" presence.\", 0],\n                [\"Focusing on its image in your peripheral vision, you manage to observe it turning from Lucia (who you can now see more clearly) to the thing\" +\n                \" that nearly killed-- no, that <i>did</i> kill you.\", 0],\n                [\"???: Charon. I did not create you, but all acts of creation must be powered or preceded by some prior act of creation. Everything has a source.\", 0],\n                [\"???: I am not your creator. However, if you follow the flow of 'power of creation' that resulted in your conception upstream..\", 0],\n                [\"???: Eventually, you will find myself.\", 0],\n                [\"???: I do not know what, if anything, supersedes my authority. However, although I am not your direct creator...\", 0],\n                [\"???: In this case, I will exert my existential seniority over you and reclaim that which originally came from me.\", 0],\n                [\"Charon: --Wh-\", 0],\n                [\"You assume Charon is the name of the black-and-red, bipedal thing that is recoiling in shock.\", 0],\n                [\"You are healed enough to speak, however an unknown force has sealed your mouth shut.\", 0],\n                [\"Somehow, Charon forces the wind in his lungs against the oppressive force that must be assialing him..\", 0],\n                [\"Charon: ...who.. ar...e...\", 0],\n                [\"???: I will only do what is necessary, and I will as such grant you a 'death' as beings of your Tier see it.\", 0],\n                [\"???: Your physical life will cease, however your abstract life; the memories that others have on you and the impact you have had\" +\n                \" on this world, will remain.\", 0],\n                [\"???: Regardless, you will have no use for my name.\", 0],\n                [\"???: Now, I will make a gesture that those of your Tier see befitting of the action I will undertake...\", 0],\n                [\"You are still unable to look directly at the thing which never even acknowledged you. But you are able to tell that it is moving one of it's hands\" +\n                \", which was originally held loosely at its side, and raising it to point at Charon.\", 0],\n                [\"???: I cast... ᛞᛖᚨᛏᚺ.\", 0],\n                [\"As he casts his 'spell', you can feel the earth beneath you begin to quiver, then quake, and begin to crumble--\", 0],\n                [\"The light radiating from the unknown entity increases rapidly in intensity, until you have to seal your eyes shut completely\" +\n                \" to avoid becoming blind. But somehow, you know that the measly cover from the flaps of flesh that are you eyelids will be\" +\n                \" insufficient.\", 0],\n                [\"The blackness you percieve from the cover of your eyelids turns red, and then white...\", 0]\n            ],\n            action4: [\"music\", \"none\"],\n            action3: [\"custom\", () => {\n                _js_models_data__WEBPACK_IMPORTED_MODULE_0__[\"data\"].special.clearedTutorialTrue = true;\n                Object(_js_models_settings__WEBPACK_IMPORTED_MODULE_1__[\"saveGame\"])();\n                Object(_js__WEBPACK_IMPORTED_MODULE_2__[\"endTutorial\"])();\n            }]\n\n\n        }\n    },\n\n    // INTERESTING ITEMS ON FLOOR\n    /* #region */\n\n    f0_greater_health_potion_on_floor: {\n        interesting_item: [\"f0_picked_up_greater_health_potion\", [\"greater_health_potion\", 1]],\n        end: [[\"\", 0]]\n    },\n    f0_greater_mana_potion_on_floor: {\n        interesting_item: [\"f0_picked_up_greater_mana_potion\", [\"greater_mana_potion\", 1]],\n        end: [[\"\", 0]]\n    },\n    f0_invigorating_flower_on_floor: {\n        interesting_item: [\"f0_picked_up_invigorating_flower\", [\"invigorating_flower\", 1]],\n        end: [[\"\", 0]]\n    },\n    f0_desperate_flower_on_floor: {\n        interesting_item: [\"f0_picked_up_desperate_flower\", [\"desperate_flower\", 1]],\n        end: [[\"\", 0]]\n    },\n    f0_stamina_vial_on_floor: {\n        interesting_item: [\"f0_picked_up_stamina_vial\", [\"stamina_vial\", 1]],\n        end: [[\"\", 0]]\n    },\n    f0_monster_essence_on_floor: {\n        interesting_item: [\"f0_picked_up_monster_essence\", [\"monster_essence\", 1]],\n        end: [[\"\", 0]]\n    },\n    f0_simple_sword_on_floor: {\n        interesting_item: [\"f0_picked_up_simple_sword\", [\"simple_sword\", 1]],\n        end: [[\"\", 0]]\n    },\n    f0_leather_cap_on_floor: {\n        interesting_item: [\"f0_picked_up_leather_cap\", [\"leather_cap\", 1]],\n        end: [[\"\", 0]]\n    },\n    f0_wolfhide_charm_on_floor: {\n        interesting_item: [\"f0_picked_up_wolfhide_charm\", [\"wolfhide_charm\", 1]],\n        end: [[\"\", 0]]\n    },\n\n    /* #endregion */\n\n}\n//\n\n\n/*\n\n*/\n\n//# sourceURL=webpack:///./src/directories/npc/floor0.js?");

/***/ }),

/***/ "./src/directories/npc/floor1.js":
/*!***************************************!*\
  !*** ./src/directories/npc/floor1.js ***!
  \***************************************/
/*! exports provided: floor1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"floor1\", function() { return floor1; });\n// -- IMPORTS -- \\\\\n\n//\n\n\n// -- NPCS -- \\\\\nconst floor1 = {\n    /*\n    old_man: {\n        name: \"Old man\",\n        say: [[\"<i>You approach the old man.\", 0], [\"[name]: Hello! How are you faring today?\", 0]],\n        options: {\n            \"I'm okay, thanks\": {\n                say: [[\"[name]: That's good. Hope you've been eating your greens.\", 0],\n                [\"[name]: Any idea where I am?\", 0]],\n                options: {\n                    \"no, sorry\": {\n                        say: [[\"[name]: Oh, shame. Want to see my teeth?\", 0]],\n                        options: {\n                            \"no\": {\n                                say: [[\"[name]: Ok.\", 0]],\n                                options: {\n                                    \"ok, goodbye\": {\n                                        action: [\"end\"]\n                                    },\n                                    \"put 'em up old man\": {\n                                        say: [[\"[name]: Okay brother, you're asking for it.\", 0],\n                                        [\"Here we go!\", 0]],\n                                        action: [\"battle\", [\"wolf\", [\"waypoint\", \"no, sorry\"]]]\n                                    }\n                                }\n                            },\n                            \"yes\": {\n                                say: [[`<i>You respond 'yes', and also compliment him on his teeth.</i>`, 0]],\n                                action: [\"waypoint\", \"You have nice teeth\"]\n                            }\n                        }\n                    }\n                }\n            },\n            \"You have nice teeth\": {\n                say: [[\"I know. Here, have a look\", 0],\n                [\"<i>He shows you his teeth</i>\", 0],\n                [\"Buy some!\", 0]],\n                action: [\"shop\", \"old_man\", [\"waypoint\", \"no, sorry\"]]\n            }\n        },\n        end: [[\"[name]: Ok bye\", 0]]\n\n    },\n    */\n    lily: {\n        name: \"Lily\",\n        say: [[`<i>You approach the child. As you near her, she backs away slightly.`, 0]],\n        conditional: {\n            \"level: 0\": {\n                say: [[`[name]: H-Hello [player]... can you help me?`]],\n                action: [\"gold\", 0],\n                action3: [\"exp\", 0],\n                action2: [\"end\"]\n            },\n            \"item: 1212 slime_ball\": {\n                say: [[`[name]: Icky! Slime!`]],\n                action: [\"items\", \"slime_ball\", 0],\n                action2: [\"end\"]\n            },\n            \"flag: -beatSlime\": {\n                say: [[`[name]: You haven't beat the slime? Weakling.`]],\n                action: [\"recipe\", \"slam_sword\"],\n                action2: [\"end\"]\n            },\n            \"level: 121\": {\n                say: [[`[name]: I don't have anything interesting to say to you`, 0]],\n                action: [\"end\"]\n            }\n        },\n        end: [[\"[name]: Goodbye.\", 0]]\n    },\n\n    f1_little_girl: {\n        name: \"Little girl\",\n        conditional: {\n            \"flag: -f1_spoken_to_little_girl\": {\n                say: [[\"[name]: Hello! You can fight right? Help me gather slimes!\", 0],\n                [\"[name]: I loooove slimes. They are so slimy. I love slimy things!\", 0],\n                [\"[name]: If you help me get some slime, I will give you my pocket money! That's a good deal right?\" +\n                \" Get me some slimes! 20 Slime balls, please!\", 0]],\n                action: [\"flag\", \"f1_spoken_to_little_girl\", \"true\"],\n                action2: [\"end\"]\n            },\n\n            \"flag: f1_spoken_to_little_girl\": {\n                conditional: {\n                    \"flag: -f1_helped_little_girl\": {\n                        conditional: {\n                            \"item: 20 slime_ball\": {\n                                say: [[\"[name]: You got the slime balls! Thank you Thank youThankyouThankyouThankyou--\", 0],\n                                [\"<i>She takes the slime balls off you without warning or consent.\", 0],\n                                [\"<i>Her excitement is a little disconcerting. Best take the money and leave...</i>\", 0]],\n                                action: [\"gold\", 250],\n                                action5: [\"exp\", 250],\n                                action2: [\"items\", \"slime_ball\", -20],\n                                action3: [\"flag\", \"f1_helped_little_girl\", \"true\"],\n                                action4: [\"end\"]\n                            },\n                            \"level: 0\": {\n                                say: [[\"[name]: You haven't got the slime balls yet?\", 0],\n                                [\"<i>The girl looks disappointed. Like she might cry..\", 0],\n                                [\"<i>Perhaps best to leave her alone until you have the slime balls.</i>\", 0]],\n                                action: [\"end\"]\n                            }\n                        }\n                    },\n                    \"flag: f1_helped_little_girl\": {\n                        say: [[\"<i>The little girl looks as though she is in a trance of ecstasy. Best leave her alone..\", 0]],\n                        action: [\"end\"]\n                    }\n                }\n            }\n        },\n        end: [[\"<i>You say goodbye to the little girl.</i>\", 0]]\n    },\n\n    f1_docile_slime: {\n        name: \"Docile slime\",\n        say: [[\"<i>You approach the slime.</i>\", 0]],\n        conditional: {\n            \"flag: f1_helped_docile_slime\": {\n                say: [[\"<i>The slime looks happy to see you. It wants to show you something.\", 0]],\n                action: [\"shop\", \"f1_docile_slime_shop\", [\"end\"]]\n            },\n            \"flag: -f1_spoken_to_docile_slime\": {\n                say: [[\"<i>Slimes can't speak, obviously. But it seems to want something from you.</i>\", 0],\n                    [\"<i>Somehow you gather that it is trying to gesture to the remnants of slime on the ground..\" +\n                    \" as though it wants some slime for itself.</i>\", 0],\n                    [\"<i>100 Slime balls might be enough to appease the slime. It seems to have nothing more\" +\n                    \" to say to you.\", 0]],\n                action: [\"flag\", \"f1_spoken_to_docile_slime\", \"true\"],\n                action2: [\"end\"]\n            },\n            \"flag: f1_spoken_to_docile_slime\": {\n                conditional: {\n                    \"item: 100 slime_ball\": {\n                        say: [[\"<i>The slime looks pleased with you, and hopeful. Will you give the sime what it wants?\", 0]],\n                        options: {\n                            \"yes\": {\n                                exp: [\"exp\", 0],\n                                say: [[\"<i>You give the slime 100 slime balls. It has way of showing emotion, but you can tell\" +\n                            \" that it's very happy.\", 0],\n                                [\"<i>It seems to want to show you something..\", 0]],\n                                action3: [\"items\", \"slime_ball\", -100],\n                                action: [\"flag\", \"f1_helped_docile_slime\", \"true\"],\n                                action4: [\"items\", \"friendly_slime\", 0],\n                                action5: [\"recipe\", \"friendly_greater_slime\"],\n                                action2: [\"shop\", \"f1_docile_slime_shop\", [\"end\"]]\n                            \n                            },\n                            \"no\": {\n                                say: [[\"<i>The slime looks disappointed. It doesn't want to speak to you anymore.\", 0]],\n                                action: [\"end\"]\n                            }\n                        }\n                    },\n                    \"level: 0\": {\n                        say: [[\"<i>You don't seem to have what the slime wants. It ignores you.</i>\", 0]],\n                        action: [\"end\"]\n                    }\n                }\n            }\n        },\n        end: [[\"[name]: ...\", 0]]\n    },\n\n    f1_wanderer_statue: { // rework when adding wayward traveler super boss\n        name: \"Unnamed Wanderer\",\n        say: [[\"<i>You approach the statue.</i>\", 0],\n            [\"<i>It is well looked after, despite showing clear signs of wear. It seems to be of some kind of goddess,\" +\n        \" who adorns a benevolent smile with her arms outstreched, as though enveloping many in her embrace.\", 2 ],\n            [\"<i>Below the statue is a tall rectangular stone container. It is filled up about halfway with various\" +\n        \" items.\", 0]],\n        conditional: {\n            \"item: 1 wanderer_memorabilia\": {\n                say: [[\"Some of the items remind you of the wanderer memorabilia that you found off somebody else. Will you\" +\n                    \" add some to the container?\", 0]],\n                options: {\n                    \"yes\": {\n                        say: [[\"<i>You place a piece of wanderer memorabilia into the rectangle. Nothing happens for a short\" +\n                    \" while, but a person eventually emerges. They have ragged clothes and a few weapons and other useful items\" +\n                    \" holstered at their waste. Despite their decrepit appearance there is an aura of experience and knowledge\" +\n                    \" that you interpret from their demeanour.\", 0],\n                        [\"[name]: Who are you? You don't look like a wanderer.\", 0]],\n                        action: [\"items\", \"wanderer_memorabilia\", -1],\n                        options: {\n                            \"wanderer?\": {\n                                say: [[\"[name]: You must have happened on somebody else's memorabilia...\", 0],\n                                    [\"<i>The person thinks to themselves for a little.</i>\", 0],\n                                    [\"[name]: Many people have gone on adventures in the past in search for some purpose, or\" +\n                                \" in pursuit of some kind of treasure or reward.\", 0],\n                                    [\"[name]: Regardless of whether they find what they are looking for, at the end of their\" +\n                                \" quest, they almost always find that there is nothing more they want to achieve... these\" +\n                                \" people are called wanderers.\", 0],\n                                    [\"[name]: Not all wanderers believe in the Wandering Goddess Lucia, but she is somewhat\" +\n                                \" of an icon for wanderers... hence the statue.\", 0],\n                                    [\"[name]: Wanderers place their memorabilia here in honour of her and other wanderers.\" +\n                                \" if two wanderers meet here, they will often battle to remember their days of adventure\" +\n                                \" and learn of the experiences of others.\", 0],\n                                    [\"[name]: You aren't a wanderer, but you still seem like somebody who can fight. If you\" +\n                                \" would like, we can battle here, right now.\", 0]],\n                                action: [\"flag\", \"f1_met_wanderer_at_statue\", \"true\"],\n                                options: {\n                                    \"yes\": {\n                                        action: [\"waypoint\", \"let's fight!\"]\n                                    },\n                                    \"no\": {\n                                        say: [[\"[name]: Alright. Well, now you know the purpose of this area. If you come\" +\n                                    \" here again, it's unlikely you will meet the same person. Keep safe, young one.\", 0],\n                                    [   \"<i>The wanderer walks away. He walks quite quickly, you notice. It isn't long until his footsteps are\" + \n                                    \" no longer audible.\", 0]],\n                                        action: [\"end\"]\n                                    }\n                                }\n                            },\n                            \"let's fight!\": {\n                                say: [[\"[name]: Very well then. Prepare yourself!\", 0]],\n                                action: [\"battle\", [[\"wayward_traveler\", {\n                                    changeLevel: false,\n                                    levelCap: false,\n                                    addLevels: false\n                                }], [\"waypoint\", \"after_battle\"]]]\n                            }\n                        }\n                    },\n                    \"no\": {\n                        say: [[\"<i>You decide to leave the statue alone.\", 0]],\n                        action: [\"end\"]\n                    }\n                }\n            },\n            \"level: 0\": {\n                say: [[\"<i>There doesn't seem to be much to do here. Nothing you own reminds you of the items that are\" +\n            \" in your possession. You decide to leave the statue alone. [UNFINISHED]\", 0]],\n                action: [\"end\"]\n            }\n        },\n        end: [[\"\", 0]],\n        \"after_battle\": {\n            say: [[\"[name]: It was a good fight. I am glad to have met you. Perhaps we will meet again someday...\", 0],\n                [\"<i>The wanderer walks away. He walks quite quickly, you notice. It isn't long until his footsteps are\" + \n            \" no longer audible.\", 0]],\n            action: [\"end\"]\n        }\n        \n    },\n\n    f1_rude_kid: {\n        name: \"Kid\",\n        conditional: {\n            \"flag: -f1_spoken_to_rude_kid\": {\n                say: [[\"<i>You approach the kid. He has an uninviting look on his face. As you near him, he spits on the floor.\", 0],\n                    [\"[name]: Pfft. Whaddya want? Loser.\", 0]],\n                options: {\n                    \"<i>kick his shin</i>\": {\n                        say: [[\"<i>You kick the kid's shin.</i>\", 0],\n                            [\"[name]: OW! What the hell, dude?!\", 0],\n                            [\"<i>The kid's eyes tear up and he runs away.\", 0],\n                            [\"<i>You notice he left some gold on floor. Hopefully you don't see that kid again.</i>\", 0]],\n                        action: [\"gold\", 100],\n                        action5: [\"exp\", 50],\n                        action2: [\"flag\", \"f1_kicked_rude_kids_shin\", \"true\"],\n                        action3: [\"flag\", \"f1_spoken_to_rude_kid\", \"true\"],\n                        action4: [\"end\"]\n                    },\n                    \"why are you so rude?\": {\n                        say: [[\"[name]: Rude? I'm just battle hardened, y'see. Check this out.\", 0],\n                            [\"<i>The kid holds up a small patch of grey wolf fur.</i>\", 0],\n                            [\"[name]: Runt attacked me and my li'l sis. We got separated, and I fought off\" +\n                        \" the wolf with my own bare hands. Not a pretty sight for pansy folk like yourself.\", 0],\n                            [\"[name]: You know what? Keep this pelt. As a reminder of the horrors of war.\", 0],\n                            [\"<i>He throws the pelt at your feet.</i>\", 0],\n                            [\"[name]: Not everyone has to go through what I did...\", 0],\n                            [\"<i>The kid walks away, hands in his pockets. Hopefully you don't see that kid again.\", 0]],\n                        action: [\"items\", \"grey_wolf_pelt\", 3],\n                        action5: [\"exp\", 100],\n                        action2: [\"flag\", \"f1_extended_convo_with_rude_kid\", \"true\"],\n                        action3: [\"flag\", \"f1_spoken_to_rude_kid\", \"true\"],\n                        action4: [\"end\"]\n                    }\n                }\n            },\n            \"flag: f1_spoken_to_rude_kid\": {\n                say: [[\"<i>You look for the rude kid, but he isn't there anymore.\", 0]],\n                action: [\"end\"]\n            }\n\n        },\n\n        end: [[\"\", 0]]\n    },\n\n    f1_wolf_man: { // rework before adding\n        name: \"Lucas\",\n        say: [[\"<i>You approach the man. As you do so, he stands up. He smells a little.\", 0],\n            [\"[name]: Hi. My name's Lucas. I live in the forest, nearby this area.\", 0],\n            [\"[name]: I thought it would be a good idea to let you know that there more wolves in this spot than normal.\" +\n        \" If you need some wolf pelts, it might be worth hanging around here.\", 0],\n            [\"<i>The man closes his eyes. It doesn't seem like he wants to say much else..</i>\", 0]],\n        action: [\"end\"],\n        end: [[\"\", 0]]\n    },\n\n    f1_old_man: { // rework before adding\n        name: \"Old Man\",\n        say: [[\"<i>You start to move towards the old man, but before you can approach, he quickly notices you and\" +\n        \" beckons you over rather enthusiastically.</i>\", 0],\n            [\"[name]: Helloe there! Not many people come 'round these parts no more.\", 0],\n            [\"[name]: It's such a beautifool place.. but a little dangerous for most people, even though it's a little\" +\n        \" less dangerous than the ruins and forest a li'l far off.\", 0],\n            [\"[name]: Must the be rumours of some massive sea serpent, 'though I've never seen nothing like that in my time..\", 0],\n            [\"[name]: Thanks for listenin' to me ramblin' off about nothing. I have some stuff that could be of use to you,\" +\n        \" if you're interested...\", 0]],\n        options: {\n            \"yes\": {\n                say: [[\"[name]: Ok, then - have yourself a look..\"]],\n                action: [\"shop\", \"f1_old_man\", [\"end\"]]\n            },\n            \"no\": {\n                say: [[\"[name]: Alrighty then - I'll be seeyin' ye around, I suppose.\"]],\n                action: [\"end\"]\n            }\n        },\n        end: [[\"<i>You say goodbye to the old man.</i>\", 0]]\n    },\n\n    f1_little_boy: { // rework before adding\n        name: \"Little boy\",\n        say: [[`<i>As you begin to approach the kid, you notice his distinctive eyes, a hue of dull red. The dark` +\n        ` clothes that he's wearing make him difficult to say, and coalesce with his facial aesthetic into a somewhat` +\n        ` edgy demeanour.`, 0]],\n        conditional: {\n            \"flag: f1_helped_little_girl\": {\n                conditional: {\n                    \"flag: -f1_spoken_to_little_boy\": {\n                        say: [[\"[name]: ...\", 0],\n                        [\"[name]: I don't wanna speak to a weakling like you. Bring me the Crimson Regalia if you're realling worth my time..\", 0],\n                        [\"<i>The kid seems reluctant to speak. Perhaps if you bring him 30 or so red slime balls..\", 0]],\n                        action: [\"flag\", \"f1_spoken_to_little_boy\", \"true\"],\n                        action2: [\"end\"]\n                    },\n        \n                    \"flag: f1_spoken_to_little_boy\": {\n                        conditional: {\n                            \"flag: -f1_helped_little_boy\": {\n                                conditional: {\n                                    \"item: 30 red_slime_ball\": {\n                                        say: [[\"[name]: Is that.. Crimson Reglia?!\", 0],\n                                        [\"<i>The child hesitates a little. It doesn't seem like he thought you'd actually bring him the slime balls.\", 0],\n                                        [\"[name]: I-I bet you stole them from someone. How pathetic--\", 0],\n                                        [\"[player]: What the hell man? What's your problem?\", 0],\n                                        [\"[name]: You can speak?! Crapdude calm down I was just messing around I--\", 0],\n                                        [\"[player]: Kids like you are so annoying.. I'll show you--\", 0],\n                                        [\"[name]: Brocalm down! OK, I found this thing in this forest and I thought it was really cool and since\" +\n                                        \" putting it on I haven't been attacked here just leave me alone!!\", 0],\n                                        [\"<i>The kid hands you a pendant and runs off. By the time you've processed what has happened the kid is out of earshot.\" +\n                                        \" Oh well. There was some money on the floor as well... your lucky day.\", 0]],\n                                        action: [\"gold\", 0],\n                                        action6: [\"exp\", 0],\n                                        action2: [\"items\", \"red_slime_ball\", -30],\n                                        action5: [\"items\", \"shadowwarding_pendant\", 0],\n                                        action3: [\"flag\", \"f1_helped_little_boy\", \"true\"],\n                                        action4: [\"end\"]\n                                    },\n                                    \"level: 0\": {\n                                        say: [[\"[name]: I don't see the crimson regalia.. get out of my sight.\", 0]],\n                                        action: [\"end\"]\n                                    }\n                                }\n                            },\n                            \"flag: f1_helped_little_boy\": {\n                                say: [[\"<i>...Is what you would've seen, but the kid is noowhere to be found.\", 0]],\n                                action: [\"end\"]\n                            }\n                        }\n                    }\n                },\n            },\n\n            \"level: 0\": {\n                say: [[\"[name]: You aren't worthy.. I can feel it.\", 0],\n                [\"<i>The boy refuses to say anything more. It looks like you need to help someone else before him.</i>\", 0]],\n                action: [\"end\"]\n            }\n        },\n\n        end: [[\"\", 0]]\n    },\n\n    f1_lost_person: { // rework before adding?\n        name: \"Lost person\",\n        say: [[\"[name]: Hi... I'm lost. Do you know where I am?\", 0]],\n        options: {\n            \"yes\": {\n                say: [[\"[name]: Sweet! Can you tell me where I am then?\", 0]],\n                options: {\n                    \"Sorry I was lying, I don't know.\": {\n                        say: [[\"[name]: ...\", 0],\n                            [\"[name]: Godammit.\", 0]],\n                        action: [\"end\"]\n                    },\n                    \"The dark forest\": {\n                        say: [[\"[name]: Thanks! That's not helpful at all!\", 0],\n                            [\"[name]: Asshole.\", 0]],\n                            action: [\"end\"]\n                    },\n                    \"The twisted trees\": {\n                        say: [[\"[name]: I'm pretty sure that's not even a place.\", 0]],\n                        action: [\"end\"]\n                    },\n                    \"Hell\": {\n                        say: [[\"[name]: Figures. I've raided one too many village I guess..\", 0],\n                            [\"[name]: But the women were worth it.\", 0],\n                            [\"[name]: You were joking? UM..\", 0]],\n                        action: [\"end\"]\n                    }\n                }\n            },\n            \"no\": {\n                say: [[\"[name]: Fair enough. Not like I can talk...\", 0],\n                    [\"[name]: I know a bit about the general area we're in. The Driftwood area has four main sections.\", 0],\n                    [\"[name]: In the center sort of is the foresty area. To the north-west is a small settlement. I don't know...\", 0],\n                    [\"...much about the rest but I guess there's one area other than this one..\", 0],\n                    [\"[name]: This place is kind of well-known because it has a bunch of interesting stuff in such a small area.\", 0],\n                    [\"[name]: Apparently there's a hydra in a nearby sea, and some evil creature lurking in the forest.. gives me the creeps!\", 0],\n                    [\"[name]: If you ever find out where this place is, please let me know! I don't wanna stay here any longer...\", 0]],\n                    action: [\"end\"]\n            }\n        },\n        end: [[\"\", 0]]\n    },\n\n    f1_weapons_shop: { // rework before adding\n        name: \"Reiner\",\n        say: [[\"<i>You approach the weapons merchant. He is quite large and muscular, with brown hair and brown facial hair.\" +\n                \" He flashes a friendly smile your way.</i>\", 0],\n            [\"[name]: Hey there, runt! You interested in some weapons?\", 0]],\n        options: {\n            \"weapons shop\": {\n                action: [\"shop\", \"f1_weak_weapons\", [\"end\"]]\n            },\n            \"advanced weapons shop\": {\n                action: [\"shop\", \"f1_strong_weapons\", [\"end\"]]\n            },\n            \"nope\":{\n                say: [[\"[name]: No problem! Seeya around!\", 0]],\n                action: [\"end\"]\n            }\n        },\n        end: [[\"[name]: See you later, runt! Come again soon!\", 0]]\n    },\n\n    f1_armour_shop: { // rework before adding\n        name: \"Sora\",\n        say: [[\"<i>You approach the armour merchant. They look a little out of place. As you approach him, he scratches his head and watches you as you near.</i>\", 0],\n                [\"[name]: Umm... hi. Would you like some armour?\", 0]],\n        options: {\n            \"armour shop\": {\n                action: [\"shop\", \"f1_weak_armours\", [\"end\"]]\n            },\n            \"advanced armour shop\": {\n                action: [\"shop\", \"f1_strong_armours\", [\"end\"]]\n            },\n            \"nope\":{\n                say: [[\"[name]: Alright. Um..\", 0]],\n                action: [\"end\"]\n            }\n        },\n        end: [[\"[name]: Ok, uh.. see you later, I guess...\", 0]]\n    },\n\n    f1_misc_shop: { // rework before adding\n        name: \"Amy\",\n        say: [[\"<i>You approach the miscellaneous merchant. She has blond hair and an intelligent glare. She watches\" +\n                \" you silently as you approach, however she has a friendly aura.\", 0],\n            [\"[name]: Hello. I have some stuff for sale. Would you like anything?\"]],\n        options: {\n            \"misc shop\": {\n                action: [\"shop\", \"f1_misc\", [\"end\"]]\n            },\n            \"VIP misc shop\": {\n                conditional: {\n                    \"item: 1 vip_card\": {\n                        action: [\"shop\", \"f1_misc_vip\", [\"end\"]]\n                    },\n                    \"level: 0\": {  \n                        say: [[\"[name]: Sorry, you need a VIP card to access the VIP shop.\", 0]],\n                        action: [\"waypoint\", \"nope\"]\n                    }\n                }\n            },\n            \"nope\": {\n                say: [[\"[name]: Ok. Thanks for coming.\", 0]],\n                action: [\"end\"]\n            }\n        },\n        end: [[\"[name]: Ok, see you later.\", 0]]\n    },\n\n    f1_man_a: { // rework before adding\n        name: \"Male settler\",\n        say: [[\"<i>You approach the man. He, similar to most other men in the settlement, has a somewhat muscular build.\", 0],\n            [\"He had no facial hair and messy black hair, complimenting his plain, dark brown eyes. His attire was...\", 0],\n            [\"...Comparable to most others in the settlement, plain fabric of a dull hue.\", 0],\n            [\"[name]: Hey. What's up?\", 0]],\n        options: {\n            \"talk\": {\n                say: [[\"[name]: This settlement has existed for a few centuies, I think.. I moved in a few years ago.\", 0],\n                        [\"[name]: It's fairly dangerous around here, so a lot of the people who stay here are fairly strong.\", 0],\n                        [\"[name]: But there are tons of animals here, and some of them can be hunted for good reagents, so it's\"\n                        + \" a great place for adventurers to stay.\", 0]],\n                conditional: {\n                    \"level: 0\": {\n                        options: {\n                            \"How long are you going to stay here?\": {\n                                say: [[\"[name]: Ehh... I don't know. Maybe a few more years.\", 0],\n                                        [\"[name]: Maybe once I've made some more money. There are some safer places nearby.\", 0],\n                                        [\"[name]: I could settle down, get a more stable job and a house.. it's pretty appealing.\", 0],\n                                        [\"[name]: But I don't really know right now. It's pretty nice here right now. Gets\" +\n                                        \" you in the mood for an adventure..\", 0]],\n                                action: [\"waypoint\", \"level: 0\"]\n                            },\n                            \"Do you have a family?\": {\n                                say: [[\"[name]: Parents? Yeah. But no wife or kids.\", 0],\n                                        [\"[name]: Women who just want to settle down don't really stay here, it's not a great\" +\n                                        \" place unless you wanna adventure. So most of the girls here are single and uninterested.\", 0],\n                                        [\"[name]: It's a real shame. I wish Amy would take some interest in me..\", 0]],\n                                action: [\"waypoint\", \"level: 0\"]\n                            },\n                            \"bye\": {\n                                action: [\"waypoint\", \"bye\"]\n                            }\n                        }\n                    }\n                }\n            },\n            \"bye\": {\n                action: [\"end\"]\n            }\n        },\n        \n        end: [[\"[name]: Mk, see you later.\", 0]]\n    },\n\n    f1_hyssha: { // rework before adding\n        name: \"Hyssha\",\n        say: [[\"<i>You approach the woman. She seems stronger than most of the residents. Wavy auburn hair cascades down her\" +\n                \" spine.</i>\", 0],\n                [\"<i>She has a somewhat tough face, and her blue eyes grant her a piercing gaze. She's wearing brownish hunter\" +\n                \" garb, accentuated by the intricate wooden bow holstered at her back.\", 0],\n                [\"[name]: Hello. I take it you are an adventuerer. My name is Hyssha.\", 0]],\n        conditional: {\n            \"level: 0\": {\n                options: {\n                    \"What are you doing here?\": {\n                        say: [[\"[name]: I have been staying here for some time. I am searching for a legendary beast..\", 0],\n                                [\"[name]: I am trying to hunt powerful beasts. I use each one I slay to improve my\" +\n                                \" adventuring gear.\", 0]],\n                        options: {\n                            \"How many beasts have you slain?\": {\n                                say: [[\"[name]: Three. Rokusha, an earth anima, whose magical scales I used to enhance my bow.\", 0],\n                                        [\"[name]: Ignia, a fire wyvern. It's wings and scales I used to enhance my armour. With\" +\n                                        \" it's heart, I enhanced my bow.\", 0],\n                                        [\"[name]: The final was a beast in this area.. I don't know it's name, but it escaped\" +\n                                        \" before I could slay it. From a poison-tipped claw it had I enhanced many of my arrows.\", 0],\n                                        [\"[name]: I cannnot simply slay all beasts I come across. I must consider the consequences.\", 0],\n                                        [\"[name]: Otherwise, I would have slain many more creatures..\", 0]],\n                                        action: [\"waypoint\", \"level: 0\"]\n                            },\n                            \"Where's the legendary beast that you're hunting?\": {\n                                say: [[\"[name]: I don't know. It is a type of water beast, however to this point is has eluded me.\", 0],\n                                        [\"[name]: Perhaps it is absent, or must be summoned.. I must do more research.\", 0],\n                                        [\"(BOSS NOT ADDED YET)\"]],\n                                action: [\"waypoint\", \"level: 0\"]\n                            },\n                            \"bye\": {\n                                action: [\"waypoint\", \"bye\"]\n                            }\n                        }\n                    },\n                    \"bye\": {\n                        say: [[\"<i>You say goodbye to Hyssha.\", 0]],\n                        action: [\"end\"]\n                    }\n                }\n            }\n        },\n        end: [[\"[name]: Until next, adventurer.\", 0]]\n    },\n\n    f1_worried_woman: { // rework before adding\n        name: \"Worried woman\",\n        say:\n            [[\"<i>You approach the worried woman. She has short hair and a friendly face, although right now it is warped\" +\n                \" into a worried expression.\", 0],\n            [\"[name]: Hello.. have you seen my kids?\", 0],\n            [\"[name]: They both seem to like slimes a lot.. but they ran off into the forest and I haven't seem them since!\", 0],\n            [\"[name]: I can't go out to find them on my own.. I wouldn't be able to fend for myself.\", 0]],\n        action: [\"end\"],\n        end: [[\"[name]: I hope they're ok... if they were hurt, I..\", 0]]\n    },\n\n    f1_tutorial_man: {\n        name: \"Pel\",\n        say: [[\"<i>You approach the person being attacked by a slime. Despite his body cowering in fear, his facial\" +\n                \" expression shows no signs of trepidation.\", 0],\n                [\"[name]: aah a slime please help me aah noo please\", 0],\n                [\"<i>He doesn't sound like he's in danger. Regardless, probably a good idea to help him out..\", 0]],\n        options: {\n            \"Help him out\": {\n                say: [\n                    [\"You decide to help him out\", 0],\n                    [\"The slime notices your approach and begins to charge in your direction--\", 0]\n                ],\n                    action: [\"battle\", [[\"slime\",{ }], [\"waypoint\", \"afterBattle\"]]]\n            },\n            \"Ignore him\": {\n                say: [\n                    [\"The man doesn't look like he's in trouble, so helping him will probably be a waste of your time.\", 0],\n                    [\"You decide to ignore him and focus your energy elsewhere..\", 0]\n                ],\n                action: [\"end\"]\n                \n            }\n        },\n        \"afterBattle\": {\n            action3: [\"music\", \"forest\"],\n            say: [[\"<i>The man dusts himself off briefly and smiles at you.</i>\", 0],\n                    [\"[name]: Whew!\", 0],\n                    [\"[name]: That was a close one. Thanks for saving me, stranger!\", 0],\n                    [\"He looks around as though he is assessing his surroundings, however it is clear that he knows about this area.\", 0],\n                    [\"[name]: Anyways, you seem to have found yourself in a pretty unforgiving place...\", 0],\n                    [\"[name]: I'd recommend you look for the small forest camp in the area. You'll find some people there\" +\n                    \" to speak to.\", 0],\n                    [\"[name]: I think it's... somewhere to the north-east?\", 0],\n                    [\"[name]: Anyways, I'll see you around, probably. Bye!\", 0],\n                    [\"[name]: Oh-- one more thing. <i>The man stops walking and turns around.</i>\", 0],\n                    [\"[name]: Don't wander too far out in any direction. The outskirts of the forest are a little dangerous..\", 0],\n                    [\"<i>And with that, the man disappears into the distance.\", 0]\n            ],\n            action: [\"flag\", \"f1_spoken_to_tutorial_man\", \"true\"],\n            action2: [\"end\"]\n        },\n        end: [[\"\", 0]]\n    },\n\n    f1_wanderer_collector: { // rework before adding\n        name: \"Man who enjoys collecting\",\n        say: [[\"<i>You approach a rather friendly-looking person. He is male and of average build. He has simple black\" +\n     \" hair and no facial hair, along with simple villager clothes.\", 0]],\n\n        conditional: {\n            \"flag: f1_helped_wanderer_collector\": {\n                say: [[\"Hato: Yo. I haven't got much for you RN, sorry.\", 0]],\n                action: [\"end\"]\n            },\n\n            \"flag: f1_spoken_to_wanderer_collector\": {\n                say: [[\"[name]: Hi there. Do you have the memorabilia?\", 0]],\n                conditional: {\n                    \"item: 100 wanderer_memorabilia\": {\n                        say: [[\"[name]: Cool! Now, just give it here...\", 0]],\n                        options: {\n                            \"give him the memorabilia\": {\n                                action: [\"items\", \"wanderer_memorabilia\", -100],\n                                say: [[\"[name]: Thank you for your patronage! As promised, I will reward you for your\" +\n                                        \" troubles..\", 0],\n                                        [\"Hato: My name's Hato, by the way. Maybe I'll see you again later. Seeya for now!\", 0]],\n                                action2: [\"items\", \"barren_sword\", 0],\n                                action3: [\"gold\", 0],\n                                action4: [\"exp\", 0],\n                                action6: [\"flag\", \"f1_helped_wanderer_collector\", \"true\"],\n                                action5: [\"end\"]\n                            },\n                            \"don't give him the memorabilia\": {\n                                say: [[\"[name]: Man. Ok. Whatever.\", 0]],\n                                action: [\"end\"]\n                            }\n                        }\n                    },\n                    \"level: 0\": {\n                        say: [[\"[name]: Doesn't look like it. Come back another time.\", 0]],\n                        action: [\"end\"]\n                    }\n                \n                }\n            },\n\n            \"level: 0\": {\n                say: [[\"[name]: Hello! Do you know what wanderers are?\"]],\n                options: {\n                    \"yes\": {\n                        conditional: {\n                            \"flag: f1_met_wanderer_at_statue\": {\n                                say: [[\"[name]: Alright! Cool. I collect wanderer memorabilia. Interpreting the adventures and pasts\" +\n                            \" of various adventurers... it's really interesting to me. Therefore!\", 0],\n                                        [\"[name]: If you can get me some, let's say, <i>100</i>, I'll take it off your hands and\" +\n                                        \" ensure you're rewarded handsomely. What do you say?\", 0],\n                                        [\"[name]: Well, I won't listen anyways. Come back if you have them and want me to take\" +\n                                        \" them off your hands.\", 0],\n                                        [\"<i>The man doesn't look like he'll say any more. Best to come back if you have what he wants\" +\n                                        \".\", 0]],\n                                action: [\"flag\", \"f1_spoken_to_wanderer_collector\", \"true\"],\n                                action2: [\"end\"]\n                            },\n                            \"level: 0\": {\n                                say: [[\"[name]: Really? What are they then?\", 0],\n                                        [\"[player]: Uhh...\", 0],\n                                        [\"<i>The man frowns disappointedly.</i>\", 0],\n                                        [\"[name]: Not cool, dude.. come back when you know a little more.\", 0]],\n                                action: [\"end\"]\n                            }\n                        }\n                    },\n                    \"no\": {\n                        say: [[\"[name]: Ah, ok. Nevermind - I'll see you around.\"]],\n                        action: [\"end\"]\n                    }\n                },\n            }\n        },\n\n        end: [[\"\", 0]]\n    },\n\n    f1_lost_teenager: {\n        name: \"Lost teenager\",\n        conditional: {\n            \"flag: -f1_spoken_to_lost_teenager\": {\n                say: [[\"<i>You approach the lost teenager. They don't look particularly worried as you approach. In fact, \" +\n                \"they don't look like they're feeling anything at all.\", 0],\n                    [\"[name]: Hi. I've been here for a while now, I'm not really sure what's going on.\", 0],\n                    [\"[name]: One thing's for sure, I'm probably not getting out of this forest. I've been wandering for ages.\", 0],\n                    [\"[name]: You can have these potions. I'm not gonna need them where I'm going...\", 0]],\n                action: [\"items\", \"health_potion\", 3],\n                action2: [\"items\", \"greater_health_potion\", 1],\n                action3: [\"flag\", \"f1_spoken_to_lost_teenager\", \"true\"],\n                action4: [\"end\"],\n            },\n            \"level: 0\": {\n                say: [[\"<i>You look for the lost teenager, but they aren't there anymore.\", 0]],\n                action: [\"end\"]\n            }\n        },\n        end: [[\"\", 0]]\n\n    },\n\n    f1_traveller_woman: {\n        name: \"Traveller woman\",\n        say: [['<i>You approach the traveler woman. Once distinctive feature you notice is her kale-green backpack, something' +\n            ' people seem to not have around here.', 0]],\n        conditional: {\n            \"flag: -f1_spoken_to_traveller_woman\": {\n                say: [[\"[name]: Hey.. as you might be able to tell, I'm not from 'round here.\", 0],\n                        [\"[name]: I enjoy seeing what's up about different places. This place is sorta dangerous, there's only one tiny settlement in the forest that I've found!\", 0],\n                        [\"[name]: It's hard to stock up on supplies. I know there are some places outside this main forest, but I can't get to\" +\n                        \" the end of them without turning back... I wonder if there's something there.\", 0],\n                        [\"[name]: Oh well! I guess I'll never know. This looks like a nice place to take a nap..\", 0],\n                        [\"<i>The woman looks sleepy. You don't want to bother her, so you say goodbye.</i>\", 0],\n                        [\"[name]: Oh! I was attacked by some monster as well. I don't need this stuff, so you can have it.\", 0],\n                        [\"<i>The woman hands you some items. You decide to leave afterwards.</i>\", 0]],\n                action: [\"items\", \"weak_vines\", 5],\n                action2: [\"items\", \"hempweed_ligament\", 2],\n                action3: [\"items\", \"sharp_claw\", 1],\n                action4: [\"items\", \"venomous_claw\", 1],\n                action5: [\"flag\", \"f1_spoken_to_traveller_woman\", \"true\"],\n                action6: [\"end\"]\n            },\n            \"level: 0\": {\n                say: [[\"<i>She's currently asleep. Looks like she can fend for herself - probably shouldn't bother her.\", 0]],\n                action: [\"end\"]\n            }\n        },\n        end: [[\"\", 0]]\n    },\n\n    f1_alchemist_woman: { // Skyla\n        name: \"Alchemist woman\",\n        say: [[\"<i>You approach the alchemist.</i>\", 0]],\n        conditional: {\n            \"flag: f1_helped_alchemist_lady\": {\n                say: [[\"Skyla: Hey, [player]! Is there something you need? I owe you after all..\", 0]],\n                options: {\n                    \"help me craft reagents\": {\n                        say: [[\"Skyla: Alright. If you've gathered things from this area, I can help you make some\" +\n                                \" useful items with them - have a look..\", 0]],\n                        action: [\"crafting\", [\"earthen_shield_potion\", \"weak_slingshot\", \"invigorating_flower\",\n                                \"desperate_flower\", \"monster_essence\", \"kindred_essence\"], [\"waypoint\", \"goodbye\"]]\n                    },\n                    '\"can you use magic?\"': {\n                        say: [[\"Skyla: Well, I'm a mage not an alchemist; but it is helpful to know some magic..\", 0],\n                                [\"Skyla: I can use some enchantment and trance spells, which are very helpful. Although\"\n                                + \" a tad immoral!\", 0],\n                                [\"Skyla: That said, I would never use them to do bad things.. sometimes I just really need\" +\n                                \" help, you know?\", 0]],\n                        action: [\"waypoint\", \"flag: f1_helped_alchemist_lady\"]\n                    },\n                    \"ask where to go from here\": {\n                        say: [\n                            [\"[name]: The outskirts of the forest are a little dangerous, but if you can travel there, an old man lives somewhere far out..\", 0],\n                            [\"[name]: Around due west of here? I'm sorry, I don't know the exact coordinates.\", 0],\n                            [\"[name]: Oh! There's a larger settlement past the outskirts to the north-west as well. That might be a good place to go. Good luck!\", 0]\n                        ],\n                        action: [\"waypoint\", \"flag: f1_helped_alchemist_lady\"]\n                    },\n                    \"nope\": {\n                        say: [[\"Skyla: Aw, that's a shame..\", 0]],\n                        action: [\"waypoint\", \"goodbye\"]\n                    }\n                }\n            },\n            \"flag: f1_spoken_to_alchemist_lady\": {\n                say: [[\"[name]: Hi, adventurer! Have you got the items?\", 0]],\n                options: {\n                    \"give her the items\": {\n                        conditional: {\n                            \"item: 10 grey_wolf_pelt\": {\n                                conditional: {\n                                    \"item: 1 special_sap\": {\n                                        say: [[\"[name]: You got the items!\", 0],\n                                                [\"<i>She smiles brightly at you. Something about her joyous face makes you feel very pleased.\", 0],\n                                                [\"[name]: As promised, I'll give you something in return. Come a little closer..\", 0],\n                                                [\"<i>You approach her, slowly..</i>\", 0],\n                                                [\"<i>She hands you a piece of paper. It has some writing about potions on it.</i>\", 0],\n                                                [\"[name]: It's a crafting recipe for good health potions. It should help you on your adventures..\", 2.25],\n                                                [\"[name]: Was it what you expected? Hehe.\", 0],\n                                                [\"[name]: You can have some gold as well. My name's Skyla, by the way. I'll remember the help you\" +\n                                                \" gave me today. Come back if you need anything!\", 0],\n                                                [\"<i>She smiles again and waves goodbye.</i>\", 0]],\n                                        action: [\"recipe\", \"crafted_health_potion\"],\n                                        action2: [\"gold\", 300],\n                                        action3: [\"flag\", \"f1_helped_alchemist_lady\", \"true\"],\n                                        action5: [\"items\", \"grey_wolf_pelt\", -10],\n                                        action6: [\"items\", \"special_sap\", -1],\n                                        action4: [\"end\"]\n                                    },\n                                    \"level: 0\": {\n                                        say: [[\"<i>You don't have all the items you need. You have no choice but to tell her\" +\n                                                \"; a little remorsefully, you notice.\", 0]],\n                                        action: [\"waypoint\", \"tell her you don't have the items\"]\n                                    }\n                                }\n                            },\n                            \"level: 0\": {\n                                say: [[\"<i>You don't have all the items you need. You have no choice but to tell her\" +\n                                    \"; a little remorsefully, you notice.\", 0]],\n                                action: [\"waypoint\", \"tell her you don't have the items\"]\n                            }\n                        }\n                    },\n                    \"tell her you don't have the items\": {\n                        say: [[\"<i>Oh, alright.. just come back when you do, okay? I'll be waiting..\", 0],\n                                [\"<i>She seems a little sad but smiles and waves goodbye.</i>\", 0]],\n                        action: [\"end\"]\n                    },\n                    \"ask where to find the items\": {\n                        say: [\n                            [\"[name]: You should be able to get pelt from wolves in the forest.\", 0],\n                            [\"[name]: You can find special sap from lesser treants in the forest.\", 0],\n                            [\"[name]: Just make sure you're strong enough to catch their attention and defeat them\" +\n                            \" - but I'm sure for you it won't be a problem! There should be one around the coordinates <b>13, 29</b>.\", 0],\n                            [\"[name]: Good luck, [player]! I'll be waiting..\", 0]\n                        ],\n                        action: [\"end\"]\n                    }\n                }\n            },\n            \"level: 0\": {\n                say: [\n                    [\"<i>She has a large dark blue witch hat which should look silly, but she seems to make\" +\n                    \" it work. It compliments her brown hair nicely, which is medium length and somewhat messy.</i>\", 0],\n                    [\"<i>Her clothes seem to be a modified version of plainish blue robes on top, and on the bottom, \" +\n                    \"robe bottoms fashioned into a skirt to aid movement. Her attire in general seems to be a modified wizard's\" +\n                    \" robe to enable efficient movement and accentuate her female features.\", 0],\n                    [\"<i>As you approach, she greets you with an inviting smile.</i>\", 0],\n                    [\"[name]: Oh, an adventurer? Just my luck, I needed some help.\", 0],\n                    [\"[name]: What's your name, adventurer?\", 0],\n                    [\"<i>You have a sudden, uncontrollable urge to answer her question.</i>\", 0],\n                    [\"[player]:  [player].\", 0],\n                    [\"[name]: [player]? That's a nice name...\", 0],\n                    [\"[name]: Hey, [player].. I need some items for some alchemy I'm doing, but I can't really be bothered to get them myself..\", 0],\n                    [\"[name]: Could you help me? All I need is 10 grey wolf pelts and 1 special sap, nothing that hard to get..\", 0],\n                    [\"[name]: Of course, I'll make it worth your while..\", 0]],\n                options: {\n                    \"yes\": {\n                        say: [[\"<i>The woman smiles at you. Having her smile at you makes you feel really good for some reason.\", 0],\n                                [\"[name]: Thank you!\", 0],\n                                [\"[name]: In case you didn't know, you can find special sap from lesser treants in the forest.\", 0],\n                                [\"[name]: Just make sure you're strong enough to catch their attention and defeat them\" +\n                                \" - but I'm sure for you it won't be a problem! There should be one around the coordinates <b>13, 29</b>...\", 0],\n                                [\"[name]: Just bring the things back to me whenever you're ready. I'll be waiting..\", 0]],\n                        action: [\"flag\", \"f1_spoken_to_alchemist_lady\", \"true\"],\n                        action2: [\"end\"]\n                    }, \n                    \"no\": {\n                        say: [[\"<i>The woman frowns slightly, in a disappointed, not angry manner.</i>\", 0],\n                                [\"[name]: Just think about it, please? If you get the items and want to give them to me, \" +\n                                    \"just come over. I'll be waiting.\", 0]],\n                        action: [\"flag\", \"f1_spoken_to_alchemist_lady\", \"true\"],\n                        action2: [\"end\"]\n                    }\n                }\n            }\n        },\n        end: [[\"\", 0]],\n\n        \"tell her you don't have the items\": {\n            say: [[\"[name]: Oh, alright.. just come back when you do, okay? I'll be waiting..\", 0],\n                    [\"<i>She seems a little sad but smiles and waves goodbye.\", 0]],\n            action: [\"end\"]\n        },\n\n        \"goodbye\": {\n            say: [[\"Skyla: Come back later, okay?\", 0]],\n            action: [\"end\"] \n        }\n    },\n\n    f1_forest_craftsman: { // Lucas\n        name: \"Lucas\",\n        say: [[\"<i>You approach the craftsman, who is currently sitting behind a table that has some kind of schematics on\" +\n                \" it.</i>\", 0]],\n        conditional: {\n            \"flag: f1_spoken_to_forest_craftsman\": {\n                action: [\"waypoint\", \"loop\"],\n            },\n            \"level: 0\": {\n                say: [\n                [\"<i>They're wearing a brown apron and have a somewhat bored expression, which does not help the dull\" +\n                \" impression given by his brown bowl-shaped hair and matching dreary brown eyes.\", 0],\n                [\"<i>His clothes, too, are plain, but considering the various stains and small patches rips it has\" +\n                \" sustained, it can be assumed that this is a 'work pair' not to be valued greatly.\", 0],\n                [\"[name]: Man, nothing ever happens here...\", 0],\n                [\"<i>He looks up and notices you.\", 0],\n                [\"[name]: Oh.\", 0]\n                ],\n                action: [\"flag\", \"f1_spoken_to_forest_craftsman\", \"true\"],\n                action2: [\"waypoint\", \"loop\"]\n\n            }\n        },\n        \"loop\": {\n            say: [[\"[name]: What's up?\", 0]],\n            options: {\n                \"help me craft some items\": {\n                    say: [[\"[name]: Sure, if you've got the gold.\", 0]],\n                    action: [\"crafting\", [\"vine_wrapped_wooden_sword\", \"vine_wrapped_wooden_stave\", \"strong_vine_chestplate\",\n                            \"wolfhide_armour\", \"wolfhide_cap\", \"wolfhide_leggings\", \"bladed_armour\", \"feathervine_sword\",\n                            \"wolf_hermit_staff\"], [\"end\"]]\n                },\n                \"bored\": {\n                    say: [[\"[name]: Yeah. This settlement is a useful place to stay if you need to go into the forest often..\", 0],\n                        [\"[name]: But nothing ever happens in this area. People say it can be dangerous but if you have any\" +\n                        \" adventuring experience you'll be completely fine for the most part.\", 0],\n                        [\"[name]: I settled here so that I could craft simple items for new adventurers and make an easy living\" +\n                        \", but it's gotten old way too fast. I might start adventuring again myself..\", 0]],\n                    action: [\"waypoint\", \"loop\"]\n                },\n                \"cya\": {\n                    action: [\"end\"]\n                }\n            }\n        },\n\n        end: [[\"[name]: Cya around.\", 0]]\n    },\n\n    f1_forest_cleric: { // Aina\n        name: \"Aina\",\n        say: [[\"<i>You approach the cleric.\", 0]],\n        conditional: {\n            \"flag: f1_spoken_to_aina\": {\n                action: [\"waypoint\", \"loop\"]\n            },\n            \"level: 0\": {\n                say: [\n                    [\"<i>They seem fairly young, likely in their mid-late teens.</i>\", 0],\n                    [\"<i>Her purple attentive eyes match well with her straight black hair that  seems to have\" +\n                    \" been cut short just at her shoulders. Her outfit is a mostly dark one, with black\" +\n                    \" bermuda shorts and a grey belt. Holstered at her side is a small curved dagger and a few knives.</i>\", 0],\n                    [\"<i>Her shirt is similarly dark; what looks a bit like a military fatigues t-shirt of various grey hues\" +\n                    \" is under a basic black military vest that has several unique potions and other items holstered across it.</i>\", 0],\n                    [\"<i>Were it not for her cleric's tome (easily identifiable due to the large cross on the cover), it would\" +\n                    \" probably be impossible to infer her role.</i>\", 0],\n                    [\"<i>She smiles frendily at you as you approach her.</i>\", 0]\n                ],\n                action: [\"flag\", \"f1_spoken_to_aina\", \"true\"],\n                action2: [\"waypoint\", \"loop\"]\n            }\n        },\n        \"loop\": {\n            say: [[\"[name]: Hi, what's up?\", 0]],\n            options: {\n                \"can you heal me?\": {\n                    say: [[\"[name]: Sure! No problem. Just gimme a second...\", 0],\n                            [\"<i>She must be a fairly competent healer, because she doesn't even remove the tome from\" +\n                            \" where it is holstered at her waist. You feel your wounds disappear..\", 0]],\n                    action: [\"heal\"],\n                    action2: [\"waypoint\", \"loop\"]\n\n                },\n                \"ask about her outfit\": {\n                    say: [[\"[name]: Yeah, not very healer-like is it? Haha..\", 0],\n                            [\"[name]: I wanted to wear something a little more pure-looking, but my brother told me\" +\n                            \" that it would just get dirty in the forest, and he said I should wear something a little\" +\n                            \" more practical..\", 0],\n                            [\"[name]: But to be honest, this is nice too. It's comfortable and looks kinda cool!\", 0],\n                            [\"<i>She removes the dagger from the holseter at her waist and twirls it around dangerously\" +\n                            \" before seamlessly putting it back\", 0]],\n                    action: [\"waypoint\", \"loop\"]\n                },\n                \"ask what she's doing here\": {\n                    say: [[\"[name]: You probably know this already, but I'm a cleric in practice-\", 0],\n                            [\"<i>She slaps the cleric tome at her hip.</i>\", 0],\n                            [\"[name]: My brother was helping me get some practice with support - since he's a mage\" +\n                            \", he would do most of the fighting and I would help out, as well as fight a little bit.\", 0],\n                            [\"[name]: He's out right now, though... in the north of the forest I think. I've gone out\" +\n                            \" on my own a bit but I don't want to go too far... so I'm here waiting for him.\", 0]],\n                    action: [\"waypoint\", \"loop\"]\n                },\n                \"ask about teleprotation stones\": {\n                    say: [[\"[name]: Yeah! There's one that goes straight here.\", 0],\n                            [\"[name]: It'll cost you a little, but it's really helpful to be able to come back whenever.\", 0],\n                            [\"[name]: I've got a few, if you want some:\", 0]],\n                    action: [\"shop\", \"f1_forest_cleric_shop\", [\"end\"]]\n                },\n                \"say goodbye\": {\n                    action: [\"end\"]\n                }\n            }\n        },\n        end: [[\"[name]: Alright, bye!\", 0]]\n    },\n\n    f1_ninja_trainer: { // Sora \n        name: \"Sora\",\n        say: [[\"<i>You approach the ninja. He is sat down leaning against a tree with one knee bent.\", 0]],\n        conditional: {\n            \"flag: f1_spoken_to_sora\": {\n                action: [\"waypoint\", \"loop\"]\n            },\n            \"level: 0\": {\n                say: [\n                    [\"<i>You can't see his facial expression to the cloth covering most of his face, but his eyes\" +\n                    \" look a little tired.</i>\", 0],\n                    [\"<i>His clothes are at once conspicuous and innocuous; plain black trousers and a plain black shirt.\" +\n                    \" The fabric looks silky and the clothes light and loose, given how easily they sway in the wind.\", 0],\n                    [\"<i>He has a physique which looks at once agile and muscular; lean yet strong. He tilts his head in your\" +\n                    \" direction as you near him.\", 0]\n                ],\n                action: [\"flag\", \"f1_spoken_to_sora\", \"true\"],\n                action2: [\"waypoint\", \"loop\"]\n            }\n        },\n        \"loop\": {\n            say: [[\"[name]: ..?\", 0]],\n            options: {\n                \"ask about his outfit\": {\n                    say: [[\"[name]: ..Oh, this..? It's standard ninja, uhm.. attire.\", 0],\n                            [\"[name]: It lets you move around quickly and silently, which is really helpful. You don't really\" +\n                            \" need the headscarf thing unless you're doing something shady and to be honest it's a little\" +\n                            \" inconvenient. But I wear it since I think it looks cool.\", 0],\n                            [\"[name]: I have to take it off during missions, though.. it's just too inconvenient.\", 0]],\n                    action: [\"waypoint\", \"loop\"]\n                },\n                \"ask about being a ninja\": {\n                    say: [[\"[name]: Being a ninja doesn't really mean much. It's just a battle style.\", 0],\n                            [\"[name]: It's nice to have the ability to be stealthy because it means you can avoid fights.\", 0],\n                            [\"[name]: I went out with a mage recently to do some hunting and it was just constant battling..\" +\n                            \" I don't have the stamina for that sort of stuff.\", 0]],\n                    options: {\n                        \"ask for advice\": {\n                            say: [[\"[name]: Well, if you're a ninja, usually you use techniques that sorta combo into\" +\n                                    \" eachother - that way you can get the best out of your actions.\", 0],\n                                    [\"[name]: If you've learned a lot of techniques it can get kind of confusing,\" +\n                                    \" so it might be worth writing down on paper what techniques you have combo into\" +\n                                    \" what other techniques - so you know what to do to achieve certain effects.\", 0],\n                                    [\"[name]: I'd show you the ropes by sparring, but I'm just not in the mood right\" +\n                                    \" now.. maybe another time.\", 0]],\n                            action: [\"waypoint\", \"loop\"]\n                        },\n                        \"...\": {\n                            action: [\"waypoint\", \"loop\"]\n                        }\n                    }\n                },\n                \"say goodbye\": {\n                    action: [\"end\"]\n                }\n            }\n        },\n        end: [[\"<i>Sora waves at you before tilting his head back to its original position.\", 0]]\n    },\n\n    f1_forest_settlement_sign_north: {\n        name: \"Sign\",\n        action: [\"end\"],\n        end: [[\"<i>You read the sign.</i>\", 0],\n                [\"<i>It reads: Small forest settlement to the NORTH.\", 0],\n                [\"<i>Nothing else to see here...</i>\", 0]]\n    },\n\n    f1_forest_settlement_sign_east: {\n        name: \"Sign\",\n        action: [\"end\"],\n        end: [[\"<i>You read the sign.</i>\", 0],\n                [\"<i>It reads: Small forest settlement to the EAST.\", 0],\n                [\"<i>Nothing else to see here...</i>\", 0]]\n    },\n\n    f1_forest_settlement_sign_west: {\n        name: \"Sign\",\n        action: [\"end\"],\n        end: [[\"<i>You read the sign.</i>\", 0],\n                [\"<i>It reads: Small forest settlement to the WEST.\", 0],\n                [\"<i>Nothing else to see here...</i>\", 0]]\n    },\n\n    f1_forest_settlement_sign_south: {\n        name: \"Sign\",\n        action: [\"end\"],\n        end: [[\"<i>You read the sign.</i>\", 0],\n                [\"<i>It reads: Small forest settlement to the SOUTH.\", 0],\n                [\"<i>Nothing else to see here...</i>\", 0]]\n    },\n\n    f1_lesser_treant: {\n        name: \"Lesser treant\",\n        say: [[\"<i>You notice that there one of the trees in the area seems to have some kind of.. facial expression?</i>\", 0],\n                [\"<i>Besides that, it looks just like the other trees.</i>\", 0]],\n        options: {\n            \"attack it\": {\n                conditional: {\n                    \"level: 5\": {\n                        say: [[\"<i>You strike the tree.</i>\", 0],\n                                [\"<i>Very slowly, it begins to move - it's 'face' points in the same direction but you\" +\n                                    \" can tell that it can see all around itself.</i>\", 0],\n                                [\"<i>The ground trembles slightly as what looks like roots emerge from the ground..\", 0],\n                                [\"<i>And fly in your direction!</i>\", 0]],\n                        action: [\"battle\", [[\"lesser_treant\", { changeLevel: 7,\n                         levelCap: false, addLevels: false }], [\"waypoint\", \"afterBattle\"]]]\n                    },\n                    \"level: 0\": {\n                        say: [[\"<i>You strike the tree.</i>\", 0],\n                                [\"<i>...the tree seems completely unfazed. Maybe if you were stronger..</i>\", 0]],\n                        action: [\"end\"]\n                    }\n                }\n            },\n            \"leave it alone\": {\n                say: [[\"<i>You decide to leave the tree alone.</i>\", 0]],\n                action: [\"end\"]\n            }\n        },\n        \"afterBattle\": {\n            say: [[\"<i>The tree, clearly quite damaged, becomes still again. Perhaps it is repairing itself..\", 0],\n                    [\"<i>Regardless, it no longer responds to your attacks. Best to leave it alone.</i>\", 0]],\n            action: [\"end\"]\n        },\n        end: [[\"\", 0]]\n    },\n\n    f1_treant: {\n        name: \"Treant\",\n        say: [[\"<i>You notice that there one of the trees in the area seems to have some kind of.. facial expression?</i>\", 0],\n                [\"<i>Besides that, it looks similar to the other trees - you notice that it has a greater girth and a greater\" +\n                \" abundance of leaves.</i>\", 0]],\n        options: {\n            \"attack it\": {\n                conditional: {\n                    \"level: 10\": {\n                        say: [[\"<i>You strike the tree.</i>\", 0],\n                                [\"<i>Very slowly, it begins to move - it's 'face' points in the same direction but you\" +\n                                    \" can tell that it can see all around itself.</i>\", 0],\n                                [\"<i>The ground trembles as what looks like roots emerge from the ground..\", 0],\n                                [\"<i>And fly in your direction!</i>\", 0]],\n                        action: [\"battle\", [[\"treant\", { changeLevel: 12,\n                         levelCap: false, addLevels: false }], [\"waypoint\", \"afterBattle\"]]]\n                    },\n                    \"level: 0\": {\n                        say: [[\"<i>You strike the tree.</i>\", 0],\n                            [\"<i>...the tree seems completely unfazed. Maybe if you were stronger..</i>\", 0]],\n                        action: [\"end\"]\n                    }\n                }\n            },\n            \"leave it alone\": {\n                say: [[\"<i>You decide to leave the tree alone.</i>\", 0]],\n                action: [\"end\"]\n            }\n        },\n        \"afterBattle\": {\n            say: [[\"<i>The tree, clearly quite damaged, becomes still again. Perhaps it is repairing itself..\", 0],\n                    [\"<i>Regardless, it no longer responds to your attacks. Best to leave it alone.</i>\", 0]],\n            action: [\"end\"]\n        },\n        end: [[\"\", 0]]\n    },\n\n    f1_lesser_ent: {\n        name: \"Lesser ent\",\n        say: [[\"<i>You notice that there one of the trees in the area seems to have some kind of.. facial expression?</i>\", 0],\n                [\"<i>Besides that, it looks similar to the other trees - you notice that it has a greater girth and a greater\" +\n                \" abundance of leaves. Furthermore, it radiates some kind of aura that demands both awe and veneration..</i>\", 0],\n                [\"<i>You notice that creatures in the forest tend to steer clear of this tree somewhat. It's branches sway\" +\n                \" as though the have lives of their own.\", 0]],\n        options: {\n            \"attack it\": {\n                conditional: {\n                    \"level: 17\": {\n                        say: [[\"<i>You strike the tree.</i>\", 0],\n                                [\"<i>Very slowly, it begins to move - it's 'face' points in the same direction but you\" +\n                                    \" can tell that it can see all around itself.</i>\", 0],\n                                [\"<i>The ground quakes as what looks like roots emerge from the ground..\", 0],\n                                [\"<i>And fly in your direction!</i>\", 0]],\n                        action: [\"battle\", [[\"lesser_ent\", { changeLevel: 17,\n                         levelCap: false, addLevels: false }], [\"waypoint\", \"afterBattle\"]]]\n                    },\n                    \"level: 0\": {\n                        say: [[\"<i>You strike the tree.</i>\", 0],\n                            [\"<i>...the tree seems completely unfazed. Maybe if you were stronger..</i>\", 0]],\n                        action: [\"end\"]\n                    }\n                }\n            },\n            \"leave it alone\": {\n                say: [[\"<i>You decide to leave the tree alone.</i>\", 0]],\n                action: [\"end\"]\n            }\n        },\n        \"afterBattle\": {\n            say: [[\"<i>The tree, clearly quite damaged, becomes still again. Perhaps it is repairing itself..\", 0],\n                    [\"<i>Regardless, it no longer responds to your attacks. Best to leave it alone.</i>\", 0]],\n            action: [\"end\"]\n        },\n        end: [[\"\", 0]]\n    },\n\n    f1_travelling_hermit: {\n        name: \"Old traveller\",\n        say: [[\"<i>You approach the old traveller.</i>\", 0],\n                [\"<i>One would assume he is in his seventies or eighties, given his fairly shrivelled skin and hunched\" +\n                \" back. He uses a walking stick that is a little lighter than the trees surrounding the steady himself\" +\n                \" as he walks.\", 0],\n                [\"<i>His clothes are very plain; a grey top that seems a little large for his shrunken self, and plan\" +\n                \" brown trousers that fit the same criteria. He doesn't react as you near him, but he emanates a friendly\" +\n                \" aura.\", 0],\n                [\"[name]: Hello there.\", 0]],\n        options: {\n            \"What are you doing?\": {\n                say: [[\"[name]: I'm looking for a statue. I think it is somewhere around the outskirts of this forest...\", 0],\n                        [\"[name]: It is a statue of Lucia, the wandering Goddess. I am not a wanderer myself, but the statues\" +\n                        \" are a centerpiece of their lifestyle. Somewhat of a spectacle to behold, in my opinion.\", 0]],\n                options: {\n                    \"wanderer?\": {\n                        say: [[\"[name]: Yes, wanderer. Maybe if you can meet a wanderer at the statue they will tell you\" +\n                                \" a bit more. I'm no expert, unfortunately.\", 0],\n                            [\"[name]: Anyways, I should be on my way. I'll never find the statue at this rate!\", 0],\n                            [\"<i>The old man begins to walk away. You notice that he moves very quickly for someone who\" +\n                            \" needs a walking stick. Very quickly, his image fades in between the trees.\", 0]],\n                        action: [\"flag\", \"f1_spoken_to_hermit\", \"true\"],\n                        action2: [\"end\"]\n                    },\n                    \"oh, ok. Bye\": {\n                        say: [[\"[name]: I think I'll rest around here for a little while, so perhaps I will see you around.\" +\n                                \" Until then, traveller!\", 0]],\n                        action: [\"end\"]\n                    }\n                }\n            },\n            \"bye\": {\n                say: [[\"<i>The old man looks a little confused by your sudden approach and retreat.</i>\", 0],\n                        [\"[name]: Ah, okay then.. I'm going to rest here for a little bit, so perhaps I will see you around.\" +\n                        \" Until then, traveller!\", 0]],\n                action: [\"end\"]\n            }\n        },\n        end: [[\"\", 0]]\n    },\n\n    f1_person_looking_for_settlement: { // rework?\n        name: \"Lost person\", // call \"random person\" in extraOptions\n        say: [[\"<i>You approach the random person. They seem a little lost.</i>\", 1.25],\n                [\"[name]: Hello!! I know there is a settlement around here.. do you know where it is??\", 0],\n                [\"[name]: Please!!! I'm running out of resources and I'm too scared to go without direction! Can you tell me??\", 0]],\n        options: {\n            \"north-east\": {\n                say: [[\"North east?? Got it!\", 0],\n                        [\"<i>The person looks as thought they are getting ready to run. They tighten the straps on their\" +\n                        \" wolfhide backpack and smile at you.\", 0]],\n                        action: [\"flag\", \"f1_spoken_to_person_looking_for_settlement\", \"true\"],\n                        action2: [\"end\"]\n            },\n            \"north-west\": {\n                say: [[\"North west?? Got it!\", 0],\n                        [\"<i>The person looks as thought they are getting ready to run. They tighten the straps on their\" +\n                        \" wolfhide backpack and smile at you.\", 0]],\n                        action: [\"flag\", \"f1_spoken_to_person_looking_for_settlement\", \"true\"],\n                        action3: [\"flag\", \"f1_helped_person_looking_for_settlement\", \"true\"],\n                        action2: [\"end\"]\n            },\n            \"straight south\": {\n                say: [[\"Straight south?? Got it!\", 0],\n                        [\"<i>The person looks as thought they are getting ready to run. They tighten the straps on their\" +\n                        \" wolfhide backpack and smile at you.\", 0]],\n                        action: [\"flag\", \"f1_spoken_to_person_looking_for_settlement\", \"true\"],\n                        action2: [\"end\"]\n            },\n            \"south-east\": {\n                say: [[\"South east?? Got it!\", 0],\n                        [\"<i>The person looks as thought they are getting ready to run. They tighten the straps on their\" +\n                        \" wolfhide backpack and smile at you.\", 0]],\n                        action: [\"flag\", \"f1_spoken_to_person_looking_for_settlement\", \"true\"],\n                        action2: [\"end\"]\n            }\n        },\n        end: [[\"[name]: Thank you!! Bye!\", 0],\n                [\"<i>The person runs off into the distance. Hopefully you told them the right direction..\", 0]]\n    },\n\n    f1_owned_crafted_sword: {\n        name: \"Wolves\",\n        say: [[\"<i>You notice something interesting on the floor.\", 0],\n                [\"<i>It's a sword; it looks quite elegantly-made and surprisingly pristine for something left on the floor.</i>\", 0],\n                [\"<i>Will you take it?</i>\", 0]],\n        options: {\n            \"yes\": {\n                say: [[\"<i>You reach for the sword and pick it up.\", 0],\n                        [\"<i>As you move to walk away, you can hear growling from all directions..\", 0],\n                        [\"<i>Suddenly, a group of grey wolves emerge! Their hides are bristling with fury, their eyes\" +\n                        \" fixated on the sword. They emerge from thickets in all directions, blocking off any escape.\", 0],\n                        [\"<i>Before you can absorb the situation, they start to attack--\", 0]],\n                action: [\"battle\", [[\"grey_wolf\", {\n                    changeLevel: 10,\n                    levelCap: false,\n                    addLevels: false\n                }], [\"waypoint\", \"postBattleOne\"]]]\n            },\n            \"no\": {\n                say: [[\"You decide to leave the sword alone.\", 0]],\n                action: [\"end\"]\n            }\n        },\n        \"postBattleOne\": {\n            say: [[\"Another wolf attacks!\", 0]],\n            action: [\"battle\", [[\"grey_wolf\", {\n                changeLevel: 12,\n                levelCap: false,\n                addLevels: false\n            }], [\"waypoint\", \"postBattleTwo\"]]],\n        },\n        \"postBattleTwo\": {\n            say: [[\"Most of the wolves back down after seeing you defeat two in a row.\", 0],\n                    [\"However, a few remain. A wolf whose claws are dripping with a dangerous-looking substance approaches..\", 0]],\n            action: [\"battle\", [[\"young_venomous_wolf\", {\n                changeLevel: 13,\n                levelCap: false,\n                addLevels: false\n            }], [\"waypoint\", \"postBattleThree\"]]]\n        },\n        \"postBattleThree\": {\n            say: [[\"By this point, all of the wolves have left. You take the sword and leave, feeling a little startled.\", 0]],\n            action: [\"flag\", \"f1_taken_crafted_sword\", \"true\"],\n            action2: [\"gold\", 0],\n            action3: [\"exp\", 0],\n            action4: [\"items\", \"crafted_blade\", 1],\n            action5: [\"end\"]\n        },\n        end: [[\"\", 0]]\n    },\n\n    f1_explorer_woman: {\n        name: \"Explorer woman\",\n        say: [[\"<i>You approach the woman. She has a friendly smile, along with black hair and blue eyes.\", 0],\n                [\"<i>Her clothes are clearly geared for exploration - a jacket, trousers and (somewhat long) boots\" +\n                \" various hues of brown.\", 0],\n                [\"<i>Two pouches holstered at her waist allow for easy storage without the compromise of maneouvrability\" +\n                \" that comes with a large backpack.\", 0],\n            [\"[name]: Hey! I'm currently exploring this area, looking for rare things.\", 0],\n            [\"[name]: Sometimes brazen creatures attack me as I travel, but I think there are some creatures that won't\" +\n            \" ambush you and that you'll only find if you go exploring looking for them. Usually, those are the rare ones!\", 0],\n            [\"[name]: Did you know that? It shocked me when I found out!\", 0]],\n        options: {\n            \"yes\": {\n                say: [[\"[name]: Oh.. you did? I feel a little silly now, haha!\", 0]],\n                action: [\"end\"]\n            },\n            \"no\": {\n                say: [[\"[name]: There you go then! Hopefully my info was helpful!!\", 0]],\n                action: [\"end\"]\n            }\n        },\n        end: [[\"[name]: I'm going to stay here for a while. I've been running around exploring for so long, I need\" +\n        \" a break! Seeya around!\", 0]]\n    },\n\n    f1_person_on_toilet: {\n        name: \"Person 'using the toilet'\",\n        say: [[\"<i>You can see someone in the distance, covered by an outburst of leaves.</i>\", 0],\n                [\"<i>It's difficult to see what they're doing. You move some leaves to get a closer look..</i>\", 0],\n                [\"[name]: HEY!! What the hell are you doing?! Go away!!\", 0],\n                [\"<i>The person throws some leaves in your direction, obviously to no avail. You decide it's best to leave\" +\n                \" them alone.</i>\", 0]],\n        action: [\"end\"],\n        end: [[\"\", 0]]\n    },\n\n    f1_mage_trainer: { // Daryl?\n        name: \"Teenage mage\",\n        say: [[\"<i>You approach the mage. Physically, he isn't very powerful-looking, but perhaps that can be expected from his\" +\n                \" profession.</i>\", 0]],\n        conditional: {\n            \"flag: f1_spoken_to_daryl\": {\n                say: [[\"[name]: Uh, hi. Do you need something?\", 0]],\n                action: [\"waypoint\", \"opts\"]\n            },\n            \"level: 0\": {\n                say: [\n                    [\"<i>His clothes seem to be classic mage attire somewhat crudely cut and shaped to be suited to quick\" +\n                    \" movement and close combat. His robes, a dark blue has been fashioned into an open jacket that shows\" +\n                    \" the light grey shirt underneath, over which a strap carrying various potions is observed.</i>\", 0],\n                    [\"<i>His pants are simple adventurer's wear; slightly baggy brown trousers with fairly long black boots.</i>\", 0],\n                    [\"<i>The mage's hood, the same design as his jacket, is the giveaway of his discipline. He looks quite tired\" +\n                    \", and seems to be resting while leaning against a tree.\", 0],\n                    [\"[name]: Uh, hi. Do you need something?\", 0]\n                ],\n                action: [\"flag\", \"f1_spoken_to_daryl\", \"true\"],\n                action2: [\"waypoint\", \"opts\"]\n            }\n        },\n        \"opts\": {\n            options: {\n                \"ask for advice about being a mage\": {\n                    say: [[\"[name]: Uhm, well..\", 0],\n                            [\"<i>The mage thinks for a little.\", 0],\n                            [\"[name]: Learning to cast spells is hard part. Everything else isn't too hard.\", 0],\n                            [\"[name]: I guess sometimes you can combine spells for new effects, but that's more of a creativity\" +\n                            \" thing..\", 0],\n                            [\"[name]: Tell you what - I have this sheet of some magic combinations I found out. If you give me\" +\n                            \" 500 gold, I'll give it to you; I've got them memorised anyways, and I need some gold to buy more\" +\n                            \" potions.\", 0]],\n                    options: {\n                        \"'yes'\": {\n                            conditional: {\n                                \"gold: 500\": {\n                                    say: [[\"Alright! Here you go:\", 0]],\n                                    action: [\"gold\", -500],\n                                    action2: [\"items\", \"mage_cheat_sheet\", 0],\n                                    action3: [\"waypoint\", \"afterSale\"],\n                                    action4: [\"flag\", \"f1_bought_from_teenage_mage\", \"true\"],\n                                    \"afterSale\": {\n                                        say: [[\"[name]: I guess now I can head back to the settlement. I won't get Aina mad after\" +\n                                                \" I tell her I lost all our gold... <i>He mumbles to himself.</i>\", 0],\n                                                [\"<i>The mage walks off.</i>\", 0]],\n                                        action: [\"end\"]\n                                    }\n                                },\n                                \"level: 0\": {\n                                    say: [[\"<i>You try to get the gold out but you don't have enough. You tell him that you can't\" +\n                                            \" pay.\", 0],\n                                            [\"[name]: Wh-\", 0],\n                                            [\"[name]: *sigh*\", 0],\n                                            [\"[name]: It's fine, just come back when you can pay.\", 0],\n                                            [\"<i>The mage remains where he is. Maybe come back later.</i>\"]],\n                                    action: [\"end\"]\n                                }\n                            }\n                        },\n                        \"'no'\": {\n                            say: [[\"[name]: Alright, that's fine. Come see me if you change your mind.\", 0]],\n                            action: [\"end\"]\n                        }\n                    }\n                },  \n                \"nope\": {\n                    say: [[\"[name]: Um.. Ok.\", 0],\n                            [\"<i>The mage stops looking at you. Maybe come and see him again another time.</i>\", 0]],\n                    action: [\"end\"]\n    \n                }\n            },\n        },\n        end: [[\"\", 0]]\n    },\n\n    f1_ora: {\n        name: \"Ora\",\n\n        say: [[\"You approach the man.\", 0]],\n\n        conditional: {\n            \"flag: f1_spoken_to_ora\": {\n                action: [\"waypoint\", \"loop\"]\n            },\n            \"level: 0\": {\n                say: [\n                    [\"He's a man with fairly dark skin; you presume in his forties.\", 0],\n                    [\"Despite his sleek figure, there is clearly considerably strength in his bones. He wears a dark green jacket made of a simple cloth, beneath which his skin, wrappd around a slim yet muscular frame can be observed.\", 0],\n                    [\"His trousers are shorts, more likely trousers cut short given the frayed edges.\", 0]\n                ],\n                action2: [\"flag\", \"f1_spoken_to_ora\", \"true\"],\n                action: [\"waypoint\", \"loop\"]\n            }\n        },\n\n        \"loop\": {\n            say: [\n                [\"He acknowledges your presence, thereby encouraging you to speak.\", 0]\n            ],\n                options: {\n                    '\"Help me craft some items\"': {\n                        say: [\n                            [\"Ora nods.\", 0]\n                        ],\n                        action: [\"crafting\", [\"geomancers_hood\", \"geomancers_lower_robes\", \"virulent_brawler_leg_guards\", \"virulent_brawler_helm\", \"earth_mage_staff\", \"virulent_bracers\", \"small_scaled_shield\", \"toxic_grenade\"], [\"end\"]]\n                    },\n                    '\"Help me craft some powerful items\"': {\n                        conditional: {\n                            \"flag: f1_defeated_ora\": {\n                                say: [\n                                    [\"Ora nods.\", 0],\n                                ],\n                                action: [\"crafting\", [\"earth_magus_staff\", \"virulent_brawler_plates\", \"geomancers_cloak\", \"living_virulent_bracers\", \"ailwarder_charm\", \"tectonic_charm\", \"virulent_charm\"], [\"end\"]]\n                            },\n                            \"level: 0\": {\n                                say: [\n                                    [\"Ora shakes his head.\", 0],\n                                    [\"[name]: You are not prepared.\", 0],\n                                    [\"[name]: I will spar with you. If you can defeat me, I will deem you prepared.\", 0]\n                                ],\n                                options: {\n                                    \"Spar with Ora\": {\n                                        say: [\n                                            [\"Ora nods satisfactorily.\", 0],\n                                            [\"[name]: Prepare yourself, adventurer--\", 0],\n                                            [\"Ora approaches with surprising speed--\", 0]\n                                        ],\n                                        action: [\"battle\", [[\"ora\", { changeLevel: 12,\n                                            levelCap: false, addLevels: false, battleMusic: \"mechanical_rhythm$\" }], [\"waypoint\", \"afterBattle\"]]]\n                                    },  \n                                    \"Don't spar with Ora\": {\n                                        say: [\n                                            [\"[name]: I understand. Come back in the future.\", 0]\n                                        ],\n                                        action: [\"end\"]\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"Ask him about his life\": {\n                        say: [\n                            [\"Ora thinks for a few seconds before speaking.\", 0],\n                            [\"[name]: I was born elsewhere. I was a reticent child, I am told.\", 0],\n                            [\"[name]: Many years ago, there was a disaster in this forest - Bacharat, the King of the Forest, cast a spell that allowed nobody to leave.\", 0],\n                            [\"[name]: The forest needed sustenance and for reasons that I do not know, he was in a bad temper. He intended to wear out those in the forest until they eventually succumbed to it.\"],\n                            [\"[name]: Many attempted to escape and perished, some others attempted to wait out the spell. A small camp was made in the forest for this purpose, and probably other settlements that did not survive to this day.\", 0],\n                            [\"[name]: I was raised to be a druid but was a warrior at heart. Putting faith in my attunement with nature, I seeked an audience with Bacharat, but was killed in the process.\", 0],\n                            [\"[name]: As I was dying, he appeared and appealed to me; if I agreed to watch over the forest, he would spare my life.\", 0],\n                            [\"[name]: My soul is now bound to this place. I cannot leave.\", 0],\n                            [\"Ora's face adopts an unreadable expression.\", 0],\n                            [\"[name]: I had many things I wanted to do with my life.. but I suppose it is not so bad here. I observe the balance of life in the forest and intervene when there is a significant disturbance.\", 0],\n                            [\"[name]: Because of my help, Bacharat has not appeared in a long time. Even I have not seen him in over a century.\", 0]\n                        ],\n                        action: [\"waypoint\", \"loop\"]\n                    },\n                    \"Ask him about teleportation stones\": {\n                        say: [\n                            [\"[name]: I have many stones that lead to this place. If you have money, I can sell some to you.\", 0]\n                        ],\n                        action: [\"shop\", \"f1_ora_shop\", [\"end\"]]\n                    },\n                    \"Say goodbye\": {\n                        say: [\n                            [\"Ora looks at you as though to say goodbye, and then returns to whatever he was doing.\", 0]\n                        ],\n                        action: [\"end\"]\n                    }\n                }\n        },\n\n        \"afterBattle\": {\n            action4: [\"music\", \"forest\"],\n            action: [\"heal\"],\n            say: [\n                [\"Ora looks at you. You can tell he is happy, but he doesn't smile.\", 0],\n                [\"[name]: ..You were stronger than I exptected.\", 0],\n                [\"[name]: Most certainly prepared.. I will help you create stronger items now.\", 0],\n                [\"It seems Ora is willing to help you craft stronger items if you speak to him now.\", 0]\n            ],\n            action3: [\"flag\", \"f1_defeated_ora\", \"true\"],\n            action2: [\"end\"]\n        },\n\n        end: [[\"\", 0]]\n    },\n\n    f1_forest_merchant: {\n        name: \"Forest merchant\",\n        say: [\n            [\"You approach the forest merchant.\", 0],\n            [\"He is dressed in basic adventurer's gear, with a large grey backpack. You presume that is where he keeps his wares.\", 0],\n            [\"[name]: Hello! I sell items found in the outskirts of the forest. Would you like to buy any? All very affordable prices!\", 0]\n        ],\n        options: {\n            '\"Yes\"': {\n                say: [\n                    [\"[name]: Great! Here, have a look!\", 0]\n                ],\n                action: [\"shop\", \"f1_forest_merchant\", [\"end\"]]\n            },\n            '\"No\"': {\n                say: [\n                    [\"The merchant looks a little downcast.\", 0],\n                    [\"[name]: Oh...\", 0],\n                    [\"[name]: okay! Well, I'll be here if you need me! Come back anytime!\", 0]\n                ],\n                action: [\"end\"]\n            }\n        },\n    \n        end: [[\"\", 0]]\n\n    },\n\n    f1_gold_on_floor: {\n        say: [\n            [\"There's some gold on floor. You decide to pick it up and take it with you.\", 0]\n        ],\n        action: [\"gold\", 200],\n        action3: [\"flag\", \"f1_picked_up_gold_1\", \"true\"],\n        action2: [\"end\"],\n        end: [[\"\", 0]]\n    },\n\n    f1_gold_on_floor_2: {\n        say: [\n            [\"There's some gold on floor. You decide to pick it up and take it with you.\", 0]\n        ],\n        action: [\"gold\", 300],\n        action3: [\"flag\", \"f1_picked_up_gold_2\", \"true\"],\n        action2: [\"end\"],\n        end: [[\"\", 0]]\n    },\n\n    f1_gold_on_floor_3: {\n        say: [\n            [\"There's some gold on floor. You decide to pick it up and take it with you.\", 0]\n        ],\n        action: [\"gold\", 400],\n        action3: [\"flag\", \"f1_picked_up_gold_3\", \"true\"],\n        action2: [\"end\"],\n        end: [[\"\", 0]]\n    },\n\n    f1_guarded_earthen_manasoul: {\n        say: [\n            [\"Somewhere in the distance, you can feel a strong energy pulsating.\", 0],\n            [\"It puts you at ease and draws you to it. However, you can tell that considerable danger lurks ahead...\", 0]\n        ],\n        options: {\n            \"Proceed\": {\n                say: [\n                    [\"You move in the direction of the attraction.\", 0],\n                    [\"...it is quite for a while, but you soon hear a rustling in the leaves nearby.\", 0],\n                    [\"The rustling multiplies, and, as you advance (wary of your surroundings), it follow you; the source(s) never revealing themselves.\", 0],\n                    [\"You can feel the source very close ahead, but suddenly, several creatures burst forth and block your path!--\", 0],\n                ],\n                action: [\"battle\", [[\"lesser_forest_scourge\", { changeLevel: 16,\n                    levelCap: false, addLevels: false, battleMusic: \"mechanical_rhythm$\" }], [\"waypoint\", \"afterBattle\"]]]\n            },\n            \"Don't proceed\": {\n                say: [\n                    [\"You decide to combat your insincts and stand your ground.\", 0]\n                ],\n                action: [\"end\"]\n            }\n        },\n        \"afterBattle\": {\n            say: [[\"Battle 2/3\", 0]],\n            action: [\"battle\", [[\"mobile_lesser_ent\", { changeLevel: 17,\n                levelCap: false, addLevels: false, battleMusic: \"mechanical_rhythm$\", overlayMusic: true }], [\"waypoint\", \"afterBattle2\"]]]\n        },\n        \"afterBattle2\": {\n            say: [[\"Battle 3/3\", 0]],\n            action: [\"battle\", [[\"young_venomous_wolf\", { changeLevel: 18,\n                levelCap: false, addLevels: false, battleMusic: \"mechanical_rhythm$\", overlayMusic: true }], [\"waypoint\", \"afterBattle3\"]]]\n        },\n        \"afterBattle3\": {\n            action3: [\"music\", \"forest\"],\n            say: [\n                [\"There are no more creatures blocking your path.\", 0],\n                [\"You reach the source of the aura; it's a palm-sized green orb. It looks as though it should be an amorphous gas, but it retains its shape and some tangibility.\", 0],\n                [\"You pick it up and take with you, before turning back.\", 0]\n            ],\n            action: [\"items\", \"earthen_manasoul\", 1],\n            action3: [\"flag\", \"f1_found_guarded_earthen_manasoul\", \"true\"],\n            action2: [\"end\"]\n        },\n\n        end: [[\"\", 0]]\n    },\n\n    f1_person_looking_for_cat: {\n        name: \"Bella\",\n        say: [\n            [\"You approach the girl. She is probably in her late teens, and she is walking about, looking around her in a panicked state.\", 0]\n        ],\n        conditional: {\n            \"flag: -f1_spoken_to_person_looking_for_cat\": {\n                say: [\n                    [\"When she notices you, she sighs a small sigh of relief.\", 0],\n                    [\"[name]: Hello? You're an adventurer right?\", 0],\n                    [\"[name]: I lost my cat! Could you help me find her? Her name's Rayla, and I saw her go to the east..\", 0],\n                    [\"[name]: I can't really go further out than this.. it's too dangerous for me.\", 0],\n                    [\"[name]: Please! I'll give you gold, items, anything\", 0]\n                ],\n                options: {\n                    \"Agree to help her\": {\n                        say: [\n                            [\"The girl beams.\", 0],\n                            [\"[name]: Thank you so much!!\", 0],\n                            [\"[name]: If you give her this treat, she should follow you. <i>*She hands you some cat treats</i>*\", 0],\n                            [\"[name]: Um.. it's okay if you can't find her, I don't want to take too much of your time.\", 0],\n                            [\"[name]: But if you do come across her, I'd be really grateful!!\", 0]\n                        ],\n                        action3: [\"items\", \"cat_food\", 1],\n                        action: [\"flag\", \"f1_spoken_to_person_looking_for_cat\", \"true\"],\n                        action2: [\"end\"]\n                    },\n                    \"Refuse\": {\n                        say: [\n                            [\"[name]: Oh-- well--\", 0],\n                            [\"[name]: I understand.. you're probably very busy.\", 0],\n                            [\"[name]: I'm going to keep looking. Please come back if you change your mind!\", 0],\n                            [\"She resumes walking about, occasionally calling out 'Rayla' and making clicking noises.\", 0]\n                        ],\n                        action: [\"end\"]\n                    }\n                },\n            },\n            \"flag: f1_spoken_to_person_looking_for_cat\": {\n                conditional: {\n                    \"item: 1 bellas_cat\": {\n                        say: [\n                            [\"The cat runs towards Bella, who picks it up.\", 0],\n                            [\"[name]: SKYLA!! Why did you run away?! You..\", 0],\n                            [\"She snuggles the cat and keeps speaking to it for a while. Then, she looks at you and checks herself.\", 0],\n                            [\"[name]: I can't thank you enough! I know it's not much, but please take this..\", 0]\n                        ],\n                        action6: [\"items\", \"bellas_cat\", -1],\n                        action: [\"gold\", 300],\n                        action2: [\"exp\", 500],\n                        action3: [\"items\", \"cats_foot\", 1],\n                        action4: [\"flag\", \"f1_helped_person_looking_for_cat\", \"true\"],\n                        action5: [\"end\"]\n                    },\n                    \"level: 0\": {\n                        say: [\n                            [\"She's preoccupied looking for her cat, so she doesn't notice you. You should probably return when you've found it.\", 0],\n                        ],\n                        action: [\"end\"]\n                    }\n                },\n            }\n        },\n        end: [[\"\", 0]]\n    },\n\n    f1_bellas_cat: {\n        name: \"Rayla\",\n        conditional: {\n            \"item: 1 cat_food\": {\n                say: [\n                    [\"[name]: Meow!\", 0],\n                    [\"You shake the cat food in your palm in front of the cat and she walks towards you.\", 0],\n                    [\"You let her eat some, and she begins following you..\", 0],\n                    [\"..Best hold her so she doesn't walk off again.\", 0]\n                ],\n                action: [\"items\", \"bellas_cat\", 1],\n                action4: [\"items\", \"cat_food\", -1 ],\n                action3: [\"flag\", \"f1_found_bellas_cat\", \"true\"],\n                action2: [\"end\"]\n            },\n            \"level: 0\": {\n                say: [\n                    [\"[name]: Meow!\", 0],\n                    [\"The cat ignores you. You don't have any means of making it pay attention.\", 0],\n                ],\n                action: [\"end\"]\n            }\n        },\n        end: [[\"\", 0]]\n    },\n\n    f1_chuuni: {\n        name: \"Chuuni\",\n        say: [\n            [\"You approach the girl. They are a little short, and not wearing clothes suited to adventuring in a forest; instead adorning what looks like an elaborate school outfit in black and red. They have an eyepatch, which you assume they don't really need.\", 0],\n            [\"When they notice you, they strike a strange pose.\", 0],\n            [\"[name]: The convergence of fate beckons an unspeakable chaos..\", 0],\n            [\"[name]: Witness the realms of 8 conspire in an atramentous zenith..\", 0],\n            [\"[name]: Witness the resurᚷᛖᚾᚲᛖ ᛟᚠ ᚺᛟᛗᛟ-ᚱᛖᛏᚱᛁᛒᚢᛏᛁᛟᚾ..\", 0],\n            [\"???\", 0],\n            [\"You can't understand what they are saying. You decide to leave them alone.\"]\n        ],\n        action: [\"end\"],\n        end: [[\"\", 0]]\n    },\n\n    f1_thanks_for_playing: {\n        name: \"\",\n        say: [\n            [\"Congratulations on reaching the settlement!\", 0],\n            [\"This message is to inform you that this is pretty much the end of TRPG. I don't have any plans to continue this game.\", 0],\n            [\"This place would have contained NPCs regarding the next area, but since that won't be added, this place will remain unoccupied.\", 0],\n            [\"That said, if you enjoyed the game or have any feedback, please let me know via discord! You can join the game's discord using the invite link found by inputting the super command 'sc-discord'.\", 0],\n            [\"If you'd like something more to do, there are some powerful enemies in the form of the 'Treant', 'Ora', and 'Lesser Ent'. See if you can beat them!\", 0],\n            [\"I may consider continuing the game if enough people like it, but with quarantine ending, I will have other commitments coming up.\", 0],\n            [\"Thanks for playing TRPG!\", 0],\n            [\"Oh, and here's a small gift for making it this far.\", 0]\n        ],\n        action2: [\"items\", \"villageseeker_charm\", 1],\n        action: [\"flag\", \"thanks_for_playing\", \"true\"],\n        action3: [\"end\"],\n        end: [[\"\", 0]]\n    },\n    //,\n\n    gold_test: {\n        say: [[\"hey\", 1]],\n        action: [\"gold\", 1000],\n        end: [[\"bye\", 1]]\n    },\n\n    // INTERESTING ITEMS ON FLOOR\n    /* #region */\n    f1_hydra_staff_on_floor: {\n        interesting_item: [\"f1_picked_up_hydra_staff\", [\"hydra_staff\", 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_crown_of_darkness_on_floor: {\n        interesting_item: [\"f1_picked_up_crown_of_darkness\", [\"crown_of_darkness\", 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_simple_sword_on_floor: {\n        interesting_item: [\"f1_picked_up_simple_sword\", [\"simple_sword\", 1]],\n        end: [[\"\", 0]]\n    },\n    \n    f1_damaged_helm_on_floor: {\n        interesting_item: [\"f1_picked_up_damaged_helm\", [\"damaged_helm\", 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_metal_stave_on_floor: {\n        interesting_item: [\"f1_picked_up_metal_stave\", ['metal_stave' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_silver_axe_on_floor: {\n        interesting_item: [\"f1_picked_up_silver_axe\", ['silver_axe' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_silver_dagger_on_floor: {\n        interesting_item: [\"f1_picked_up_silver_dagger\", ['silver_dagger' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_pickaxe_on_floor: {\n        interesting_item: [\"f1_picked_up_pickaxe\", ['pickaxe' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_feathervine_sword_on_floor: {\n        interesting_item: [\"f1_picked_up_feathervine_sword\", ['feathervine_sword' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_silver_helm_on_floor: {\n        interesting_item: [\"f1_picked_up_silver_helm\", ['silver_helm' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_wolfhide_cap_on_floor: {\n        interesting_item: [\"f1_picked_up_wolfhide_cap\", ['wolfhide_cap' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_vine_helmet_on_floor: {\n        interesting_item: [\"f1_picked_up_vine_helmet\", ['vine_helmet' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_ninja_headcloak_on_floor: {\n        interesting_item: [\"f1_picked_up_ninja_headcloak\", ['ninja_headcloak' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_makeshift_steel_armour_on_floor: {\n        interesting_item: [\"f1_picked_up_makeshift_steel_armour\", ['makeshift_steel_armour' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_greater_mana_potion_on_floor: {\n        interesting_item: [\"f1_picked_up_greater_mana_potion\", ['greater_mana_potion' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_vine_armour_on_floor: {\n        interesting_item: [\"f1_picked_up_vine_armour\", ['vine_armour' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_vine_pantaloons_on_floor: {\n        interesting_item: [\"f1_picked_up_vine_pantaloons\", ['vine_pantaloons' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_silver_legwear_on_floor: {\n        interesting_item: [\"f1_picked_up_silver_legwear\", ['silver_legwear' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_slime_ball_on_floor: {\n        interesting_item: [\"f1_picked_up_slime_ball\", ['slime_ball' , 8]],\n        end: [[\"\", 0]]\n    },\n\n    f1_weak_vine_on_floor: {\n        interesting_item: [\"f1_picked_up_weak_vine\", ['weak_vine' , 6]],\n        end: [[\"\", 0]]\n    },\n\n    f1_hempweed_ligament_on_floor: {\n        interesting_item: [\"f1_picked_up_hempweed_ligament\", ['hempweed_ligament' , 2]],\n        end: [[\"\", 0]]\n    },\n\n    f1_wood_on_floor: {\n        interesting_item: [\"f1_picked_up_wood\", ['wood' , 4]],\n        end: [[\"\", 0]]\n    },\n\n    f1_steel_on_floor: {\n        interesting_item: [\"f1_picked_up_steel\", ['steel' , 4]],\n        end: [[\"\", 0]]\n    },\n\n    f1_brown_pelt_on_floor: {\n        interesting_item: [\"f1_picked_up_brown_pelt\", ['brown_fur' , 6]],\n        end: [[\"\", 0]]\n    },\n\n    f1_venomous_claw_on_floor: {\n        interesting_item: [\"f1_picked_up_venomous_claw\", ['venomous_claw' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_earthen_shield_potion_on_floor: {\n        interesting_item: [\"f1_picked_up_earthen_shield_potion\", ['earthen_shield_potion' , 2]],\n        end: [[\"\", 0]]\n    },\n\n    f1_health_potion_on_floor: {\n        interesting_item: [\"f1_picked_up_health_potion\", ['health_potion' , 4]],\n        end: [[\"\", 0]]\n    },\n\n    f1_greater_health_potion_on_floor: {\n        interesting_item: [\"f1_picked_up_greater_health_potion\", ['greater_health_potion' , 2]],\n        end: [[\"\", 0]]\n    },\n\n    f1_crafted_health_potion_on_floor: {\n        interesting_item: [\"f1_picked_up_crafted_health_potion\", ['crafted_health_potion' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_mana_potion_on_floor: {\n        interesting_item: [\"f1_picked_up_mana_potion\", ['mana_potion' , 4]],\n        end: [[\"\", 0]]\n    },\n\n    f1_crafted_mana_potion_on_floor: {\n        interesting_item: [\"f1_picked_up_crafted_mana_potion\", ['crafted_mana_potion' , 2]],\n        end: [[\"\", 0]]\n    },\n\n    f1_forest_explorer_daggers_on_floor: {\n        interesting_item: [\"f1_picked_up_forest_explorer_daggers\", ['forest_explorer_daggers' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_forest_explorer_cap_on_floor: {\n        interesting_item: [\"f1_picked_up_forest_explorer_cap\", ['forest_explorer_cap' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_forest_explorer_armour_on_floor: {\n        interesting_item: [\"f1_picked_up_forest_explorer_armour\", ['forest_explorer_armour' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_forest_explorer_pants_on_floor: {\n        interesting_item: [\"f1_picked_up_forest_explorer_pants\", ['forest_explorer_pants' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_forest_explorer_pendant_on_floor: {\n        interesting_item: [\"f1_picked_up_forest_explorer_pendant\", ['forest_explorer_pendant' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_forest_explorer_charm_on_floor: {\n        interesting_item: [\"f1_picked_up_forest_explorer_charm\", ['forest_explorer_charm' , 1]],\n        end: [[\"\", 0]]\n    },\n    \n    // --------------- DEEP FOREST ------------------------------ \\\\\n    f1_crafted_mana_potion_on_floor_2: {\n        interesting_item: [\"f1_picked_up_crafted_mana_potion_2\", ['crafted_mana_potion' , 2]],\n        end: [[\"\", 0]]\n    },\n\n    f1_greater_health_potion_on_floor_2: {\n        interesting_item: [\"f1_picked_up_greater_health_potion_2\", ['greater_health_potion' , 3]],\n        end: [[\"\", 0]]\n    },\n\n    f1_greater_mana_potion_on_floor_2: {\n        interesting_item: [\"f1_picked_up_greater_mana_potion_2\", ['greater_mana_potion' , 3]],\n        end: [[\"\", 0]]\n    },\n\n    f1_hempweed_ligament_on_floor_2: {\n        interesting_item: [\"f1_picked_up_hempweed_ligament_2\", ['hempweed_ligament' , 4]],\n        end: [[\"\", 0]]\n    },\n\n    f1_makeshift_steel_legwear_on_floor: {\n        interesting_item: [\"f1_picked_up_makeshift_steel_legwear\", ['makeshift_steel_legwear' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_runic_dagger_on_floor: {\n        interesting_item: [\"f1_picked_up_runic_dagger\", ['runic_dagger' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_deep_forest_explorer_scythe_on_floor: {\n        interesting_item: [\"f1_picked_up_deep_forest_explorer_scythe\", ['deep_forest_explorer_scythe' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_deep_forest_explorer_cap_on_floor: {\n        interesting_item: [\"f1_picked_up_deep_forest_explorer_cap\", ['deep_forest_explorer_cap' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_deep_forest_explorer_armour_on_floor: {\n        interesting_item: [\"f1_picked_up_deep_forest_explorer_armour\", ['deep_forest_explorer_armour' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_deep_forest_explorer_pants_on_floor: {\n        interesting_item: [\"f1_picked_up_deep_forest_explorer_pants\", ['deep_forest_explorer_pants' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_deep_forest_explorer_necklace_on_floor: {\n        interesting_item: [\"f1_picked_up_deep_forest_explorer_necklace\", ['deep_forest_explorer_necklace' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_deep_forest_explorer_bracelet_on_floor: {\n        interesting_item: [\"f1_picked_up_deep_forest_explorer_bracelet\", ['deep_forest_explorer_bracelet' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    f1_forest_scourge_scale_on_floor: {\n        interesting_item: [\"f1_picked_up_forest_scourge_scale\", ['forest_scourge_scale' , 3]],\n        end: [[\"\", 0]]\n    },\n\n    f1_venomous_claw_on_floor_2: {\n        interesting_item: [\"f1_picked_up_venomous_claw_2\", ['venomous_claw' , 2]],\n        end: [[\"\", 0]]\n    },\n\n    f1_magic_bark_on_floor: {\n        interesting_item: [\"f1_picked_up_magic_bark\", ['magic_bark' , 2]],\n        end: [[\"\", 0]]\n    },\n\n    f1_sharp_claw_on_floor_2: {\n        interesting_item: [\"f1_picked_up_sharp_claw_2\", ['sharp_claw' , 3]],\n        end: [[\"\", 0]]\n    },\n\n    f1_ailwarder_charm_on_floor: {\n        interesting_item: [\"f1_picked_up_ailwarder_charm\", ['ailwarder_charm' , 1]],\n        end: [[\"\", 0]]\n    },\n\n    // add flags for\n\n    /* #endregion */\n}\n//\n\n\n//# sourceURL=webpack:///./src/directories/npc/floor1.js?");

/***/ }),

/***/ "./src/directories/recipes/recipes.js":
/*!********************************************!*\
  !*** ./src/directories/recipes/recipes.js ***!
  \********************************************/
/*! exports provided: recipeDirectory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"recipeDirectory\", function() { return recipeDirectory; });\n// -- IMPORTS -- \\\\\n\n//\n\n\n// -- RECIPES -- \\\\\nconst recipeDirectory = {\n\n    health_potion: {\n        name: \"Health potion\",\n        item: \"health_potion\",\n        description: `Allows for the crafting of an item.`,\n        gold: 5,\n        items: [\n            [\"slime_ball\", 2],\n        ]\n    },\n\n    mana_potion: {\n        name: \"Mana potion\",\n        item: \"mana_potion\",\n        description: `Allows for the crafting of an item.`,\n        gold: 5,\n        items: [\n            [\"slime_ball\", 2],\n        ]\n    },\n\n    // ----------------------- STARTING RECIPES ---------------------- \\\\\n    // ----------------------- STARTING RECIPES ---------------------- \\\\\n    // ----------------------- STARTING RECIPES ---------------------- \\\\\n    // #region\n    \n    wooden_sword: {\n        name: \"Wooden sword\",\n        item: \"wooden_sword\",\n        description: `Allows for the crafting of an item.`,\n        gold: 0,\n        items: [\n            [\"wood\", 2],\n        ]\n    },\n\n    vine_wrapped_wooden_sword: {\n        name: \"Vine wrapped wooden sword\",\n        item: \"vine_wrapped_wooden_sword\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"wooden_sword\", 1],\n            [\"weak_vine\", 6]\n        ]\n    },\n\n    wooden_stave: {\n        name: \"Wooden stave\",\n        item: \"wooden_stave\",\n        description: `Allows for the crafting of an item.`,\n        gold: 0,\n        items: [\n            [\"wood\", 2],\n        ]\n    },\n    \n    vine_wrapped_wooden_stave: {\n        name: \"Vine wrapped wooden stave\",\n        item: \"vine_wrapped_wooden_stave\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"wooden_stave\", 1],\n            [\"weak_vine\", 6]\n        ]\n    },\n\n    vine_armour: {\n        name: \"Vine armour\",\n        item: \"vine_armour\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"weak_vine\", 12]\n        ]\n    },\n\n    strong_vine_chestplate: {\n        name: \"Strong vine chestplate\",\n        item: \"strong_vine_chestplate\",\n        description: `Allows for the crafting of an item.`,\n        gold: 15,\n        items: [\n            [\"vine_armour\", 1],\n            [\"weak_vine\", 3],\n            [\"hempweed_ligament\", 3]\n        ]\n    },\n\n    vine_pantaloons: {\n        name: \"Vine pantaloons\",\n        item: \"vine_pantaloons\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"weak_vine\", 8]\n        ]\n    },\n\n    feathervine_sword: {\n        name: \"Feathervine sword\",\n        item: \"feathervine_sword\",\n        description: `Allows for the crafting of an item.`,\n        gold: 25,\n        items: [\n            [\"wood\", 3],\n            [\"grey_wolf_pelt\", 10],\n            [\"weak_vine\", 7]\n        ]\n    },\n\n    wolf_hermit_staff: {\n        name: \"Wolf hermit staff\",\n        item: \"wolf_hermit_staff\",\n        description: `Allows for the crafting of an item.`,\n        gold: 30,\n        items: [\n            [\"wooden_stave\", 1],\n            [\"grey_wolf_pelt\", 10],\n            [\"sharp_claw\", 2]\n        ]\n    },\n\n    wooden_armour: {\n        name: \"Wooden armour\",\n        item: \"wooden_armour\",\n        description: `Allows for the crafting of an item.`,\n        gold: 0,\n        items: [\n            [\"wood\", 4],\n        ]\n    },\n\n    wooden_trousers: {\n        name: \"Wooden trousers\",\n        item: \"wooden_trousers\",\n        description: `Allows for the crafting of an item.`,\n        gold: 0,\n        items: [\n            [\"wood\", 3],\n        ]\n    },\n\n    vine_membrane_bracers: {\n        name: \"Vine membrane bracers\",\n        item: \"vine_membrane_bracers\",\n        description: `Allows for the crafting of an item.`,\n        gold: 20,\n        items: [\n            [\"hempweed_ligament\", 4],\n            [\"weak_vine\", 10]\n        ]\n    },\n\n    blue_vine_charm: {\n        name: \"Blue vine charm\",\n        item: \"blue_vine_charm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 35,\n        items: [\n            [\"slime_ball\", 10],\n            [\"hempweed_ligament\", 4],\n            [\"weak_vine\", 8]\n        ]\n    },\n\n    leather_pants: {\n        name: \"Leather pants\",\n        item: \"leather_pants\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"leather\", 2],\n        ]\n    },\n    \n    leather_cap: {\n        name: \"Leather cap\",\n        item: \"leather_cap\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"leather\", 1],\n        ]\n    },\n\n    leather_armour: {\n        name: \"Leather armour\",\n        item: \"leather_armour\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"leather\", 3],\n        ]\n    },\n\n    //#endregion\n\n\n    // ----------------------- FLOOR ONE RECIPES BEGINNER ---------------------- \\\\\n    // ----------------------- FLOOR ONE RECIPES BEGINNER ---------------------- \\\\\n    // ----------------------- FLOOR ONE RECIPES BEGINNER ---------------------- \\\\\n    //#region \n    wolfhide_armour: {\n        name: \"Wolfhide armour\",\n        item: \"wolfhide_armour\",\n        description: `Allows for the crafting of an item.`,\n        gold: 40,\n        items: [\n            [\"grey_wolf_pelt\", 8],\n            [\"leather\", 1]\n        ]\n    },\n\n    wolfhide_cap: {\n        name: \"Wolfhide cap\",\n        item: \"wolfhide_cap\",\n        description: `Allows for the crafting of an item.`,\n        gold: 30,\n        items: [\n            [\"grey_wolf_pelt\", 5],\n            [\"leather\", 1]\n        ]\n    },\n\n    wolfhide_leggings: {\n        name: \"Wolfhide leggings\",\n        item: \"wolfhide_leggings\",\n        description: `Allows for the crafting of an item.`,\n        gold: 30,\n        items: [\n            [\"grey_wolf_pelt\", 6],\n            [\"leather\", 1]\n        ]\n    },\n\n    slime_bracers: {\n        name: \"Slime bracers\",\n        item: \"slime_bracers\",\n        description: `Allows for the crafting of an item.`,\n        gold: 15,\n        items: [\n            [\"slime_ball\", 10],\n            [\"steel\", 1]\n        ]\n    },\n\n    slime_reinforced_sword: {\n        name: \"Slime reinforced sword\",\n        item: \"slime_reinforced_sword\",\n        description: `Allows for the crafting of an item.`,\n        gold: 5,\n        items: [\n            [\"slime_ball\", 10],\n            [\"simple_sword\", 1]\n        ]\n    },\n\n    wolfhide_charm: {\n        name: \"Wolfhide charm\",\n        item: \"wolfhide_charm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"sharp_claw\", 2],\n            [\"grey_wolf_pelt\", 8]\n        ]\n    },\n\n    lizard_bracelet: {\n        name: \"Lizard bracelet\",\n        item: \"lizard_bracelet\",\n        description: `Allows for the crafting of an item.`,\n        gold: 150,\n        items: [\n            [\"tiny_lizard_tail\", 2],\n            [\"leather\", 3]\n        ]\n    },\n\n    aquus_orb: {\n        name: \"Aquus orb\",\n        item: \"aquus_orb\",\n        description: `Allows for the crafting of an item.`,\n        gold: 100,\n        items: [\n            [\"aquus_cluster\", 5],\n        ]\n    },\n\n    water_infused_armour: {\n        name: \"Water infused armour\",\n        item: \"water_infused_armour\",\n        description: `Allows for the crafting of an item.`,\n        gold: 100,\n        items: [\n            [\"aquus_cluster\", 5],\n            [\"advanced_silver_armour\", 1]\n        ]\n    },\n\n    water_infused_helm: {\n        name: \"Water infused helm\",\n        item: \"water_infused_helm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 100,\n        items: [\n            [\"aquus_cluster\", 3],\n            [\"advanced_silver_helm\", 1]\n        ]\n    },\n    \n    water_infused_legwear: {\n        name: \"Water infused legwear\",\n        item: \"water_infused_legwear\",\n        description: `Allows for the crafting of an item.`,\n        gold: 100,\n        items: [\n            [\"aquus_cluster\", 4],\n            [\"advanced_silver_helm\", 1]\n        ]\n    },\n\n    luminant_charm: {\n        name: \"Luminant charm\",\n        item: \"luminant_charm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 150,\n        items: [\n            [\"steel\", 2],\n            [\"leather\", 2],\n            [\"light_absorbant_eye\", 1]\n        ]\n    },\n\n    wolfhide_dagger: {\n        name: \"Wolfhide dagger\",\n        item: \"wolfhide_dagger\",\n        description: `Allows for the crafting of an item.`,\n        gold: 20,\n        items: [\n            [\"simple_dagger\", 1],\n            [\"grey_wolf_pelt\", 8]\n        ]\n    },\n\n    pickaxe: {\n        name: \"Pickaxe\",\n        item: \"pickaxe\",\n        description: `Allows for the crafting of an item.`,\n        gold: 5,\n        items: [\n            [\"steel\", 1],\n            [\"wood\", 1]\n        ]\n    },\n\n    makeshift_steel_armour: {\n        name: \"Makeshift steel armour\",\n        item: \"makeshift_steel_armour\",\n        description: `Allows for the crafting of an item.`,\n        gold: 5,\n        items: [\n            [\"steel\", 3],\n        ]\n    },\n\n    makeshift_steel_helm: {\n        name: \"Makeshift steel helm\",\n        item: \"makeshift_steel_helm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 5,\n        items: [\n            [\"steel\", 2],\n        ]\n    },\n\n    makeshift_steel_legwear: {\n        name: \"Makeshift steel legwear\",\n        item: \"makeshift_steel_legwear\",\n        description: `Allows for the crafting of an item.`,\n        gold: 5,\n        items: [\n            [\"steel\", 3],\n        ]\n    },\n\n    makeshift_sword: {\n        name: \"Makeshift sword\",\n        item: \"makeshift_sword\",\n        description: `Allows for the crafting of an item.`,\n        gold: 5,\n        items: [\n            [\"steel\", 1],\n            [\"leather\", 1]\n        ]\n    },\n\n    wolven_reavers: {\n        name: \"Wolven reavers\",\n        item: \"wolven_reavers\",\n        description: `Allows for the crafting of an item.`,\n        gold: 15,\n        items: [\n            [\"leather\", 1],\n            [\"sharp_claw\", 3],\n            [\"grey_wolf_pelt\", 3]\n        ]\n    },\n\n    bladed_armour: {\n        name: \"Bladed armour\",\n        item: \"bladed_armour\",\n        description: `Allows for the crafting of an item.`,\n        gold: 50,\n        items: [\n            [\"makeshift_steel_armour\", 1],\n            [\"sharp_claw\", 4],\n        ]\n    },\n\n    friendly_greater_slime: {\n        name: \"Friendly greater slime\",\n        item: \"friendly_greater_slime\",\n        description: `Strengthen your slime buddy!`,\n        gold: 0,\n        items: [\n            [\"friendly_slime\", 1],\n            [\"water_rune\", 1],\n            [\"water_energy\", 1],\n            [\"slime_bracers\", 1]\n        ]\n    },\n\n    crafted_health_potion: {\n        name: \"Crafted health potion\",\n        item: \"crafted_health_potion\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"slime_ball\", 3]\n        ]\n    },\n\n    //#endregion\n\n    // ----------------------- FLOOR ONE RECIPES ADVANCED ---------------------- \\\\\n    // ----------------------- FLOOR ONE RECIPES ADVANCED ---------------------- \\\\\n    // ----------------------- FLOOR ONE RECIPES ADVANCED ---------------------- \\\\\n    //#region\n    tear_of_lucia: {\n        name: \"Tear of Lucia\",\n        item: \"tear_of_lucia\",\n        description: `Allows for the crafting of an item.`,\n        gold: 500,\n        items: [\n            [\"steel\", 4],\n            [\"conduit_orb\", 1],\n            [\"manasoul\", 1]\n        ]\n    },\n\n    shadow_cloak: {\n        name: \"Shadow cloak\",\n        item: \"shadow_cloak\",\n        description: `Allows for the crafting of an item.`,\n        gold: 400,\n        items: [\n            [\"leather\", 3],\n            [\"shadow_pelt\", 8],\n            [\"shadow_corona\", 1],\n            [\"grey_wolf_pelt\", 15]\n        ]\n    },\n\n    earthen_sword: {\n        name: \"Earthen sword\",\n        item: \"earthen_sword\",\n        description: `Allows for the crafting of an item.`,\n        gold: 220,\n        items: [\n            [\"sharpened_sword\", 1],\n            [\"venomous_claw\", 4],\n            [\"sharp_claw\", 3],\n            [\"steel\", 3]\n        ]\n    },\n\n    red_slime_bracers: {\n        name: \"Red slime bracers\",\n        item: \"red_slime_bracers\",\n        description: `Allows for the crafting of an item.`,\n        gold: 150,\n        items: [\n            [\"red_slime_ball\", 10],\n            [\"steel\", 2]\n        ]\n    },\n\n    shinobi_armour: {\n        name: \"Shinobi armour\",\n        item: \"shinobi_armour\",\n        description: `Allows for the crafting of an item.`,\n        gold: 300,\n        items: [\n            [\"ninja_garb\", 1],\n            [\"grey_wolf_pelt\", 10],\n            [\"shadow_pelt\", 5]\n        ]\n    },\n\n    shinobi_headcloak: {\n        name: \"Shinobi headcloak\",\n        item: \"shinobi_headcloak\",\n        description: `Allows for the crafting of an item.`,\n        gold: 250,\n        items: [\n            [\"ninja_wrap\", 1],\n            [\"grey_wolf_pelt\", 7],\n            [\"shadow_pelt\", 3]\n        ]\n    },\n\n    shinobi_leggings: {\n        name: \"Shinobi leggings\",\n        item: \"shinobi_leggings\",\n        description: `Allows for the crafting of an item.`,\n        gold: 280,\n        items: [\n            [\"ninja_legwear\", 1],\n            [\"grey_wolf_pelt\", 8],\n            [\"shadow_pelt\", 4]\n        ]\n    },\n\n    water_orb_necklace: {\n        name: \"Water orb necklace\",\n        item: \"water_orb_necklace\",\n        description: `Allows for the crafting of an item.`,\n        gold: 200,\n        items: [\n            [\"water_orb\", 1],\n            [\"steel\", 5],\n            [\"aquus_cluster\", 12]\n        ]\n    },\n\n    vinewarding_charm: {\n        name: \"Vinewarding charm\",\n        item: \"vinewarding_charm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 25,\n        items: [\n            [\"weak_vine\", 3],\n            [\"hempweed_ligament\", 2]\n        ]\n    },\n\n    bearkiller_charm: {\n        name: \"Bearkiller charm\",\n        item: \"bearkiller_charm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 50,\n        items: [\n            [\"sharp_claw\", 2],\n            [\"brown_fur\", 5]\n        ]\n    },\n\n    canine_charm: {\n        name: \"Canine charm\",\n        item: \"canine_charm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 50,\n        items: [\n            [\"grey_wolf_pelt\", 6],\n            [\"sharp_claw\", 3]\n        ]\n    },\n\n    earthen_shield_potion: {\n        name: \"Earthen shield potion\",\n        item: \"earthen_shield_potion\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"weak_vine\", 3],\n            [\"hempweed_ligament\", 1]\n        ]\n    },\n\n    weak_slingshot: {\n        name: \"Weak slingshot\",\n        item: \"weak_slingshot\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"weak_vine\", 3],\n            [\"sharp_claw\", 1],\n            [\"leather\", 1]\n        ]\n    },\n\n    leather: {\n        name: \"Leather\",\n        item: \"leather\",\n        description: `Allows for the crafting of an item.`,\n        gold: 5,\n        items: [\n            [\"brown_fur\", 2],\n        ]\n    },\n\n    invigorating_flower: {\n        name: \"Invigorating flower\",\n        item: \"invigorating_flower\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"brown_fur\", 4],\n            [\"slime_ball\", 2]\n        ]\n    },\n\n    desperate_flower: {\n        name: \"Desperate flower\",\n        item: \"desperate_flower\",\n        description: `Allows for the crafting of an item.`,\n        gold: 10,\n        items: [\n            [\"grey_wolf_pelt\", 4],\n            [\"sharp_claw\", 2]\n        ]\n    },\n\n    monster_essence: {\n        name: \"Monster essence\",\n        item: \"monster_essence\",\n        description: `Allows for the crafting of an item.`,\n        gold: 20,\n        items: [\n            [\"brown_fur\", 3],\n            [\"slime_ball\", 3],\n            [\"hempweed_ligament\", 2],\n            [\"sharp_claw\", 2],\n            [\"grey_wolf_pelt\", 3],\n            [\"special_sap\", 3]\n        ]\n    },\n\n    kindred_essence: {\n        name: \"Kindred essence\",\n        item: \"kindred_essence\",\n        description: `Allows for the crafting of an item.`,\n        gold: 20,\n        items: [\n            [\"monster_essence\", 1],\n            [\"special_sap\", 3],\n            [\"magic_bark\", 3]\n        ]\n    },\n    //#endregion\n\n    // ----------------------- FLOOR ONE ORA RECIPES ----------------------- \\\\\n    // ----------------------- FLOOR ONE ORA RECIPES ----------------------- \\\\\n    // ----------------------- FLOOR ONE ORA RECIPES ----------------------- \\\\\n    //#region \n\n    geomancers_hood: {\n        name: \"Geomancer's Hood\",\n        item: \"geomancers_hood\",\n        description: `Allows for the crafting of an item.`,\n        gold: 125,\n        items: [\n            [\"magic_bark\", 6],\n            [\"leather\", 6],\n        ]\n    },\n\n    geomancers_lower_robes: {\n        name: \"Geomancer's Lower Robes\",\n        item: \"geomancers_lower_robes\",\n        description: `Allows for the crafting of an item.`,\n        gold: 125,\n        items: [\n            [\"magic_bark\", 7],\n            [\"leather\", 6],\n        ]\n    },\n\n    virulent_brawler_leg_guards: {\n        name: \"Virulent Brawler Leg Guards\",\n        item: \"virulent_brawler_leg_guards\",\n        description: `Allows for the crafting of an item.`,\n        gold: 125,\n        items: [\n            [\"venomous_claw\", 4],\n            [\"forest_scourge_scale\", 5],\n        ]\n    },\n\n    virulent_brawler_helm: {\n        name: \"Virulent Brawler Helm\",\n        item: \"virulent_brawler_helm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 125,\n        items: [\n            [\"venomous_claw\", 4],\n            [\"forest_scourge_scale\", 5],\n            [\"grey_wolf_pelt\", 3]\n        ]\n    },\n\n    earth_mage_staff: {\n        name: \"Earth Mage Staff\",\n        item: \"earth_mage_staff\",\n        description: `Allows for the crafting of an item.`,\n        gold: 150,\n        items: [\n            [\"magic_bark\", 5],\n            [\"special_sap\", 5],\n            [\"wood\", 5]\n        ]\n    },\n\n    virulent_bracers: {\n        name: \"Virulent Bracers\",\n        item: \"virulent_bracers\",\n        description: `Allows for the crafting of an item.`,\n        gold: 150,\n        items: [\n            [\"venomous_claw\", 3],\n            [\"grey_wolf_pelt\", 8],\n            [\"sharp_claw\", 4]\n        ]\n    },\n\n    small_scaled_shield: {\n        name: \"Small Scaled Shield\",\n        item: \"small_scaled_shield\",\n        description: `Allows for the crafting of an item.`,\n        gold: 175,\n        items: [\n            [\"forest_scourge_scale\", 12]\n        ]\n    },\n\n    toxic_grenade: {\n        name: \"Toxic grenade\",\n        item: \"toxic_grenade\",\n        description: `Allows for the crafting of an item.`,\n        gold: 30,\n        items: [\n            [\"venomous_claw\", 2],\n            [\"leather\", 1]\n        ]\n    },\n\n    // ----------------------------------------------- ADVANCED ---------- \\\\\n    \n    earth_magus_staff: {\n        name: \"Earth Magus Staff\",\n        item: \"earth_magus_staff\",\n        description: `Allows for the crafting of an item.`,\n        gold: 100,\n        items: [\n            [\"earth_mage_staff\", 1],\n            [\"earthen_manasoul\", 1]\n        ]\n    },\n\n    virulent_brawler_plates: {\n        name: \"Virulent Brawler Plates\",\n        item: \"virulent_brawler_plates\",\n        description: `Allows for the crafting of an item.`,\n        gold: 250,\n        items: [\n            [\"venomous_claw\", 4],\n            [\"forest_scourge_scale\", 6],\n            [\"wood\", 5]\n        ]\n    },\n\n    geomancers_cloak: {\n        name: \"Geomancer's Cloak\",\n        item: \"geomancers_cloak\",\n        description: `Allows for the crafting of an item.`,\n        gold: 200,\n        items: [\n            [\"magic_bark\", 6],\n            [\"leather\", 5],\n            [\"earthen_manasoul\", 1]\n        ]\n    },\n\n    living_virulent_bracers: {\n        name: \"Living Virulent Bracers\",\n        item: \"living_virulent_bracers\",\n        description: `Allows for the crafting of an item.`,\n        gold: 100,\n        items: [\n            [\"virulent_bracers\", 1],\n            [\"earthen_manasoul\", 1]\n        ]\n    },\n\n    ailwarder_charm: {\n        name: \"Ailwarder Charm\",\n        item: \"ailwarder_charm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 175,\n        items: [\n            [\"venomous_claw\", 3],\n            [\"special_sap\", 4]\n        ]\n    },\n\n    tectonic_charm: {\n        name: \"Tectonic Charm\",\n        item: \"tectonic_charm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 175,\n        items: [\n            [\"wood\", 6],\n            [\"special_sap\", 4],\n            [\"magic_bark\", 4]\n        ]\n    },\n\n    virulent_charm: {\n        name: \"Virulent Charm\",\n        item: \"virulent_charm\",\n        description: `Allows for the crafting of an item.`,\n        gold: 175,\n        items: [\n            [\"venomous_claw\", 4],\n            [\"grey_wolf_pelt\", 8],\n        ]\n    },\n    //#endregion\n}\n//\n\n/*    \nslam_sword: {\n    name: \"slam sword\",\n    item: \"slam_sword\",\n    description: \"allows for the c.. o k i cba\",\n    gold: 4000,\n    items: [\n        [\"slime_ball\", 12],\n        [\"shortsword\", 1]\n    ]\n}\n*/\n\n//# sourceURL=webpack:///./src/directories/recipes/recipes.js?");

/***/ }),

/***/ "./src/directories/shops/floor1.js":
/*!*****************************************!*\
  !*** ./src/directories/shops/floor1.js ***!
  \*****************************************/
/*! exports provided: floor1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"floor1\", function() { return floor1; });\n// -- IMPORTS -- \\\\\n\n//\n\n// -- SHOPS -- \\\\\nconst floor1 = {\n    f1_shop: {\n        name: \"Floor one shop\",\n        items: [\n            [\"special_armband\", 500],\n            [\"health_potion\", 15],\n            [\"greater_health_potion\", 35],\n            [\"mana_potion\", 15],\n            [\"greater_mana_potion\", 35],\n            [\"stamina_vial\", 15],\n            [\"wood\", 20],\n        ]\n    },\n    \n    old_man: {\n        name: \"Old man's teeth\",\n        items: [\n            [\"old_man_yellow_tooth\", 6000],\n            [\"old_man_white_tooth\", 1200]\n        ]\n    },\n\n    f1_docile_slime_shop: {\n        name: \"Docile slime's shop\",\n        items: [\n            [\"water_energy\", 100],\n        ]\n    },\n\n    f1_old_man: {\n        name: \"Old man's shop\",\n        items: [\n            [\"fishing_rod\", 100],\n            [\"fishers_lucky_charm\", 250],\n        ]\n    },\n\n    f1_weak_weapons: {\n        name: \"Weapons shop\",\n        items: [\n            [\"simple_sword\", 100],\n            [\"silver_axe\", 400],\n            [\"metal_stave\", 120],\n            [\"sharpened_sword\", 400],\n            [\"simple_dagger\", 100],\n            [\"runeblade\", 500],\n            [\"runic_dagger\", 500],\n            [\"silver_shield\", 400],\n            [\"magisteel_stave\", 500],\n            [\"thunder_rod\", 500]\n        ]\n    },\n\n    f1_strong_weapons: {\n        name: \"Advanced Weapons shop\",\n        items: [\n            [\"crafted_blade\", 1000],\n            [\"crafted_dagger\", 1000],\n            [\"reinforced_silver_axe\", 1200],\n            [\"sharpened_sword\", 400],\n            [\"simple_dagger\", 100],\n            [\"runeblade\", 500],\n            [\"runic_dagger\", 500],\n            [\"silver_shield\", 400],\n            [\"enchanted_magisteel_stave\", 1400],\n            [\"conduit_orb\", 800],\n            [\"magisteel_runic_dagger\", 1200]\n        ]\n    },\n\n    f1_weak_armours: {\n        name: \"Armour shop\",\n        items: [\n            [\"silver_helm\", 200],\n            [\"silver_armour\", 200],\n            [\"silver_legwear\", 200],\n            [\"advanced_silver_helm\", 320],\n            [\"advanced_silver_armour\", 320],\n            [\"advanced_silver_legwear\", 320],\n            [\"wizard_headband\", 280],\n            [\"light_wizard_robes\", 280],\n            [\"light_wizard_leggings\", 280],\n            [\"enchanted_wooden_helm\", 350]\n\n        ]\n    },\n\n    f1_strong_armours: {\n        name: \"Advanced armour shop\",\n        items: [\n            [\"silver_knight_helm\", 600],\n            [\"silver_knight_armour\", 600],\n            [\"silver_knight_legwear\", 600],\n            [\"ninja_wrap\", 360],\n            [\"ninja_garb\", 360],\n            [\"ninja_legwear\", 360],\n            [\"tattered_magus_robes\", 600]\n        ]\n    },\n\n    f1_misc: {\n        name: \"Misc shop\",\n        items: [\n            [\"steel\", 40],\n            [\"leather\", 36],\n            [\"wood\", 15],\n            [\"water_rune\", 200],\n            [\"vip_card\", 400],\n            [\"f1_settlement_teleportation_stone\", 20]\n        ]\n    },\n\n    f1_misc_vip: {\n        name: \"VIP Misc shop\",\n        items: [\n            [\"steel\", 25],\n            [\"leather\", 24],\n            [\"wood\", 10]\n        ]\n    },\n\n    f1_forest_cleric_shop: {\n        name: \"Aina's TP stones\",\n        items: [\n            [\"f1_forest_settlement_teleportation_stone\", 20]\n        ]\n    },\n\n    f1_ora_shop: {\n        name: \"Ora's TP stones\",\n        items: [\n            [\"f1_oras_hut_teleportation_stone\", 20]\n        ]\n    },\n\n    f1_forest_merchant: {\n        name: \"Forest merchant\",\n        items: [\n            [\"forest_scourge_scale\", 20],\n            [\"venomous_claw\", 15],\n            [\"magic_bark\", 20],\n            [\"special_sap\", 25],\n            [\"forest_merchant_advert\", 1],\n            [\"earthen_manasoul\", 2500]\n        ]\n    },\n}\n//\n\n//# sourceURL=webpack:///./src/directories/shops/floor1.js?");

/***/ }),

/***/ "./src/directories/zones/floor0.js":
/*!*****************************************!*\
  !*** ./src/directories/zones/floor0.js ***!
  \*****************************************/
/*! exports provided: floor0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"floor0\", function() { return floor0; });\n// -- IMPORTS -- \\\\\n/*\nimport * as mainView from '../../js/views/mainView';\nimport { settings } from '../../js/models/data'; // need messageDelay\nimport { Combat } from '../../js/models/combat'; // only need endturn and getequips\nimport * as gameData from '../../js/models/data';\nimport { enemies } from '../../js/models/enemies';\nimport { addItem } from '../../js/models/items';\nimport { mainLoop } from '../../js/index';\nimport { equipMode } from '../../js/models/equipMode';\nimport { initNpc } from '../../js/models/npc';\nimport { updateDisplay } from '../../js/models/baseModel';\nimport { initStats } from '../../js/models/learnSkills';\nimport { initSettings } from '../../js/models/settings';\nimport { initCrafting } from '../../js/models/crafting';\nimport { separator, tutorialMessages } from '../../js/views/baseView';\nimport { baseOptions } from '../../js/models/rooms';\n*/\n// ----------- \\\\\n\n// -- ROOM TEMPLATE -- \\\\\n/*\nroom_name: {\n    entrance: \"\",\n    \n    extraOptions: [],\n\n    explores: [[]],\n    encounters: [[]],\n    finds: [[]],\n    ambushes: [],\n    interacts: [],\n\n    left: \"\",\n    right: \"\",\n    south: \"\",\n    north: \"\"\n\n},\n*/\n// ------------- \\\\\n\n    // ------------------ USEFUL STUFF ------------------- \\\\\n    const standardMeadow = {\n        explores: [], // chances of different events\n        encounters: [[]], // possible enemy encounters\n        finds: [[]], // possible items one can find\n        ambushes:[[]], //[[\"slime\", 30], [\"lesser_teravalum\", 30]],\n        interacts: [],\n        onEnter: []\n    }\n\n    // -------------------------------------------------- \\\\\n    // ROOMS\n    \n    const floor0 = {\n    \n        name: \"floor0\",\n    \n        //start: [10,8], // these are [y,x] coordinates\n    \n        // n - nothing\n        // s- settlement\n        // f - forest\n        // i - deep forest\n        // r - river\n        // q - dark forest\n        zone: [\n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"z2\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"z1\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p9\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p8\", \"p\", \"p\", \"p\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"p7\", \"p\", \"p\", \"p\", \"p\", \"p\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"p\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"p3\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p6\", \"n\", \"p\", \"p\", \"p\", \"p\", \"p\", \"n\", \"p4\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"p\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"p\", \"p1\", \"p\", \"p2\", \"p\", \"p\", \"p5\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"p\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"t4\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"t3\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"t2\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"t1\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"t\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"f\", \"f\", \"f\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"f\", \"s\", \"f\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"f\", \"f\", \"f\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"]\n        ],\n\n    \n        // ---------------------------------- FOREST ------------------------------------ \\\\\n        // ----- ------ -------- \\\\\n        // notes: little girl, rude kid, lost teenager, simple sword, damaged helm\n        s: {\n            entrance: \"The area is a small clearing; a somewhat square area enclosed with a thick barrier of trees in all\" +\n            \" directions except north. It is clearly very light but the overhead covering of leaves allows only a small\" +\n            \" amount of the intense sunlight to stream through. To the north is a tall tunnel of green foliage for which no\" +\n            \" end can be seen.\",\n            colour: \"#0b6d00\",\n    \n            extraOptions: [],\n            music: \"forest\",\n        \n            explores: standardMeadow.explores,\n            encounters: standardMeadow.encounters,\n            finds: standardMeadow.finds,\n            ambushes: [],\n            interacts: [],\n            onEnter: [[\"f0_intro\", [\"flag: -f0_done_intro\"]]]\n        },\n    \n        f: {\n            entrance: \"This area is part of the clearing. It's hard to understand how you got here. There's no entrance, only\" +\n            \" a more dimly-lit tunnel formed with trees and their multitudinous branches overhead.\",\n            colour: \"#0b6d00\",\n    \n            extraOptions: [],\n            music: \"forest\",\n            \n            explores: standardMeadow.explores,\n            encounters: standardMeadow.encounters,\n            finds: standardMeadow.finds,\n            ambushes: standardMeadow.ambushes,\n            interacts: standardMeadow.interacts,\n            onEnter: standardMeadow.onEnter,\n        },\n\n        t: {\n            entrance: \"To the south, you can see the clearing; it's comparative brightness beckoning you. But you know you must\" +\n            \" continue towards the north, through the grassy cavern that has no end in sight.\",\n            colour: \"#0b6d00\",\n    \n            extraOptions: [],\n            music: \"forest\",\n            \n            explores: standardMeadow.explores,\n            encounters: standardMeadow.encounters,\n            finds: standardMeadow.finds,\n            ambushes: standardMeadow.ambushes,\n            interacts: standardMeadow.interacts, // blank\n            onEnter: standardMeadow.onEnter, // blank\n\n            specialRooms: {\n                1: {\n                    onEnter: [['f0_slime_fight', [\"flag: -f0_fought_slime\"]]]\n                },\n                2: {\n                    onEnter: [['f0_young_wolf_fight', [\"flag: -f0_fought_young_wolf\"]]]\n                },\n                3: {\n                    onEnter: [['f0_teaching_crafting', [\"flag: -f0_been_taught_crafting\"]]]\n                },\n                4: {\n                    onEnter: [['f0_f4_checkpoint', [\"flag: -f0_passed_t4\"]]]\n                }\n            }\n        },\n\n        z: {\n            entrance: \"...\",\n            colour: \"#ff0000\",\n    \n            extraOptions: [],\n            music: \"none\",\n            \n            explores: standardMeadow.explores,\n            encounters: standardMeadow.encounters,\n            finds: standardMeadow.finds,\n            ambushes: standardMeadow.ambushes,\n            interacts: standardMeadow.interacts, // blank\n            onEnter: standardMeadow.onEnter, // blank\n\n            specialRooms: {\n                1: {\n                    onEnter: [['f0_dreadful_wolf_fight', ['flag: -f0_fought_dreadful_wolf']]],\n                },\n                2: {\n                    onEnter: [['f0_charon_fight', ['flag: -f0_fought_charon']]],\n                }\n            }\n        },\n\n        p: {\n            entrance: \"The area is more open here, but any practical movement is still fairly restricted to a main path. At some points, the grassy trail\" +\n            \" offshoots or breaks into multiple options. You sometimes feel the shifting of leaves around you, reminding you that you could be attacked at any moment.\",\n            colour: \"#00ccff\",\n    \n            extraOptions: [],\n            music: \"forest\",\n            \n            explores: [[\"find\", 50], [\"encounter\", 50]],\n            encounters: [[\"slime\", 34, { levelCap: 1, modifyEnemy: { exp: 0 }}],\n                            [\"young_wolf\", 33, { levelCap: 1, modifyEnemy: { exp: 0 }}],\n                            [\"young_bear\", 33, { levelCap: 1, modifyEnemy: { exp: 0 }}]],\n            finds: [[\"slime_ball\", 100, 2, 4]],\n            ambushes: [[\"slime\", 5, { levelCap: 1, modifyEnemy: { exp: 0 }} ],\n            [\"young_wolf\", 5, { levelCap: 1, modifyEnemy: { exp: 0 }} ],\n            [\"young_bear\", 5, { levelCap: 1, modifyEnemy: { exp: 0 }} ]],\n            interacts: standardMeadow.interacts, // blank\n            onEnter: standardMeadow.onEnter, // blank\n\n            specialRooms: {\n                1: {\n                    extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f0_picked_up_greater_health_potion\"]]],\n                    interacts: [[\"f0_greater_health_potion_on_floor\", [\"flag: -f0_picked_up_greater_health_potion\"]]],\n                },\n                2: {\n                    extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f0_picked_up_greater_mana_potion\"]]],\n                    interacts: [[\"f0_greater_mana_potion_on_floor\", [\"flag: -f0_picked_up_greater_mana_potion\"]]],\n                },\n                3: {\n                    extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f0_picked_up_invigorating_flower\"]]],\n                    interacts: [[\"f0_invigorating_flower_on_floor\", [\"flag: -f0_picked_up_invigorating_flower\"]]],\n                },\n                4: {\n                    extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f0_picked_up_desperate_flower\"]]],\n                    interacts: [[\"f0_desperate_flower_on_floor\", [\"flag: -f0_picked_up_desperate_flower\"]]],\n                },\n                5: {\n                    extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f0_picked_up_stamina_vial\"]]],\n                    interacts: [[\"f0_stamina_vial_on_floor\", [\"flag: -f0_picked_up_stamina_vial\"]]],\n                },\n                6: {\n                    extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f0_picked_up_monster_essence\"]]],\n                    interacts: [[\"f0_monster_essence_on_floor\", [\"flag: -f0_picked_up_monster_essence\"]]],\n                },\n                7: {\n                    extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f0_picked_up_simple_sword\"]]],\n                    interacts: [[\"f0_simple_sword_on_floor\", [\"flag: -f0_picked_up_simple_sword\"]]],\n                },\n                8: {\n                    extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f0_picked_up_leather_cap\"]]],\n                    interacts: [[\"f0_leather_cap_on_floor\", [\"flag: -f0_picked_up_leather_cap\"]]],\n                },\n                9: {\n                    extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f0_picked_up_wolfhide_charm\"]]],\n                    interacts: [[\"f0_wolfhide_charm_on_floor\", [\"flag: -f0_picked_up_wolfhide_charm\"]]],\n                }\n            }\n\n        },\n\n    \n}\n\n//# sourceURL=webpack:///./src/directories/zones/floor0.js?");

/***/ }),

/***/ "./src/directories/zones/floor1.js":
/*!*****************************************!*\
  !*** ./src/directories/zones/floor1.js ***!
  \*****************************************/
/*! exports provided: floor1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"floor1\", function() { return floor1; });\n// -- IMPORTS -- \\\\\n/*\nimport * as mainView from '../../js/views/mainView';\nimport { settings } from '../../js/models/data'; // need messageDelay\nimport { Combat } from '../../js/models/combat'; // only need endturn and getequips\nimport * as gameData from '../../js/models/data';\nimport { enemies } from '../../js/models/enemies';\nimport { addItem } from '../../js/models/items';\nimport { mainLoop } from '../../js/index';\nimport { equipMode } from '../../js/models/equipMode';\nimport { initNpc } from '../../js/models/npc';\nimport { updateDisplay } from '../../js/models/baseModel';\nimport { initStats } from '../../js/models/learnSkills';\nimport { initSettings } from '../../js/models/settings';\nimport { initCrafting } from '../../js/models/crafting';\nimport { separator, tutorialMessages } from '../../js/views/baseView';\nimport { baseOptions } from '../../js/models/rooms';\n*/\n// ----------- \\\\\n\n// -- ROOM TEMPLATE -- \\\\\n/*\nroom_name: {\n    entrance: \"\",\n    \n    extraOptions: [],\n\n    explores: [[]],\n    encounters: [[]],\n    finds: [[]],\n    ambushes: [],\n    interacts: [],\n\n    left: \"\",\n    right: \"\",\n    south: \"\",\n    north: \"\"\n\n},\n*/\n// ------------- \\\\\n\n    // ------------------ USEFUL STUFF ------------------- \\\\\nconst standardForest = {\n    explores: [[\"encounter\", 60], [\"find\", 40]], // chances of different events\n    encounters: [[\"slime\", 25, { levelCap: 5 }],\n                [\"lesser_teravalum\", 25, { levelCap: 6 }],\n                [\"brown_bear\", 25, { levelCap: 7 }],\n                [\"grey_wolf\", 25, { levelCap: 7 }]], // possible enemy encounters\n    finds: [\n            [\"wood\", 17, 1, 3],\n            [\"slime_ball\", 14, 1, 3],\n            [\"brown_fur\", 14, 1, 3],\n            [\"weak_vine\", 14, 1, 3],\n            [\"grey_wolf_pelt\", 14, 1, 3],\n            [\"hempweed_ligament\", 11, 1, 2],\n            [\"sharp_claw\", 11, 1, 2],\n            [\"damaged_dagger\", 1, 1, 1],\n            [\"damaged_helm\", 1, 1, 1],\n            [\"damaged_pantaloons\", 1, 1, 1],\n            [\"damaged_armour\", 1, 1, 1],\n            [\"damaged_sword\", 1, 1, 1]], // possible items one can find\n    ambushes:[[\"slime\", 5, { levelCap: 5 }],\n    [\"lesser_teravalum\", 5, { levelCap: 6 }],\n    [\"brown_bear\", 5, { levelCap: 7 }],\n    [\"grey_wolf\", 5, { levelCap: 7 }]], //[[\"slime\", 30], [\"lesser_teravalum\", 30]],\n    interacts: [],\n    onEnter: []\n}\n\nconst standardDeepForest = {\n    explores: [[\"encounter\", 65], [\"find\", 35]], // chances of different events\n    encounters: [[\"young_venomous_wolf\", 35, { levelCap: 16 }],\n                [\"lesser_forest_scourge\", 30, { levelCap: 18 }],\n                [\"mobile_lesser_ent\", 25, { levelCap: 20 }]], // possible enemy encounters\n    finds: [\n        [\"forest_scourge_scale\", 27, 1, 3],\n        [\"sharp_claw\", 27, 2, 3],\n        [\"venomous_claw\", 17, 1, 3],\n        [\"grey_wolf_pelt\", 17, 2, 5],\n        [\"magic_bark\", 10, 1, 3],\n        [\"sharpened_sword\", 2, 1, 1]\n    ],\n    ambushes:[[\"grey_wolf\", 10, { changeLevel: 9, levelCap: 15 }],\n    [\"brown_bear\", 10, { changeLevel: 10, levelCap: 10 }],\n    [\"young_venomous_wolf\", 10, { levelCap: 16 }],\n    [\"lesser_forest_scourge\", 10, { levelCap: 18 }]], //[[\"slime\", 30], [\"lesser_teravalum\", 30]],\n    interacts: [],\n    onEnter: []\n}\n\nconst standardRiver = {\n    explores: [[\"encounter\", 70], [\"find\", 30]],\n    encounters: [[\"greater_slime\", 40, true, false, false],\n    [\"lesser_water_klastera\", 30, true, false, false], [\"young_water_lizard\", 30, true, false, false]],\n    finds: [[\"slime_ball\", 40, 2, 5],\n            [\"weak_membrane\", 20, 1, 2],\n            [\"tiny_lizard_tail\", 20, 1, 1],\n            [\"aquus_cluster\", 17, 1, 2],\n            [\"water_orb\", 3, 1, 1]],\n    ambushes: [],\n    interacts: [],\n    onEnter: []\n}\n\nconst standardDarkforest = {\n    explores: [[\"encounter\", 70], [\"find\", 30]],\n    encounters: [[\"red_slime\", 35, true, false, false],\n    [\"venomous_wolf\", 30, true, false, false],\n    [\"grey_wolf\", 25, 16, false, false],\n    [\"dark_beast\", 10, true, false, false]],\n    finds: [[\"red_slime_ball\", 40, 3, 4],\n            [\"grey_wolf_pelt\", 30, 2, 4],\n            [\"sharp_claw\", 20, 1, 1],\n            [\"shadow_pelt\", 10, 2, 3]],\n    ambushes: [],\n    interacts: [],\n    onEnter: []\n}\n\nconst standardSettlement = {\n    explores: [[\"find\", 100]],\n    encounters: [],\n    finds: [[\"trash\", 100, 1, 1]],\n    ambushes: [[]],\n    interacts: [[]],\n    onEnter: []\n}\n// -------------------------------------------------- \\\\\n// ROOMS\n\nconst floor1 = {\n\n    name: \"floor1\",\n\n    //start: [10,8], // these are [y,x] coordinates\n\n    // n - nothing\n    // s- settlement\n    // f - forest\n    // i - deep forest\n    // r - river\n    // q - dark forest\n    zone: [\n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"r\", \"r\", \"r\", \"r\", \"r\", \"r\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"r\", \"r\", \"r\", \"r\", \"r\", \"r\", \"r\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"z\", \"z\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"r\", \"r\", \"r\", \"r\", \"r\", \"r\", \"r\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"z\", \"z\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"r\", \"r\", \"r\", \"r\", \"r\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"z\", \"z1\", \"f\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"d\", \"n\", \"n\", \"d\", \"d\", \"d20\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"r\", \"r\", \"r\", \"r\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"f\", \"f\", \"f\", \"n\", \"n\", \"d\", \"d\", \"d\", \"d19\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"d\", \"d6\", \"n\", \"n\", \"d\", \"n\", \"d\", \"d\", \"n\", \"d\", \"d\", \"d\", \"d\", \"n\", \"r\", \"r\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"f\", \"d\", \"d\", \"n\", \"d\", \"n\", \"n\", \"d\", \"n\", \"d\", \"d\", \"d\", \"d\", \"d\", \"n\", \"d\", \"d\", \"d\", \"d1\", \"n\", \"n\", \"d\", \"n\", \"d\", \"n\", \"n\", \"d\", \"n\", \"r\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"d\", \"n\", \"d20\", \"d\", \"d\", \"d22\", \"n\", \"n\", \"d\", \"n\", \"n\", \"d\", \"n\", \"n\", \"d\", \"d\", \"n\", \"d\", \"d\", \"d\", \"d\", \"n\", \"d\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"d21\", \"d\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"d\", \"n\", \"n\", \"d7\", \"n\", \"f\", \"f\", \"f\", \"n\", \"n\", \"n\", \"n\", \"f31\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"f7\", \"f\", \"f\", \"f40\", \"d19\", \"n\", \"n\", \"n\", \"n\", \"f11\", \"n\", \"f\", \"n\", \"f\", \"f\", \"f\", \"f\", \"d\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"d\", \"d\", \"d\", \"d\", \"n\", \"n\", \"n\", \"n\", \"f\", \"n\", \"f\", \"f\", \"f\", \"f\", \"f\", \"n\", \"n\", \"n\", \"f\", \"n\", \"f\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"d9\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"d\", \"f29\", \"f\", \"f\", \"f\", \"f\", \"n\", \"f\", \"n\", \"f10\", \"n\", \"f\", \"f\", \"f44\", \"f\", \"f\", \"f45\", \"f\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"d12\", \"d\", \"d\", \"d\", \"n\", \"f\", \"n\", \"n\", \"n\", \"f8\", \"n\", \"f9\", \"n\", \"n\", \"n\", \"f\", \"n\", \"n\", \"n\", \"n\", \"n\", \"f\", \"f\", \"f12\", \"n\", \"d\", \"d\", \"d\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"d\", \"n\", \"f\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"f\", \"n\", \"f\", \"f\", \"f\", \"n\", \"f13\", \"n\", \"n\", \"n\", \"d15\", \"n\", \"d\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"d\", \"n\", \"f\", \"n\", \"f4\", \"n\", \"n\", \"f45\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"n\", \"f\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"d16\", \"d\", \"d25\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"d\", \"d\", \"d\", \"d\", \"d\", \"f46\", \"n\", \"f\", \"f\", \"f\", \"f\", \"n\", \"n\", \"n\", \"f\", \"n\", \"n\", \"f\", \"n\", \"f27\", \"f\", \"f\", \"n\", \"n\", \"n\", \"d\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"d4\", \"n\", \"n\", \"f\", \"n\", \"n\", \"n\", \"n\", \"f41\", \"n\", \"n\", \"n\", \"n\", \"n\", \"f99\", \"f98\", \"n\", \"n\", \"n\", \"f\", \"n\", \"f14\", \"f\", \"d\", \"d\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"d5\", \"d\", \"d\", \"d\", \"d\", \"f28\", \"f\", \"f\", \"f6\", \"n\", \"f\", \"n\", \"f\", \"f\", \"f1\", \"n\", \"f97\", \"f96\", \"n\", \"n\", \"n\", \"f43\", \"n\", \"n\", \"f\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"f\", \"n\", \"f\", \"n\", \"n\", \"f\", \"n\", \"f\", \"n\", \"s\", \"n\", \"n\", \"n\", \"n\", \"f\", \"f\", \"f\", \"f15\", \"n\", \"f\", \"n\", \"d\", \"n\", \"d11\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"f\", \"n\", \"f45\", \"n\", \"f5\", \"f\", \"f\", \"f26\", \"n\", \"f2\", \"n\", \"f\", \"f3\", \"n\", \"f\", \"n\", \"n\", \"n\", \"n\", \"f46\", \"d\", \"d\", \"d\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"d27\", \"n\", \"n\", \"d\", \"d\", \"f\", \"n\", \"f\", \"n\", \"n\", \"n\", \"n\", \"f\", \"f\", \"f\", \"f\", \"f\", \"n\", \"n\", \"f\", \"n\", \"f26\", \"f\", \"f\", \"f\", \"d\", \"d19\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"h1\", \"h\", \"d19\", \"d\", \"d\", \"n\", \"n\", \"n\", \"f\", \"n\", \"n\", \"n\", \"n\", \"n\", \"f\", \"n\", \"n\", \"f\", \"n\", \"n\", \"f\", \"n\", \"f\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"f\", \"f\", \"f\", \"f\", \"f\", \"n\", \"n\", \"f\", \"n\", \"n\", \"f\", \"n\", \"f16\", \"f\", \"f45\", \"f\", \"f25\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d19\", \"n\", \"n\", \"f46\", \"n\", \"n\", \"n\", \"f30\", \"n\", \"n\", \"f\", \"f\", \"f\", \"f35\", \"n\", \"n\", \"f\", \"n\", \"n\", \"f\", \"n\", \"n\", \"d\", \"d\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"f\", \"n\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"n\", \"n\", \"f\", \"n\", \"n\", \"f\", \"n\", \"n\", \"f\", \"n\", \"n\", \"n\", \"n\", \"d3\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"d\", \"d\", \"f\", \"f\", \"n\", \"f38\", \"n\", \"n\", \"n\", \"n\", \"f23\", \"n\", \"n\", \"f\", \"f\", \"f\", \"f\", \"f17\", \"n\", \"f\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"d2\", \"n\", \"n\", \"n\", \"f24\", \"n\", \"f\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"f42\", \"n\", \"n\", \"n\", \"n\", \"n\", \"f\", \"n\", \"n\", \"d17\", \"d\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"f\", \"f\", \"f\", \"f45\", \"f\", \"f\", \"f20\", \"n\", \"f\", \"n\", \"f18\", \"f\", \"f\", \"f\", \"f\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"f33\", \"f\", \"f\", \"n\", \"f22\", \"n\", \"n\", \"f\", \"n\", \"n\", \"f\", \"n\", \"n\", \"f\", \"n\", \"n\", \"f37\", \"f\", \"f32\", \"d\", \"d\", \"d20\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"d\", \"d\", \"d\", \"d\", \"f\", \"d\", \"n\", \"n\", \"n\", \"n\", \"f21\", \"n\", \"f\", \"f\", \"n\", \"n\", \"f19\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"f34\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"d\", \"n\", \"n\", \"q\", \"q\", \"q\", \"q\", \"q\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"d14\", \"n\", \"n\", \"d24\", \"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"n\", \"n\", \"n\", \"n\", \"d\", \"d\", \"d\", \"n\", \"q\", \"n\", \"q\", \"n\", \"n\", \"q\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d18\", \"d\", \"d\", \"d\", \"d\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"d\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"q\", \"q\", \"q\", \"q\", \"n\", \"q\", \"n\", \"q\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d8\", \"d\", \"d\", \"d\", \"n\", \"d\", \"d28\", \"d\", \"d\", \"d\", \"d\", \"d23\", \"n\", \"q\", \"q\", \"n\", \"n\", \"q\", \"q\", \"q\", \"n\", \"q\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d13\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d\", \"n\", \"n\", \"q\", \"q\", \"q\", \"q\", \"n\", \"q\", \"n\", \"q\", \"n\", \"q\", \"n\", \"q\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"d10\", \"n\", \"q\", \"q\", \"n\", \"q\", \"n\", \"n\", \"q\", \"n\", \"q\", \"q\", \"q\", \"n\", \"q\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"q\", \"n\", \"q\", \"q\", \"n\", \"q\", \"n\", \"n\", \"n\", \"q\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"q\", \"q\", \"q\", \"n\", \"n\", \"n\", \"n\", \"q\", \"n\", \"n\", \"n\", \"q\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"q\", \"n\", \"q\", \"q\", \"q\", \"q\", \"q\", \"q\", \"q\", \"q\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"q\", \"n\", \"q\", \"n\", \"n\", \"q\", \"n\", \"n\", \"n\", \"q\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"q\", \"n\", \"q\", \"n\", \"n\", \"q\", \"n\", \"n\", \"n\", \"q\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"q\", \"q\", \"q\", \"q\", \"q\", \"q\", \"q\", \"q\", \"q\", \"q\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"], \n            [\"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"]\n    ],\n\n    // ---------------------------------- FOREST ------------------------------------ \\\\\n    // ----- ------ -------- \\\\\n    // notes: little girl, rude kid, lost teenager, simple sword, damaged helm\n    s: {\n        entrance: \"Green grass unfolds like a blanket in all directions. As far as can be seen, the view is fairly\" +\n        \" unchanging - vibrant leafage darkened by a lack of light caused by the sheltering of arborous towers above.\" +\n        \" Medum-sized bushes and thickets prevent a clear view in any particular direction, however to the north-east,\" +\n        \" some very faint echoes of water splashing can be heard.\",\n        colour: \"#0b6d00\",\n\n        extraOptions: [[\"Approach person being attacked by slime\", [\"flag: -f1_spoken_to_tutorial_man\"]]],\n        music: \"forest\",\n    \n        explores: standardForest.explores,\n        encounters: standardForest.encounters,\n        finds: standardForest.finds,\n        ambushes: [],\n        interacts: [[\"f1_tutorial_man\", [\"flag: -f1_spoken_to_tutorial_man\"]]],\n        onEnter: []\n    },\n\n    f: {\n        entrance: \"The forest remains unchanging for a large distance. It is easy to travel if one avoids the occasional\" +\n        \" bushy path.\",\n        colour: \"#0b6d00\",\n\n        extraOptions: [],\n        music: \"forest\",\n        \n        explores: standardForest.explores,\n        encounters: standardForest.encounters,\n        finds: standardForest.finds,\n        ambushes: standardForest.ambushes,\n        interacts: standardForest.interacts,\n        onEnter: standardForest.onEnter,\n\n        specialRooms: {\n            1: {\n                extraOptions: [[\"Speak to little girl\", []]],\n                interacts: [[\"f1_little_girl\", []]],\n            },\n            2: {\n                extraOptions: [[\"Speak to rude-looking kid\", [\"flag: -f1_spoken_to_rude_kid\"]]],\n                interacts: [[\"f1_rude_kid\", [\"flag: -f1_spoken_to_rude_kid\"]]],\n            },\n            3: {\n                extraOptions: [[\"Speak to lost looking teenager\", [\"flag: -f1_spoken_to_lost_teenager\"]]],\n                interacts: [[\"f1_lost_teenager\", [\"flag: -f1_spoken_to_lost_teenager\"]]],\n            },\n            4: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_simple_sword\"]]],\n                interacts: [[\"f1_simple_sword_on_floor\", [\"flag: -f1_picked_up_simple_sword\"]]],\n            },\n            5: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_damaged_helm\"]]],\n                interacts: [[\"f1_damaged_helm_on_floor\", [\"flag: -f1_picked_up_damaged_helm\"]]],\n            },\n            6: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_metal_stave\"]]],\n                interacts: [[\"f1_metal_stave_on_floor\", [\"flag: -f1_picked_up_metal_stave\"]]],\n            },\n            7: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_silver_axe\"]]],\n                interacts: [[\"f1_silver_axe_on_floor\", [\"flag: -f1_picked_up_silver_axe\"]]],\n            },\n            8: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_simple_dagger\"]]],\n                interacts: [[\"f1_simple_dagger_on_floor\", [\"flag: -f1_picked_up_simple_dagger\"]]],\n            },\n            9: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_pickaxe\"]]],\n                interacts: [[\"f1_pickaxe_on_floor\", [\"flag: -f1_picked_up_pickaxe\"]]],\n            },\n            10: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_brown_pelt\"]]],\n                interacts: [[\"f1_brown_pelt_on_floor\", [\"flag: -f1_picked_up_brown_pelt\"]]],\n            },\n            11: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_silver_helm\"]]],\n                interacts: [[\"f1_silver_helm_on_floor\", [\"flag: -f1_picked_up_silver_helm\"]]],\n            },\n            12: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_venomous_claw\"]]],\n                interacts: [[\"f1_venomous_claw_on_floor\", [\"flag: -f1_picked_up_venomous_claw\"]]],\n            },\n            13: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_vine_helmet\"]]],\n                interacts: [[\"f1_vine_helmet_on_floor\", [\"flag: -f1_picked_up_vine_helmet\"]]],\n            },\n            14: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_ninja_headcloak\"]]],\n                interacts: [[\"f1_ninja_headcloak_on_floor\", [\"flag: -f1_picked_up_ninja_headcloak\"]]],\n            },\n            15: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_makeshift_steel_armour\"]]],\n                interacts: [[\"f1_makeshift_steel_armour_on_floor\", [\"flag: -f1_picked_up_makeshift_steel_armour\"]]],\n            },\n            16: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_earthen_shield_potion\"]]],\n                interacts: [[\"f1_earthen_shield_potion_on_floor\", [\"flag: -f1_picked_up_earthen_shield_potion\"]]],\n            },\n            17: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_vine_pantaloons\"]]],\n                interacts: [[\"f1_vine_pantaloons_on_floor\", [\"flag: -f1_picked_up_vine_pantaloons\"]]],\n            },\n            18: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_silver_legwear\"]]],\n                interacts: [[\"f1_silver_legwear_on_floor\", [\"flag: -f1_picked_up_silver_legwear\"]]],\n            },\n            19: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_slime_ball\"]]],\n                interacts: [[\"f1_slime_ball_on_floor\", [\"flag: -f1_picked_up_slime_ball\"]]],\n            },\n            20: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_weak_vine\"]]],\n                interacts: [[\"f1_weak_vine_on_floor\", [\"flag: -f1_picked_up_weak_vine\"]]],\n            },\n            21: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_hempweed_ligament\"]]],\n                interacts: [[\"f1_hempweed_ligament_on_floor\", [\"flag: -f1_picked_up_hempweed_ligament\"]]],\n            },\n            22: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_wood\"]]],\n                interacts: [[\"f1_wood_on_floor\", [\"flag: -f1_picked_up_wood\"]]],\n            },\n            23: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_steel\"]]],\n                interacts: [[\"f1_steel_on_floor\", [\"flag: -f1_picked_up_steel\"]]],\n            },\n            24: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_health_potion\"]]],\n                interacts: [[\"f1_health_potion_on_floor\", [\"flag: -f1_picked_up_health_potion\"]]],\n            },\n            25: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_greater_health_potion\"]]],\n                interacts: [[\"f1_greater_health_potion_on_floor\", [\"flag: -f1_picked_up_greater_health_potion\"]]],\n            },\n            26: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_mana_potion\"]]],\n                interacts: [[\"f1_mana_potion_on_floor\", [\"flag: -f1_picked_up_mana_potion\"]]],\n            },\n            27: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_greater_mana_potion\"]]],\n                interacts: [[\"f1_greater_mana_potion_on_floor\", [\"flag: -f1_picked_up_greater_mana_potion\"]]],\n            },\n            28: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_crafted_health_potion\"]]],\n                interacts: [[\"f1_crafted_health_potion_on_floor\", [\"flag: -f1_picked_up_crafted_health_potion\"]]],\n            },\n            29: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_forest_explorer_daggers\"]]],\n                interacts: [[\"f1_forest_explorer_daggers_on_floor\", [\"flag: -f1_picked_up_forest_explorer_daggers\"]]],\n            },\n            30: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_forest_explorer_cap\"]]],\n                interacts: [[\"f1_forest_explorer_cap_on_floor\", [\"flag: -f1_picked_up_forest_explorer_cap\"]]],\n            },\n            31: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_forest_explorer_armour\"]]],\n                interacts: [[\"f1_forest_explorer_armour_on_floor\", [\"flag: -f1_picked_up_forest_explorer_armour\"]]],\n            },\n            32: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_forest_explorer_pants\"]]],\n                interacts: [[\"f1_forest_explorer_pants_on_floor\", [\"flag: -f1_picked_up_forest_explorer_pants\"]]],\n            },\n            33: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_forest_explorer_pendant\"]]],\n                interacts: [[\"f1_forest_explorer_pendant_on_floor\", [\"flag: -f1_picked_up_forest_explorer_pendant\"]]],\n            },\n            34: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_forest_explorer_charm\"]]],\n                interacts: [[\"f1_forest_explorer_charm_on_floor\", [\"flag: -f1_picked_up_forest_explorer_charm\"]]],\n            },\n            35: {\n                extraOptions: [[\"Speak to travelling hermit\", [\"flag: -f1_spoken_to_hermit\"]]],\n                interacts: [[\"f1_travelling_hermit\", [\"flag: -f1_spoken_to_hermit\"]]],\n            },\n            36: {\n                extraOptions: [[\"Speak to lost-looking person\", [\"flag: -f1_spoken_to_person_looking_for_settlement\"]]],\n                interacts: [[\"f1_person_looking_for_settlement\", [\"flag: -f1_spoken_to_person_looking_for_settlement\"]]],\n            },\n            37: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_taken_crafted_sword\"]]],\n                interacts: [[\"f1_owned_crafted_sword\", [\"flag: -f1_taken_crafted_sword\"]]],\n            },\n            38: {\n                extraOptions: [[\"Speak to explorer woman\", []]],\n                interacts: [[\"f1_explorer_woman\", []]],\n            },\n            // TBA 39 - Person who gives custom TP stone\n            40: {\n                extraOptions: [[\"Check out person in the distance\", []]],\n                interacts: [[\"f1_person_on_toilet\", []]],\n            },\n\n            41: {\n                extraOptions: [[\"Check out sign\", []]],\n                interacts: [[\"f1_forest_settlement_sign_east\", []]],\n            },\n\n            42: {\n                extraOptions: [[\"Check out sign\", []]],\n                interacts: [[\"f1_forest_settlement_sign_north\", []]],\n            },\n\n            43: {\n                extraOptions: [[\"Check out sign\", []]],\n                interacts: [[\"f1_forest_settlement_sign_west\", []]],\n            },\n\n            44: {\n                extraOptions: [[\"Check out sign\", []]],\n                interacts: [[\"f1_forest_settlement_sign_south\", []]],\n            },\n\n            45: {\n                extraOptions: [[\"Check out peculiar tree\", []]],\n                interacts: [[\"f1_lesser_treant\", []]],\n            },\n\n            46: {\n                extraOptions: [[\"Check out peculiar tree\", []]],\n                interacts: [[\"f1_treant\", []]],\n            },\n\n            47: {\n                extraOptions: [[\"Check out peculiar tree\", []]],\n                interacts: [[\"f1_lesser_ent\", []]],\n            },\n\n            // forest settlement\n            99: {\n                desc: \"Some kind of a settlement in a clearing surrounded by what almost feels like a protective barrier of\" +\n                \" trees. Green tents and other small structures blend well into the surroundings and grant the area a camp-like\" +\n                \", homely feel. A few people are moving about or stationary doing their own thing in near silence.\",\n                extraOptions: [[\"Speak to alchemist lady\", []]],\n                interacts: [[\"f1_alchemist_woman\", []]],\n                explores: [[\"find\", 100]],\n                encounters: [],\n                finds: [[\"trash\", 100, 1, 1]],\n                ambushes: [[]],\n            },\n            98: {\n                desc: \"Some kind of a settlement in a clearing surrounded by what almost feels like a protective barrier of\" +\n                \" trees. Green tents and other small structures blend well into the surroundings and grant the area a camp-like\" +\n                \", homely feel. A few people are moving about or stationary doing their own thing in near silence.\",\n                extraOptions: [[\"Speak to craftsman\", []]],\n                interacts: [[\"f1_forest_craftsman\", []]],\n                explores: [[\"find\", 100]],\n                encounters: [],\n                finds: [[\"trash\", 100, 1, 1]],\n                ambushes: [[]],\n            },\n            97: {\n                desc: \"Some kind of a settlement in a clearing surrounded by what almost feels like a protective barrier of\" +\n                \" trees. Green tents and other small structures blend well into the surroundings and grant the area a camp-like\" +\n                \", homely feel. A few people are moving about or stationary doing their own thing in near silence.\",\n                extraOptions: [[\"Speak to teenage cleric\", []]],\n                interacts: [[\"f1_forest_cleric\", []]],\n                explores: [[\"find\", 100]],\n                encounters: [],\n                finds: [[\"trash\", 100, 1, 1]],\n                ambushes: [[]],\n            },\n            96: {\n                desc: \"Some kind of a settlement in a clearing surrounded by what almost feels like a protective barrier of\" +\n                \" trees. Green tents and other small structures blend well into the surroundings and grant the area a camp-like\" +\n                \", homely feel. A few people are moving about or stationary doing their own thing in near silence.\",\n                extraOptions: [[\"Speak to ninja\", []]],\n                interacts: [[\"f1_ninja_trainer\", []]],\n                explores: [[\"find\", 100]],\n                encounters: [],\n                finds: [[\"trash\", 100, 1, 1]],\n                ambushes: [[]],\n            },\n            \n        }\n    },\n    \n\n    // ---------------------------------- DEEP FOREST ------------------------------------ \\\\\n    // ---------------------------------- DEEP FOREST ------------------------------------ \\\\\n    // notes: wanderer statue, alchemist lady, traveller woman, wolf area, wolf man in wolf area\n\n    d: {\n        entrance: \"The grass is clearly a shade or two darker than where you began. There is still a relaxing atmosphere\" +\n        \", albeit more... dangerous.\",\n        colour: \"#cc9900\",\n        \n        extraOptions: [],\n        music: \"forest\",\n\n        explores: standardDeepForest.explores,\n        encounters: standardDeepForest.encounters,\n        finds: standardDeepForest.finds,\n        ambushes: standardDeepForest.ambushes,\n        interacts: standardDeepForest.interacts,\n        onEnter: standardDeepForest.onEnter,\n\n        specialRooms: {\n            1: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_crafted_mana_potion_2\"]]],\n                interacts: [[\"f1_crafted_mana_potion_on_floor_2\", [\"flag: -f1_picked_up_crafted_mana_potion_2\"]]],\n            },\n            2: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_greater_health_potion_2\"]]],\n                interacts: [[\"f1_greater_health_potion_on_floor_2\", [\"flag: -f1_picked_up_greater_health_potion_2\"]]],\n            },\n            3: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_greater_mana_potion_2\"]]],\n                interacts: [[\"f1_greater_mana_potion_on_floor_2\", [\"flag: -f1_picked_up_greater_mana_potion_2\"]]],\n            },\n            4: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_hempweed_ligament_2\"]]],\n                interacts: [[\"f1_hempweed_ligament_on_floor_2\", [\"flag: -f1_picked_up_hempweed_ligament_2\"]]],\n            },\n            5: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_makeshift_steel_legwear\"]]],\n                interacts: [[\"f1_makeshift_steel_legwear_on_floor\", [\"flag: -f1_picked_up_makeshift_steel_legwear\"]]],\n            },\n            6: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_runic_dagger\"]]],\n                interacts: [[\"f1_runic_dagger_on_floor\", [\"flag: -f1_picked_up_runic_dagger\"]]],\n            },\n            7: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_scythe\"]]],\n                interacts: [[\"f1_deep_forest_explorer_scythe_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_scythe\"]]],\n            },\n            8: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_cap\"]]],\n                interacts: [[\"f1_deep_forest_explorer_cap_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_cap\"]]],\n            },\n            9: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_armour\"]]],\n                interacts: [[\"f1_deep_forest_explorer_armour_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_armour\"]]],\n            },\n            10: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_pants\"]]],\n                interacts: [[\"f1_deep_forest_explorer_pants_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_pants\"]]],\n            },\n            11: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_necklace\"]]],\n                interacts: [[\"f1_deep_forest_explorer_necklace_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_necklace\"]]],\n            },\n            12: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_bracelet\"]]],\n                interacts: [[\"f1_deep_forest_explorer_bracelet_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_bracelet\"]]],\n            },\n            13: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_forest_scourge_scale\"]]],\n                interacts: [[\"f1_forest_scourge_scale_on_floor\", [\"flag: -f1_picked_up_forest_scourge_scale\"]]],\n            },\n            14: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_venomous_claw_2\"]]],\n                interacts: [[\"f1_venomous_claw_on_floor_2\", [\"flag: -f1_picked_up_venomous_claw_2\"]]],\n            },\n            15: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_magic_bark\"]]],\n                interacts: [[\"f1_magic_bark_on_floor\", [\"flag: -f1_picked_up_magic_bark\"]]],\n            },\n            16: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_sharp_claw_2\"]]],\n                interacts: [[\"f1_sharp_claw_on_floor_2\", [\"flag: -f1_picked_up_sharp_claw_2\"]]],\n            },\n            17: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_ailwarder_charm\"]]],\n                interacts: [[\"f1_ailwarder_charm_on_floor\", [\"flag: -f1_picked_up_ailwarder_charm\"]]],\n            },\n            18: {\n\n                entrance: \"The grass is clearly a shade or two darker than where you began. There is still a relaxing atmosphere\" +\n                \", albeit more... dangerous. In this area, you can feel something strange - a powerful force that beckons you.\",\n\n                extraOptions: [[\"Heed beckoning force\", [\"flag: -f1_found_guarded_earthen_manasoul\"]]],\n                interacts: [[\"f1_guarded_earthen_manasoul\", [\"flag: -f1_found_guarded_earthen_manasoul\"]]],\n            },\n            19: {\n                extraOptions: [[\"Check out peculiar tree\", []]],\n                interacts: [[\"f1_treant\", []]],\n            },\n            20: {\n                extraOptions: [[\"Check out peculiar tree\", []]],\n                interacts: [[\"f1_lesser_ent\", []]],\n            },\n            21: {\n                extraOptions: [[\"Speak to worried girl\", [\"flag: -f1_helped_person_looking_for_cat\"]]],\n                interacts: [[\"f1_person_looking_for_cat\", [\"flag: -f1_helped_person_looking_for_cat\"]]],\n            },\n            22: {\n                extraOptions: [[\"Interact with cat\", [\"flag: -f1_found_bellas_cat\"]]],\n                interacts: [[\"f1_bellas_cat\", [\"flag: -f1_found_bellas_cat\"]]]\n            },\n            23: {\n                extraOptions: [[\"Speak to strangely-clothed girl\", []]],\n                interacts: [[\"f1_chuuni\", []]],\n            },\n            24: {\n                extraOptions: [[\"Pick up gold on the floor\", [\"flag: -f1_picked_up_gold_1\"]]],\n                interacts: [[\"f1_gold_on_floor\", [\"flag: -f1_picked_up_gold_1\"]]],\n            },\n            25: {\n                extraOptions: [[\"Pick up gold on the floor\", [\"flag: -f1_picked_up_gold_2\"]]],\n                interacts: [[\"f1_gold_on_floor_2\", [\"flag: -f1_picked_up_gold_2\"]]],\n            },\n            26: {\n                extraOptions: [[\"Pick up gold on the floor\", [\"flag: -f1_picked_up_gold_3\"]]],\n                interacts: [[\"f1_gold_on_floor_3\", [\"flag: -f1_picked_up_gold_3\"]]],\n            },\n            27: {\n                extraOptions: [[\"Inspect statue\", []]],\n                interacts: [[\"f1_wanderer_statue\", []]],\n            },\n            28: {\n                extraOptions: [[\"Speak to merchant\", []]],\n                interacts: [[\"f1_forest_merchant\", []]],\n            }\n            \n        }\n    },\n\n    // ---------------------------------- RIVER ------------------------------------ \\\\\n    // ---------------------------------- RIVER ------------------------------------ \\\\\n    // notes: hydra staff, docile slime, old man\n\n    r: {\n        entrance: \"A thin river runs with numerous tributaries flowing out in all directions, such that no matter where you\" +\n        \" go, the river seems to follow. The grass is very short compared to the forest and it is much easier to see where\" +\n        \" you're going.\",\n        colour: \"#0018a8\",\n        \n        extraOptions: [],\n    \n        explores: standardRiver.explores,\n        encounters: standardRiver.encounters,\n        finds: standardRiver.finds,\n        ambushes: standardRiver.ambushes,\n        interacts: standardRiver.interacts,\n        onEnter: standardRiver.onEnter\n    },\n\n\n    // ---------------------------------- DARK FOREST ------------------------------------ \\\\\n    // ---------------------------------- DARK FOREST ------------------------------------ \\\\\n    // notes: little boy, lost person, crown of darkness on floor\n\n    q: {\n        entrance: \"The trees are taller and brimming with leaves, although their black-purple hue makes them seem as though\" +\n        \" they are dead and rotton. The grass beneath your feet is crusty and uncomfortable to walk on. There is a dead silence\" +\n        \" that makes even taking a step an uncomfortable endeavour as the leafage crinkles below your feet.\",\n        colour: \"#ff9900\",\n        \n        extraOptions: [],\n    \n        explores: standardDarkforest.explores,\n        encounters: standardDarkforest.encounters,\n        finds: standardDarkforest.finds,\n        ambushes: standardDarkforest.ambushes,\n        interacts: standardDarkforest.interacts,\n        onEnter: standardDarkforest.onEnter,\n\n        specialRooms: {\n            1: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_crafted_mana_potion_2\"]]],\n                interacts: [[\"f1_crafted_mana_potion_on_floor_2\", [\"flag: -f1_picked_up_crafted_mana_potion_2\"]]],\n            },\n            2: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_greater_health_potion_2\"]]],\n                interacts: [[\"f1_greater_health_potion_on_floor_2\", [\"flag: -f1_picked_up_greater_health_potion_2\"]]],\n            },\n            3: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_greater_mana_potion_2\"]]],\n                interacts: [[\"f1_greater_mana_potion_on_floor_2\", [\"flag: -f1_picked_up_greater_mana_potion_2\"]]],\n            },\n            4: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_hempweed_ligament_2\"]]],\n                interacts: [[\"f1_hempweed_ligament_on_floor_2\", [\"flag: -f1_picked_up_hempweed_ligament_2\"]]],\n            },\n            5: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_makeshift_steel_legwear\"]]],\n                interacts: [[\"f1_makeshift_steel_legwear_on_floor\", [\"flag: -f1_picked_up_makeshift_steel_legwear\"]]],\n            },\n            6: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_runic_dagger\"]]],\n                interacts: [[\"f1_runic_dagger_on_floor\", [\"flag: -f1_picked_up_runic_dagger\"]]],\n            },\n            7: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_scythe\"]]],\n                interacts: [[\"f1_deep_forest_explorer_scythe_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_scythe\"]]],\n            },\n            8: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_cap\"]]],\n                interacts: [[\"f1_deep_forest_explorer_cap_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_cap\"]]],\n            },\n            9: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_armour\"]]],\n                interacts: [[\"f1_deep_forest_explorer_armour_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_armour\"]]],\n            },\n            10: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_pants\"]]],\n                interacts: [[\"f1_deep_forest_explorer_pants_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_pants\"]]],\n            },\n            11: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_necklace\"]]],\n                interacts: [[\"f1_deep_forest_explorer_necklace_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_necklace\"]]],\n            },\n            12: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_deep_forest_explorer_bracelet\"]]],\n                interacts: [[\"f1_deep_forest_explorer_bracelet_on_floor\", [\"flag: -f1_picked_up_deep_forest_explorer_bracelet\"]]],\n            },\n            13: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_forest_scourge_scale\"]]],\n                interacts: [[\"f1_forest_scourge_scale_on_floor\", [\"flag: -f1_picked_up_forest_scourge_scale\"]]],\n            },\n            14: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_venomous_claw_2\"]]],\n                interacts: [[\"f1_venomous_claw_on_floor_2\", [\"flag: -f1_picked_up_venomous_claw_2\"]]],\n            },\n            15: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_magic_bark\"]]],\n                interacts: [[\"f1_magic_bark_on_floor\", [\"flag: -f1_picked_up_magic_bark\"]]],\n            },\n            16: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_sharp_claw_2\"]]],\n                interacts: [[\"f1_sharp_claw_on_floor_2\", [\"flag: -f1_picked_up_sharp_claw_2\"]]],\n            },\n            17: {\n                extraOptions: [[\"Check out interesting item on floor\", [\"flag: -f1_picked_up_ailwarder_charm\"]]],\n                interacts: [[\"f1_ailwarder_charm_on_floor\", [\"flag: -f1_picked_up_ailwarder_charm\"]]],\n            },\n            18: {\n\n                entrance: \"The trees are taller and brimming with leaves, although their black-purple hue makes them seem as though\" +\n                \" they are dead and rotton. The grass beneath your feet is crusty and uncomfortable to walk on. There is a dead silence\" +\n                \" that makes even taking a step an uncomfortable endeavour as the leafage crinkles below your feet. In this area, you can feel something strange - a powerful force that beckons you.\",\n\n                extraOptions: [[\"Heed beckoning force\", [\"flag: -f1_found_guarded_earthen_manasoul\"]]],\n                interacts: [[\"f1_guarded_earthen_manasoul\", [\"flag: -f1_found_guarded_earthen_manasoul\"]]],\n            },\n            19: {\n\n            }\n        }\n    },\n\n    // ---------------------------------- ORA'S HUT ------------------------------------ \\\\\n    // ---------------------------------- ORA'S HUT ------------------------------------ \\\\\n\n    h: {\n        entrance: 'There are a few torches about, and probably some kind of warding magic since you cannot see nor hear any creatures nearby. Just ahead is a small wooden hut, enterable via a single door of a lighter shade of brown. It seems unlocked.',\n\n        colour: \"#996633\",\n        music: \"forest\",\n        \n        extraOptions: [],\n    \n        explores: [],\n        encounters: [],\n        finds: [],\n        ambushes: [],\n        interacts: [],\n        onEnter: [],\n\n        specialRooms: {\n            1: {\n                entrance: 'Inside the hut, there is a singular room. For one room, it is fairly spacious, but it still makes for a pretty small house. The walls are made of singular logs, and join quite nicely to the similarly crafted triangular ceiling. In one corner there is a decent-sized bed designed to fit one person. Sitting at a desk reading a book is a man in clothes reminiscent of plain-looking tropical wear. The area is dimly lit, but it is still easy to see.',\n\n                extraOptions: [[\"Speak to man at the desk\", []]],\n                interacts: [[\"f1_ora\", []]]\n            }\n        }\n\n    },\n\n    // ---------------------------------- SETTLEMENT ------------------------------------ \\\\\n    // ---------------------------------- SETTLEMENT ------------------------------------ \\\\\n    // note: misc shop, craftswoman, hunter lady, worried woman, weapons shop, armour shop, casual-looking man\n\n    z: {\n        entrance:`Most of the semblance of 'forest' has been cleared out of this area. Shops line the far left and small residential buildings the far right. Between them is a very beaten-down forest path, worn in to the extent that its verdant origins are unrecognisable.`,\n        colour: \"#cc00ff\",\n        music: \"forest\",\n        \n        extraOptions: [],\n    \n        explores: standardSettlement.explores,\n        encounters: standardSettlement.encounters,\n        finds: standardSettlement.finds,\n        ambushes: standardSettlement.ambushes,\n        onEnter: standardSettlement.onEnter,\n        interacts: [],\n\n        specialRooms: {\n            1: {\n                onEnter: [['f1_thanks_for_playing', ['flag: -thanks_for_playing']]]\n            }\n        }\n    \n    },\n\n}\n\n//# sourceURL=webpack:///./src/directories/zones/floor1.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! exports provided: mainLoop, endTutorial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mainLoop\", function() { return mainLoop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"endTutorial\", function() { return endTutorial; });\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _models_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models/data */ \"./src/js/models/data.js\");\n/* harmony import */ var _views_statView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./views/statView */ \"./src/js/views/statView.js\");\n/* harmony import */ var _views_miscView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./views/miscView */ \"./src/js/views/miscView.js\");\n/* harmony import */ var _models_enemies__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./models/enemies */ \"./src/js/models/enemies.js\");\n/* harmony import */ var _models_combat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./models/combat */ \"./src/js/models/combat.js\");\n/* harmony import */ var _views_baseView__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./views/baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _models_learnSkills__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./models/learnSkills */ \"./src/js/models/learnSkills.js\");\n/* harmony import */ var _models_rooms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./models/rooms */ \"./src/js/models/rooms.js\");\n/* harmony import */ var _models_shops__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./models/shops */ \"./src/js/models/shops.js\");\n/* harmony import */ var _models_crafting__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./models/crafting */ \"./src/js/models/crafting.js\");\n/* harmony import */ var _models_settings__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./models/settings */ \"./src/js/models/settings.js\");\n/* harmony import */ var _models_baseModel__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./models/baseModel */ \"./src/js/models/baseModel.js\");\n/* harmony import */ var _models_items__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./models/items */ \"./src/js/models/items.js\");\n/* harmony import */ var _models_initMenu__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./models/initMenu */ \"./src/js/models/initMenu.js\");\n/* harmony import */ var _models_music__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./models/music */ \"./src/js/models/music.js\");\n/* harmony import */ var _models_helpModule__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./models/helpModule */ \"./src/js/models/helpModule.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n // so that the stuff works\n\nconst defaultModels = { // I am really unhappy with this solution so I might change it later\n    data: undefined,\n    disciplines: undefined,\n    flags: undefined,\n    settings: undefined\n}\n\nconst gameSanitation = (afterSanitation) => {\n    const player = _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"];\n    //console.log(\"logging default models\");\n    //console.log(defaultModels);\n    //console.log(player);\n    //console.log(gameData.data.version);\n\n    if (player.version < 0.17) {\n        localStorage.clear();\n        location.reload();\n    };\n    \n    if (player.version < 0.18) {\n        const playerMaps = player.player.maps;\n        const newMaps = Object(_models_baseModel__WEBPACK_IMPORTED_MODULE_12__[\"copy\"])(defaultModels.data.player.maps);\n        Object.keys(playerMaps).forEach(map => {\n            const plrmap = playerMaps[map];\n            const newmap = newMaps[map];\n            for (var i=0; i<plrmap.length; i++) {\n                for (var j=0; j<plrmap.length; j++) {\n                    newmap[i][j] = plrmap[i][j];\n                }\n            }\n            //console.log(\"map changed\");\n            //console.log(plrmap);\n            //console.log(newmap);\n        });\n        player.player.maps = newMaps;\n    }\n\n    if (player.version < defaultModels.data.version) {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br><b>The game has updated since you last played. Please check the discord server for the update logs.</b> (Input 'sc-discord' for an invite link)`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>You last played on V<b>${player.version}</b>`);\n        player.version = defaultModels.data.version;\n        Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"saveGame\"])();\n    };\n\n    if (player.special.doingTutorial == true) {\n        _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].autoSave = false;\n\n        // ENDING THE TUTORIAL\n        if (player.special.clearedTutorial == true) {\n            player.special.doingTutorial = false;\n            const temp = Object(_models_baseModel__WEBPACK_IMPORTED_MODULE_12__[\"copy\"])(_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].special);\n            Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"loadPlayer\"])(defaultModels.data, \"object\");\n            Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"loadDisciplines\"])(defaultModels.disciplines, \"object\");\n            Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"loadFlags\"])(defaultModels.flags, \"object\");\n            //loadSettings(defaultModels.settings, \"object\");\n            _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].special = temp;\n            _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].presents.push([\"gold\", 300]);\n            if (_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].special.clearedTutorialTrue == true) {\n                _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].presents.push([\"item\", \"lores_legacy\", 1]);\n            };\n            _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.name = temp.dataCache.name;\n            mainLoop();\n        } else {\n            afterSanitation();\n        }\n    } else {\n        afterSanitation();\n    }\n\n\n}\n\nconst mainLoop = () => { // this has to be exported so that combat can use it when the player loses\n    _models_music__WEBPACK_IMPORTED_MODULE_15__[\"musicHandler\"].playMusic(\"lobby\");\n    _models_combat__WEBPACK_IMPORTED_MODULE_5__[\"Combat\"].heal(_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.stats);\n    _models_baseModel__WEBPACK_IMPORTED_MODULE_12__[\"updateDisplayMode\"].mode = \"normal\";\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"separator\"]}You are currently on floor ${_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].current_floor}`);\n\n    var plr = {..._models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player};\n    plr.stats = _models_combat__WEBPACK_IMPORTED_MODULE_5__[\"Combat\"].getPlayerAdd(plr.stats);\n    _views_statView__WEBPACK_IMPORTED_MODULE_2__[\"updateStats\"](plr);\n    _views_miscView__WEBPACK_IMPORTED_MODULE_3__[\"updatePlayerStats\"](_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player);\n\n    // resetting player's position cache\n    const exploreCache = _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.exploreCache;\n    exploreCache.zone = undefined;\n    exploreCache.coordinates = [];\n\n    // unloading presents box\n    const presents = _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].presents;\n    //console.log(presents);\n    if (presents.length > 0) {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>You have some presents!\");\n        //console.log(presents.length);\n        //console.log(presents.length > 0);\n        while (presents.length > 0) {\n            const currentPresent = presents[0];\n            //console.log(\"logging current present\");\n            //console.log(currentPresent);\n            \n            switch (currentPresent[0]) {\n                case \"gold\": {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Received ${currentPresent[1]} gold!`);\n                    _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.gold += currentPresent[1];\n                    break;\n                };\n                case \"item\": {\n                    Object(_models_items__WEBPACK_IMPORTED_MODULE_13__[\"addItem\"])(currentPresent[1], currentPresent[2], currentPresent[2]);\n                    break;\n                };\n                default: {\n                    //console.log(\"Present invalid\");\n                }\n\n            };\n            presents.splice(0, 1);\n        }\n    };\n\n    plr = {..._models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player};\n    plr.stats = _models_combat__WEBPACK_IMPORTED_MODULE_5__[\"Combat\"].getPlayerAdd(plr.stats);\n    _views_statView__WEBPACK_IMPORTED_MODULE_2__[\"updateStats\"](plr);\n    _views_miscView__WEBPACK_IMPORTED_MODULE_3__[\"updatePlayerStats\"](_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player); // replace with updateDisplay?\n\n\n    initMainLoopShortcuts();\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](towerCommands);\n}\n\nconst beginGame = () => {\n\n    defaultModels.data = Object(_models_baseModel__WEBPACK_IMPORTED_MODULE_12__[\"copy\"])(_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"]);\n    defaultModels.disciplines = Object(_models_baseModel__WEBPACK_IMPORTED_MODULE_12__[\"copy\"])(_models_data__WEBPACK_IMPORTED_MODULE_1__[\"disciplines\"]);\n    defaultModels.flags = Object(_models_baseModel__WEBPACK_IMPORTED_MODULE_12__[\"copy\"])(_models_data__WEBPACK_IMPORTED_MODULE_1__[\"flags\"]);\n    defaultModels.settings = Object(_models_baseModel__WEBPACK_IMPORTED_MODULE_12__[\"copy\"])(_models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"]);\n\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputHandler\"]();\n\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\" ---- TOWER RPG -----\");\n    if (localStorage.getItem('save1Player') == undefined) {\n        _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].autoSave = false;\n        setName();\n    } else {\n        Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"loadPlayer\"])('save1');\n        Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"loadSettings\"])('save1');\n        Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"loadFlags\"])('save1');\n        Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"loadDisciplines\"])('save1');\n\n        function afterSanitation() {\n            const settings = JSON.parse(localStorage.getItem('save1Settings'));\n            //console.log(settings);\n            Object(_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"resizeText\"])(\"main\", settings.mainTextSize);\n            Object(_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"resizeText\"])(\"stat\", settings.statsTextSize);\n            Object(_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"resizeText\"])(\"misc\", settings.miscTextSize);\n    \n            Object(_models_items__WEBPACK_IMPORTED_MODULE_13__[\"cleanInventory\"])(); // replace with a proper sanitation function\n            \n            // if the player was last exploring, teleport them; otherwise, put them in mainloop\n            const exploreCache = _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.exploreCache;\n            //console.log(exploreCache);\n            if (_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.exploreCache.zone != undefined) {\n                Object(_models_initMenu__WEBPACK_IMPORTED_MODULE_14__[\"zoneSetUp\"])(exploreCache.zone, [exploreCache.coordinates[0], exploreCache.coordinates[1]], { noAmbush: true })\n            } else {\n                mainLoop();\n            }\n        }\n\n        gameSanitation(afterSanitation);\n    }\n}\n\nconst setName = () => {\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Welcome to Tower RPG. Please input a name.\");\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](setNameResponse);\n}\n\nconst setNameResponse = () => {\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](setName);\n    if ( _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"](false).replace(/\\s/gi, \"\") == \"\")  {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br><b>Please input a name!</b>\");\n        //mainView.getInput(true); // just to clear\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](setNameResponse);\n    } else {\n        const name = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]();\n        //console.log(`NAME IS ${name}`)\n        _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.name = name;\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${name}? That's a nice name!`);\n        introPartOne();\n    }\n}\n\nfunction introPartOne() {\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"tutorialMessages\"].gameIntroPartOne, () => {\n        setInputShortcut();\n    });\n};\n\nconst introPartTwo = () => {\n\n    _views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"tutorialMessages\"].gameIntroPartTwo.forEach(text => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](text);\n    })\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](introPartTwoResponse);\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"](['yes', 'no']);\n    \n};\n\nfunction introPartTwoResponse() {\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](introPartTwoResponse);\n\n    const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n    switch (input) {\n        \n        case \"yes\":\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"]([\"<br>Great! As a side note, this tutorial has a good bit of story text.\", \n            \"<br>If you aren't interested, you can input 'skip' to skip dialogue. This will skip a few lines or until you reach an\"+\n            \" important unskippable line (these are ususally in bold).\",\n            \"<br>Once the demo starts, use <b>input shortcut</b> to see your options. I hope you enjoy Tower RPG!\"], () => {\n\n\n                const data = _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"];\n\n                data.special.dataCache.name = data.player.name;\n\n                data.player.name = \"Lore\";\n                data.max_floor = 0;\n                data.current_floor = 0;\n                data.player.maps = {\n                    floor0: [...Array(46)].map(e => Array(41).fill(undefined))\n                };\n                data.player.gold = 0;\n                data.player.stats.equips = {\n                    weapon: undefined,\n                    head: undefined,\n                    body: \"silver_armour\",\n                    legs: \"silver_legwear\",\n                    misc1: \"tear_of_lucia\",\n                    misc2: undefined\n                };\n                data.unlocked = {\n                    explore: true,\n                    shop: false,\n                    inventory: false,\n                    stats: false,\n                    crafting: false,\n                    settings: false,\n                    ascend: false\n                };\n\n                /*\n                for (var variableKey in gameData.disciplines) {\n                    if (gameData.disciplines.hasOwnProperty(variableKey)){\n                        delete gameData.disciplines[variableKey];\n                    };\n                };\n                */\n\n                const disciplines = _models_data__WEBPACK_IMPORTED_MODULE_1__[\"disciplines\"];\n                Object.keys(disciplines).forEach(disc => {\n                    //console.log(disc);\n                    disciplines[disc].visible = false;\n                    disciplines[disc].unlocked = false;\n                });\n                disciplines.adventurer.skills.forEach(skill => {\n                    if (skill.name == 'boost' || skill.name == 'check') {\n                        skill.unlocked = false;\n                    }\n                    \n                });\n\n                const plrSkills = data.player.stats.skills;\n                plrSkills.splice(plrSkills.indexOf('adventurer-0'), 1);\n                plrSkills.splice(plrSkills.indexOf('adventurer-1'), 1);\n\n                //console.log(gameData.disciplines);\n\n                _models_data__WEBPACK_IMPORTED_MODULE_1__[\"disciplines\"].lore.visible = true;\n                _models_data__WEBPACK_IMPORTED_MODULE_1__[\"disciplines\"].lore.unlocked = true;\n\n                _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].special.doingTutorial = true;\n                _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].special.canToggleAutosave = false;\n\n            \n                Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"saveGame\"])();\n                mainLoop();\n            })\n            break;\n\n        case \"no\":\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Understood. Proceeding to main game...\");\n            Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"saveGame\"])();\n            mainLoop();\n            break;\n\n        default:\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input.\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](introPartTwoResponse);\n            break;\n    }\n}\n\nconst towerCommands = () => {\n\n    _models_music__WEBPACK_IMPORTED_MODULE_15__[\"musicHandler\"].playMusic(\"lobby\");\n\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](towerCommands);\n    const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n    const unlocked = _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].unlocked;\n\n    if ((input.toLowerCase() == 'ascend') && unlocked.ascend) {\n        /*\n        const enemy = enemies[gameData.floors[gameData.data.current_floor].boss];\n        //console.log(enemy.name);\n        Combat.battleProcessing(gameData.data.player, enemy, next_floor);\n        */\n        if (_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].current_floor == 0) {\n            // ending the tutorial if they are on F1\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>This will end the tutorial. You will not be able to return to the tutorial once you leave. Are you sure you would like to exit?\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>If so, then input 'END TUTORIAL' in all caps. Otherwise, input anything else to return.\");\n            const endTutorialResponse = () => {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](endTutorialResponse);\n                const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]();\n                if (input == \"END TUTORIAL\") {\n                    endTutorial();\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Returning...\");\n                    mainLoop();\n                }\n            };\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](endTutorialResponse);\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br><b>Floor boss currently unavailable.</b>\");\n            mainLoop();\n        }\n\n\n    } else if ((input == 'inventory' || input == 'i') && unlocked.inventory) {\n        Object(_models_initMenu__WEBPACK_IMPORTED_MODULE_14__[\"initEquip\"])(mainLoop);\n\n    } else if ((input == 'stats' || input == 'st') && unlocked.stats) {\n        Object(_models_learnSkills__WEBPACK_IMPORTED_MODULE_7__[\"initStats\"])(mainLoop);\n\n    } else if ((input == 'explore' || input == 'e') && unlocked.explore) {\n        const zone = _models_rooms__WEBPACK_IMPORTED_MODULE_8__[\"floorToZone\"][_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].current_floor];\n        Object(_models_initMenu__WEBPACK_IMPORTED_MODULE_14__[\"zoneSetUp\"])(zone);\n\n    } else if ((input == 'shop' || input == 'sh') && unlocked.shop) {\n        const shop = _models_shops__WEBPACK_IMPORTED_MODULE_9__[\"floorToShop\"][_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].current_floor];\n        Object(_models_shops__WEBPACK_IMPORTED_MODULE_9__[\"initShop\"])(shop, mainLoop);\n\n    } else if ((input == \"crafting\" || input == \"c\") && unlocked.crafting) {\n        Object(_models_crafting__WEBPACK_IMPORTED_MODULE_10__[\"initCrafting\"])(mainLoop);\n\n    } else if ((input == \"settings\" || input == \"set\")) {\n        Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"initSettings\"])(mainLoop);\n\n    } else if (input == \"gold\") {\n        initMainLoopShortcuts();\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](towerCommands)\n        Object(_models_items__WEBPACK_IMPORTED_MODULE_13__[\"addItem\"])('f0_end_teleportation_stone', 1, 1);\n        Object(_models_items__WEBPACK_IMPORTED_MODULE_13__[\"addItem\"])('health_potion', 5, 5);\n        _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].unlocked.inventory = true;\n        _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].unlocked.stats = true;\n        Object(_models_baseModel__WEBPACK_IMPORTED_MODULE_12__[\"updateDisplay\"])(_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player);\n\n    } else if (input == \"lv\") {\n        Object(_models_items__WEBPACK_IMPORTED_MODULE_13__[\"addItem\"])('health_potion', 100, 100);\n        Object(_models_items__WEBPACK_IMPORTED_MODULE_13__[\"addItem\"])('mana_potion', 100, 100);\n        _models_data__WEBPACK_IMPORTED_MODULE_1__[\"flags\"].f0_fought_young_wolf.complete = true;\n        initMainLoopShortcuts();\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](towerCommands)\n\n    } else if (input == \"battle\") {\n        _models_combat__WEBPACK_IMPORTED_MODULE_5__[\"Combat\"].battleProcessing(_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player, _models_enemies__WEBPACK_IMPORTED_MODULE_4__[\"enemies\"].ora, mainLoop)\n    }\n\n    else { \n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input\");\n        initMainLoopShortcuts();\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](towerCommands)\n    }\n}\n\nfunction initMainLoopShortcuts() {\n    const shortcuts = [];\n    const unlocked = _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].unlocked;\n\n    const unlockables = ['explore', 'shop', 'inventory', 'stats', 'crafting', 'ascend'];\n    unlockables.forEach(cur => {\n        if (unlocked[cur] == true) {\n            shortcuts.push(cur);\n        }\n    });\n    shortcuts.push(\"settings\");\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"](shortcuts);\n}\n\n// UNLOCKING SUBSEQUENT FLOORS //\nconst next_floor = () => {\n    const data = _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"];\n    if (data.current_floor == data.max_floor) {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<h2><b><span style=\"color:green\">FLOOR ${data.current_floor} COMPLETED!!</span></b></h2>`);\n        data.max_floor += 1;\n        if (data.current_floor > _models_data__WEBPACK_IMPORTED_MODULE_1__[\"floors\"].max) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"You have now completed the highest possible floor. You will be able to access the\" +\n            \" next floor once it is released!\");\n        }\n    }\n    mainLoop();\n}\n// ----------------------------\n\nfunction setInputShortcut() {\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"separator\"]}<b>Now you will set your input shortcut key.</b>`);\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Input Shortcut is a <b>VERY IMPORTANT</b> mechanic that will make menu navigation and` +\n    ` combat much easier. By pressing the designated key, you can bring up a list of your options in a particular menu,` +\n    ` and also select an option by inputting a number rather than a line of text. Input shortcut won't work in some menus` +\n    `, however.`);\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Once you enter the main menu, use Input Shortcut to see your options.`);\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>You can check your input shortcut key at any time by inputting <b>sc-inputshortcut</b>.`)\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Please input (on your keyboard) one of the following to set input shortcut to that key:`);\n    setTimeout(() => {\n        Object.keys(_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"keysToCode\"]).forEach(key => {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](` - ${key}`)\n        });\n        //mainView.setInputResponse(setInputShortcutResponse);\n        window.addEventListener('keyup', setInputShortcutResponse)\n    }, 250);\n}\n\nfunction setInputShortcutResponse(event) {\n    //console.log(event);\n    window.removeEventListener('keyup', setInputShortcutResponse)\n\n    const foo = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"](); // just so that the other code w/ getInput runs\n\n    const correctInputs = [\"ShiftRight\", \"ShiftLeft\", \"ControlLeft\", \"ControlRight\", \"Backquote\", \"AltLeft\", \"AltRight\"];\n    const corresponding = [\"Rshift\", \"Lshift\", \"Rctrl\", \"Lctrl\", \"¬\", \"Altleft\", \"Altright\"];\n\n    if (correctInputs.includes(event.code)) {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"separator\"]}Input shortcut toggle changed to <b>${event.code}</b>. (You can change this in settings later if you need to)`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>If you think you will use input shortcut a lot, it is recommend you enable \"sticky input shortcut\" in settings.`); \n        _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].toggleShortcut = corresponding[correctInputs.indexOf(event.code)];\n\n        introPartTwo();\n    } else {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input\");\n\n        window.addEventListener('keyup', setInputShortcutResponse)\n    }\n};\n\nfunction endTutorial() {\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"tutorialMessages\"].tutorial_end, () => {\n        _models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].special.clearedTutorial = true;\n        Object(_models_settings__WEBPACK_IMPORTED_MODULE_11__[\"saveGame\"])();\n        location.reload();\n    }, false)\n}\n\nObject(_models_helpModule__WEBPACK_IMPORTED_MODULE_16__[\"prepareHelpModule\"])();\nbeginGame();\n\n\n\n//# sourceURL=webpack:///./src/js/index.js?");

/***/ }),

/***/ "./src/js/models/baseModel.js":
/*!************************************!*\
  !*** ./src/js/models/baseModel.js ***!
  \************************************/
/*! exports provided: clamp, capitalise, updateDisplayMode, updateDisplay, findAmount, findProperty, clean, isObject, copy, checkConditions, getSkillsList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clamp\", function() { return clamp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"capitalise\", function() { return capitalise; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateDisplayMode\", function() { return updateDisplayMode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateDisplay\", function() { return updateDisplay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findAmount\", function() { return findAmount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findProperty\", function() { return findProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clean\", function() { return clean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copy\", function() { return copy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkConditions\", function() { return checkConditions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSkillsList\", function() { return getSkillsList; });\n/* harmony import */ var _views_miscView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views//miscView */ \"./src/js/views/miscView.js\");\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _views_statView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../views/statView */ \"./src/js/views/statView.js\");\n/* harmony import */ var _combat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./combat */ \"./src/js/models/combat.js\");\n/* harmony import */ var _items__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./items */ \"./src/js/models/items.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var _skills__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./skills */ \"./src/js/models/skills.js\");\n/* harmony import */ var _initMenu__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./initMenu */ \"./src/js/models/initMenu.js\");\n/* harmony import */ var _directories_enemies_enemies__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../directories/enemies/enemies */ \"./src/directories/enemies/enemies.js\");\n\n\n\n\n\n\n\n\n\n\n\nfunction clamp(num, min, max) {\n    return num <= min ? min : num >= max ? max : num;\n  };\n\nfunction capitalise(string) {\n    const upperCaseLetter = string[0].toUpperCase();\n    const newString = upperCaseLetter + string.slice(1);\n    return newString;\n}\n\nconst updateDisplayMode = {\n    mode: \"normal\"\n}\nconst updateDisplay = (player, modeCoercion = \"none\") => {\n   //console.log(`mode of updatedisplaymode is ${updateDisplayMode.mode}.... coercion is ${modeCoercion}`)\n    if (updateDisplayMode.mode == \"normal\" && modeCoercion == \"none\" ) {\n        _views_miscView__WEBPACK_IMPORTED_MODULE_0__[\"updatePlayerStats\"](player); \n    }\n    \n    else if (modeCoercion == \"normal\" || _initMenu__WEBPACK_IMPORTED_MODULE_7__[\"getExploreDetails\"]().currentZone == undefined) {\n        _views_miscView__WEBPACK_IMPORTED_MODULE_0__[\"updatePlayerStats\"](player);\n    }\n\n    else {\n        const zoneExplorer = _initMenu__WEBPACK_IMPORTED_MODULE_7__[\"getExploreDetails\"]();\n        // getting the right area for the minimap: 4 rooms north, south, east and west of player position\n        const playerCoordinates = zoneExplorer.coordinates;\n        const baseMiniMap =  [...Array(17)].map(e => Array(17).fill(undefined));\n        const playerMap = _data__WEBPACK_IMPORTED_MODULE_5__[\"data\"].player.maps[zoneExplorer.currentZone.name];\n        for (var y = 0; y < baseMiniMap.length; y++) {\n            for (var x = 0; x < baseMiniMap[y].length; x++) {\n                if (playerMap[ y + playerCoordinates[0] - 8 ] != undefined && y + playerCoordinates[0] - 8 > -1 && x + playerCoordinates[1] - 8 > -1) { // otherwise when accessing playerMap[y][x] we're trying to index undefined\n                    baseMiniMap[y][x] = playerMap[ y + playerCoordinates[0] - 8 ][x + playerCoordinates[1] - 8 ] \n                } else {\n                    baseMiniMap[y][x] = undefined\n                }\n            }\n        }\n       //console.log(\"LOGGING BASE MAP\");\n       //console.log(baseMiniMap);\n        _views_miscView__WEBPACK_IMPORTED_MODULE_0__[\"updateMiniMap\"](baseMiniMap, zoneExplorer.currentZone, zoneExplorer.coordinates);\n    } \n    const plr = JSON.parse(JSON.stringify(player));\n    plr.stats = _combat__WEBPACK_IMPORTED_MODULE_3__[\"Combat\"].getPlayerAdd(plr.stats);\n    _views_statView__WEBPACK_IMPORTED_MODULE_2__[\"updateStats\"](plr);\n}\n\nconst findAmount = (itemName, inventory) => {\n    if (_items__WEBPACK_IMPORTED_MODULE_4__[\"items\"][itemName].type == \"reagent\") {\n        const index = inventory.findIndex(cur => {\n            return (cur[0] == itemName)\n        }) // just incase we try and search for an item that isnt in the inventory\n        if (index == -1) { return 0 } else {\n            return inventory[index][1];\n        }\n    } else {\n        var count = 0;\n        inventory.forEach(cur => {\n            if (cur == itemName) {\n                count++;\n            }\n        })\n        return count;\n    }\n}\n\nconst findProperty = (o, id) => {\n    //Early return\n    var p, result; \n    //console.log(o);\n\n    if( o.hasOwnProperty(id) ) {\n        return o[id];\n    }\n\n    for (p in o) {\n        if (p == id) { // this is my base case?\n            return o[p];\n        } else if( typeof o[p] === 'object' && o[p].length == undefined) {\n            return findProperty(o[p], id);\n        }\n    }\n    return result;\n}\n\nconst clean = (array) => { // DOES NOT WORK\n    array.forEach( (cur, index) => {\n        if (!cur) { array.splice(index, 1) };\n    })\n\n    return array;\n}\n\nconst isObject = (object) => {\n    return object === Object(object);\n}\n\nconst copy = (aObject) => { // thanks stackoverflow \n    if (!aObject) {\n      return aObject;\n    }\n  \n    let v;\n    let bObject = Array.isArray(aObject) ? [] : {};\n    for (const k in aObject) {\n      v = aObject[k];\n      bObject[k] = (typeof v === \"object\") ? copy(v) : v;\n    }\n  \n    return bObject;\n}\n\nconst checkConditions = (conditionsArr) => {\n    const player = _data__WEBPACK_IMPORTED_MODULE_5__[\"data\"].player;\n    var allMet = true;\n    conditionsArr.forEach(condition => {\n        const conditionSplit = condition.split(' ');\n        //#region\n            //console.log(\"CHECKING THE FOLLOWING CONDITION\");\n            //console.log(conditionSplit);\n            switch (conditionSplit[0]) {\n\n                case \"gold:\":{\n                    const goldAmount = conditionSplit[1];\n                    if (player.gold >= goldAmount) {\n                        // pass\n                    } else { allMet = false };\n                    break;\n                } \n\n                case \"item:\": {\n                    const itemName = conditionSplit[2];\n                    const itemQuantity = conditionSplit[1];\n                    const ownedQuantity = Object(_items__WEBPACK_IMPORTED_MODULE_4__[\"getQuantity\"])(itemName, player.inventory);\n                    if (ownedQuantity >= itemQuantity) {\n                        // pass\n                    } else { allMet = false };\n                    break;\n                }\n\n                case \"level:\": {\n                    const levelNeeded = conditionSplit[1];\n                    if (player.level >= levelNeeded) {\n                        // pass\n                    } else { allMet = false };\n                    break;\n                }\n\n                case \"flag:\": {\n\n                    //console.log(`CHECKING FLAG conditionSplit ${conditionSplit[1]}`);\n\n                    // check if we are checking for false or true\n\n                    var conditionTemp = conditionSplit[1] // we don't want to change the actual one\n                    var flagCheck = \"t\" // t = true, f = false\n                    if (conditionSplit[1][0] == '-') {\n                        flagCheck = \"f\";\n                        conditionTemp = conditionTemp.slice(1);\n                    }\n                    const flagToCheck = _data__WEBPACK_IMPORTED_MODULE_5__[\"flags\"][conditionTemp];\n\n                    //console.log(\"LOGGING FLAG IN DATA\");\n                    //console.log(flagToCheck);\n\n                    if (flagCheck == \"f\" && flagToCheck.complete == false) {\n                        // pass\n                    } else if (flagCheck == \"t\" && flagToCheck.complete == true) {\n                        // pass\n                    } else { allMet = false };\n                }\n            }\n        //#endregion\n    \n    });\n    //console.log(allMet);\n    return allMet;\n}\n\nconst getSkillsList = skillCodeArray => { // returns an array of skill names corresponding to skill codes\n    var skillsList = skillCodeArray.map(skillCode => {\n        if (skillCode != \"guard\" && skillCode != \"attack\") {\n            var skillCodeParsed = skillCode.split('-') // splits into an array of the discipline and index\n            var discipline = skillCodeParsed[0];\n            var index = skillCodeParsed[1];\n            return _data__WEBPACK_IMPORTED_MODULE_5__[\"disciplines\"][discipline].skills[index].name;\n        } else {\n            return skillCode;\n        }\n    });\n    return skillsList;\n};\n \n\n//# sourceURL=webpack:///./src/js/models/baseModel.js?");

/***/ }),

/***/ "./src/js/models/combat.js":
/*!*********************************!*\
  !*** ./src/js/models/combat.js ***!
  \*********************************/
/*! exports provided: Combat, checkLevel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Combat\", function() { return Combat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkLevel\", function() { return checkLevel; });\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _views_statView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../views/statView */ \"./src/js/views/statView.js\");\n/* harmony import */ var _skills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./skills */ \"./src/js/models/skills.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var _views_baseView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../views/baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _baseModel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./baseModel */ \"./src/js/models/baseModel.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! path */ \"./node_modules/path-browserify/index.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../index */ \"./src/js/index.js\");\n/* harmony import */ var _enemies__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./enemies */ \"./src/js/models/enemies.js\");\n/* harmony import */ var _items__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./items */ \"./src/js/models/items.js\");\n/* harmony import */ var _npc__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./npc */ \"./src/js/models/npc.js\");\n/* harmony import */ var _music__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./music */ \"./src/js/models/music.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./settings */ \"./src/js/models/settings.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// NOTE TO SELF: FIX DAMAGE SCALING, BUFFS ARE TOO POWERFUL\n\nconst Combat = {\n\n    battleProcessing(player, enemy, endFunction, additionalArgs = {\n        changeLevel: true, levelCap: false, addLevels: false\n    }) {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>---------------------------------------\")\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Battle between ${player.name} and ${enemy.stats.name} has begun!`)\n        // initialise player and enemy object (add buff/debuffs, add stat modifiers to objects)\n        const playerCopy = JSON.parse(JSON.stringify(player)); // see below about enemy copy\n        this.playerFighter = this.addCombatStats(playerCopy.stats, playerCopy.name, \"player\", additionalArgs); // redundant but left for consistency\n        const enemyCopy = JSON.parse(JSON.stringify(enemy)); // making a deep copy of the enemy so we don't modify its stats..\n        //console.log(enemyCopy);// in enemies.js. \n        this.enemy = this.addCombatStats(enemyCopy.stats, enemyCopy.stats.name, \"enemy\", additionalArgs);\n        this.turn = 0;\n        this.state = []; // state holds several info about turns such as the attacks used and the such.\n\n        this.endFunction = endFunction // save the function to run at the end of the battle to the object\n\n        _views_statView__WEBPACK_IMPORTED_MODULE_1__[\"updateStatsCombat\"](Combat.getPlayerAdd(Combat.playerFighter)); // doesn't seem to work here, don't know y\n\n        // -- MUSIC -- \\\\\n        var battleMusic = \"battle$\"\n        if (additionalArgs.battleMusic != undefined) { battleMusic = additionalArgs.battleMusic };\n        if (Object(_npc__WEBPACK_IMPORTED_MODULE_10__[\"getNpcDetails\"])().music != undefined && additionalArgs.overlayMusic == true) {\n        } else {\n            _music__WEBPACK_IMPORTED_MODULE_11__[\"musicHandler\"].playMusic(battleMusic);\n        }\n\n        // -- TUTORIAL(s) -- \\\\\n        /* #region */\n        const tutorials = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].tutorials;\n        if (tutorials.includes('battle_1') == false && _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].special.doingTutorial == true) {\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].tutorials.push('battle_1');\n            Object(_settings__WEBPACK_IMPORTED_MODULE_12__[\"saveGame\"])();\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"tutorialMessages\"].battle_1, Combat.combatLoop)\n        }\n        else if (tutorials.includes('battle_2') == false && enemy.stats.name == \"Young Wolf\" && _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].special.doingTutorial == true) {\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].tutorials.push('battle_2');\n            Object(_settings__WEBPACK_IMPORTED_MODULE_12__[\"saveGame\"])();\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"tutorialMessages\"].battle_2, Combat.combatLoop)\n        }\n        else if (tutorials.includes('battle_3') == false && enemy.stats.name == \"Dreadful Wolf\" && _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].special.doingTutorial == true) {\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].tutorials.push('battle_3');\n            Object(_settings__WEBPACK_IMPORTED_MODULE_12__[\"saveGame\"])();\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"tutorialMessages\"].battle_3, Combat.combatLoop)\n        }\n        else if (tutorials.includes('battle_4') == false && enemy.stats.name == \"???\" && _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].special.doingTutorial == true) {\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].tutorials.push('battle_4');\n            Object(_settings__WEBPACK_IMPORTED_MODULE_12__[\"saveGame\"])();\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"tutorialMessages\"].battle_4, Combat.combatLoop)\n        }\n        else {\n            this.combatLoop();\n        }\n        /* #endregion */\n    },\n\n    addCombatStats(object, name, type, additionalArgs = {\n        changeLevel: true, levelCap: false, addLevels: false\n    }) {\n        object.name = name;\n        object.health_mod = 0;\n        object.atk_mod = 0;\n        object.def_mod = 0;\n        object.matk_mod = 0;\n        object.mdef_mod = 0;\n        object.crit_chance_mod = 0;\n        object.crit_damage_mod = 0;\n        object.effectiveness_mod = 0;\n        object.resistance_mod = 0;\n        object.evasion_mod = 0;\n        object.speed_mod = 0;\n        object.actions = 0;\n        object.buffs = [];\n        object.debuffs = [];\n        object.mitigation = 0;\n\n        // only run if entity is a player\n        if (type == \"player\") {\n            //object.max_mana = object.max_mana + Combat.getEquipStat(object, \"max_mana\");\n            object.mana = object.current_mana;\n            //object.max_sp = object.max_sp + Combat.getEquipStat(object, \"max_sp\");\n            object.sp = 0;\n            //object.max_stamina = object.max_stamina + Combat.getEquipStat(object, \"max_stamina\");\n            object.stamina = object.current_stamina;\n            object.max_health = this.getMaxHealth(object);\n            object.health = object.current_health; // prevent healing inbetween battles\n            object.actionsTaken = 0;\n           //console.log(\"LOGGING SKILLS\");\n           //console.log(object.skills);\n            object.skillsList = object.skills.map(skillCode => {\n                if (skillCode != \"guard\" && skillCode != \"attack\") {\n                    var skillCodeParsed = skillCode.split('-') // splits into an array of the discipline and index\n                    var discipline = skillCodeParsed[0];\n                    var index = skillCodeParsed[1];\n                    return _data__WEBPACK_IMPORTED_MODULE_3__[\"disciplines\"][discipline].skills[index].name;\n                } else {\n                    return skillCode;\n                }\n            });\n            object.type = \"player\";\n           //console.log(object.skillsList);\n            //console.log(\"logging skillslist\");\n            //console.log(object.skillsList);\n        } else {\n            object.modeBattle = \"normal\";\n            object.mana = object.max_mana;\n            object.stamina = object.max_stamina;\n            object.health = object.max_health;\n            object.sp = 0;\n            object.level = object.base_level;\n            object.actionsTaken = 0;\n            object.type = \"enemy\";\n\n            if (additionalArgs.hasOwnProperty(\"modifyEnemy\")) {\n                const keysArr = Object.keys(additionalArgs.modifyEnemy);\n                for (var i  = 0; i < keysArr.length; i++) {\n                    const property = keysArr[i];\n                    object[property] = additionalArgs.modifyEnemy[property];\n                }\n            }\n\n            // we need to increase the enemy's stats based on level\n            // -- LEVEL SCALING -- \\\\\n            // Each enemy has a base level, the level they are designed to be at.\n            // If the player is a higher level, the enemy stats will increase accordingly:\n            // 10 HP/level\n            // 3 in all other stats/level\n            // To prevent the player from becoming overpowered too quickly.\n            // EXP will increase by 10 per level\n            const enemyBaseLevel = object.base_level;\n            const playerLevel = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.level;\n            var intendedLevel;\n            //console.log(`changelveel is ${changeLevel}`)\n\n            const changeLevel = additionalArgs.changeLevel == undefined ? true : additionalArgs.changeLevel;\n            const levelCap = additionalArgs.levelCap == undefined ? false : additionalArgs.levelCap;\n            const addLevels = additionalArgs.addLevels == undefined ? false : additionalArgs.addLevels;\n\n            if (changeLevel == false) { intendedLevel = enemyBaseLevel } else {\n                if (changeLevel == true) {\n                    intendedLevel = playerLevel;\n                } else {\n                    intendedLevel = changeLevel;\n                }\n            };\n            if (addLevels != false) {\n                if (intendedLevel < playerLevel + addLevels) { intendedLevel = playerLevel + addLevels };\n            }\n            if (levelCap != false) { // cap enemy level\n                if (intendedLevel > levelCap) { intendedLevel = levelCap };\n            }\n            //console.log(`indetened ${intendedLevel}`)\n            if (intendedLevel > enemyBaseLevel) {\n                const difference = intendedLevel - enemyBaseLevel;\n                object.level = object.level + difference;\n                object.health = object.health + (difference * 10);\n                object.max_health = object.health; // otherwise health becomes > max health\n                object.atk = object.atk + (difference * 3);\n                object.def = object.def + (difference * 3);\n                object.matk = object.matk + (difference * 3);\n                object.mdef = object.mdef + (difference * 3);\n                object.speed = object.speed + (difference * 3);\n                object.exp = object.exp + (difference * 10);\n\n            }\n\n            delete object.base_level; // so it doesn't come up when displaying stats of enemy\n\n        }\n\n        return object;\n\n    },\n\n    getEquips(player) {\n        const stats = {\n            atk: 0,\n            def: 0,\n            matk: 0,\n            mdef: 0,\n            crit_chance: 0,\n            crit_damage: 0,\n            effectiveness: 0,\n            resistance: 0,\n            evasion: 0,\n            speed: 0,\n            mitigation: 0,\n            max_mana: 0,\n            max_sp: 0,\n            max_stamina: 0\n        }\n        Object.keys(player.equips).forEach(cur => {\n            if (player.equips[cur] != undefined) {\n                Object.keys(_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][player.equips[cur]]).forEach(stat => { \n                    if (stats.hasOwnProperty(stat)) {\n                        stats[stat] += _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][player.equips[cur]][stat]\n                    }\n                })\n            }\n\n        })\n        return stats\n    },\n\n    getEquipStat(player, param) {\n        var sum = 0;\n        Object.keys(player.equips).forEach(cur => {\n            if (player.equips[cur] != undefined) {\n                Object.keys(_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][player.equips[cur]]).forEach(stat => {\n                    if (stat == param) {\n                        sum += _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][player.equips[cur]][param]\n                    }\n                })\n            }\n\n        })\n\n        return sum;\n    },\n\n    getMaxHealth(player) { // this needs to be separate because health is collected at different times to the other stats\n        const stats = {\n            health: 0\n        }\n\n        stats.health += this.getEquipStat(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats, \"health\"); // don't like accessing player like this but no choice\n\n        stats.health += _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.sp_investment.health * 20;\n\n        stats.health += ( _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.level - 1 ) * 20\n\n        return player.health + stats.health;\n        \n\n    },\n\n    getEquipsElements(player) {\n        const stats = {\n            offence: {\n                physical: 0,\n                fire: 0,\n                water: 0,\n                earth: 0,\n                wind: 0,\n                thunder: 0,\n                dark: 0,\n                light: 0\n            },\n            defence: {\n                physical: 0,\n                fire: 0,\n                water: 0,\n                earth: 0,\n                wind: 0,\n                thunder: 0,\n                dark: 0,\n                light: 0\n            }\n        };\n\n        const equips = player.equips;\n\n        Object.keys(equips).forEach(equip => {\n            if (equips[equip] != undefined) {\n                const item = _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][equips[equip]];\n                Object.keys(item.elemental.offence).forEach(element => {\n                    if (element != \"all\") {\n                        stats.offence[element] += item.elemental.offence[element];\n                    } else {\n                        for (var ele in stats.offence) { stats.offence[ele] += item.elemental.offence[element]} // adding 'all'\n                    }\n                    stats.offence[element] = Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])(stats.offence[element], _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].minElementMod, _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].maxElementMod);\n                });\n                Object.keys(item.elemental.defence).forEach(element => {\n                    if (element != \"all\") {\n                        stats.defence[element] += item.elemental.defence[element];\n                    } else {\n                        for (var ele in stats.defence) { stats.defence[ele] += item.elemental.defence[element]};\n                    }\n                    stats.defence[element] = Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])(stats.defence[element], _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].minElementMod, _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].maxElementMod);\n                });\n            }\n        })\n\n        return stats;\n    },\n\n    healthCheck() { // check if any combatants are dead and end the battle if true\n        if (Combat.playerFighter.health <= 0) {\n            //console.log('fight over');\n            _views_statView__WEBPACK_IMPORTED_MODULE_1__[\"updateStatsCombat\"](Combat.getPlayerAdd(Combat.playerFighter));\n            return \"enemy\";\n        } else if (Combat.enemy.health <= 0) {\n            //console.log('fight over');\n            _views_statView__WEBPACK_IMPORTED_MODULE_1__[\"updateStatsCombat\"](Combat.getPlayerAdd(Combat.playerFighter));\n            return \"player\";\n        }\n        //console.log('fight not over');\n        return false;\n    },\n\n    uploadChanges(plr, enemy) {\n       //console.log({...Combat.playerFighter});\n\n        Combat.playerFighter.health = plr.health;\n        Combat.enemy.health = enemy.health;\n\n        Combat.playerFighter.mana = plr.mana;\n        Combat.playerFighter.sp = plr.sp;\n        Combat.playerFighter.stamina = plr.stamina;\n\n       //console.log({...Combat.playerFighter});\n    },\n\n    calcBuffs(stat, object) {\n        var sum = 0;\n        const buffs = object.buffs;\n        if (buffs.length > 0) {\n            Object.keys(buffs).forEach(buff => {\n                if (buffs[buff].hasOwnProperty(stat)) {\n                    sum += buffs[buff][stat] * buffs[buff].stacks;\n                }\n            })\n        }\n        return sum\n    },\n\n    calcDebuffs(stat, object) {\n        var sum = 0;\n        const debuffs = object.debuffs;\n        Object.keys(debuffs).forEach(debuff => {\n            if (debuffs[debuff].hasOwnProperty(stat)) {\n                sum += debuffs[debuff][stat] * debuffs[debuff].stacks;\n            }\n        })\n        return sum\n    },\n\n    calcMod(stat, object) {\n        const constants = _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"];\n        var sum = 0;\n        sum += Combat.calcBuffs(stat, object);\n        sum += Combat.calcDebuffs(stat, object);\n        if ([\"resistance\", \"effectiveness\"].includes(stat)) {\n        } else {\n            sum = Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])(sum, constants.minBuffMod - 1, constants.maxBuffMod);\n        }\n        return sum;\n    },\n\n    calcElementBuffs(object) {\n        const sum = {\n            offence: {\n                none: 0,\n                physical: 0,\n                fire: 0,\n                water: 0,\n                earth: 0,\n                wind: 0,\n                thunder: 0,\n                dark: 0,\n                light: 0\n            },\n            defence: {\n                none: 0,\n                physical: 0,\n                fire: 0,\n                water: 0,\n                earth: 0,\n                wind: 0,\n                thunder: 0,\n                dark: 0,\n                light: 0\n            }\n        };\n\n        const buffs = object.buffs;\n\n        buffs.forEach(cur => {\n            if (cur.hasOwnProperty('elemental')) {\n                if (cur.elemental.hasOwnProperty('offence')) {\n                    Object.keys(cur.elemental.offence).forEach(el => {\n                        if (el != \"all\") {\n                            sum.offence[el] += cur.elemental.offence[el] * cur.stacks;\n                        } else {\n                            for (var ele in sum.offence) { sum.offence[ele] += cur.elemental.offence[el] * cur.stacks };\n                        }\n                        sum.offence[el] = Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])(sum.offence[el], _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].minElementMod, _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].maxElementMod);\n                        //console.log(`offensive elemental sum is ${sum.offence[el]}`);\n                    })\n                }\n                if (cur.elemental.hasOwnProperty('defence')) {\n                    Object.keys(cur.elemental.defence).forEach(el => {\n                        if (el != \"all\") {\n                            sum.defence[el] += cur.elemental.defence[el] * cur.stacks;\n                        } else {\n                            for (var ele in sum.defence) { sum.defence[ele] += cur.elemental.defence[el] * cur.stacks };\n                        }\n                        sum.defence[el] =Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])(sum.defence[el], _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].minElementMod, _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].maxElementMod);\n                        //console.log(`defensive elemental sum is ${sum.defence[el]}`);\n                    })\n                }\n            }\n        })\n\n        const debuffs = object.debuffs;\n\n        debuffs.forEach(cur => {\n            if (cur.hasOwnProperty('elemental')) {\n                if (cur.elemental.hasOwnProperty('offence')) {\n                    Object.keys(cur.elemental.offence).forEach(el => {\n                        if (el != \"all\") {\n                            sum.offence[el] += cur.elemental.offence[el] * cur.stacks;\n                        } else {\n                            for (var ele in sum.offence) { sum.offence[ele] += cur.elemental.offence[el] * cur.stacks };\n                        }\n                        sum.offence[el] = Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])(sum.offence[el], _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].minElementMod, _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].maxElementMod);\n                    })\n                }\n                if (cur.elemental.hasOwnProperty('defence')) {\n                    Object.keys(cur.elemental.defence).forEach(el => {\n                        if (el != \"all\") {\n                            sum.defence[el] += cur.elemental.defence[el] * cur.stacks;\n                        } else {\n                            for (var ele in sum.defence) { sum.defence[ele] += cur.elemental.defence[el] * cur.stacks };\n                        }\n                        sum.defence[el] = Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])(sum.defence[el], _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].minElementMod, _data__WEBPACK_IMPORTED_MODULE_3__[\"constants\"].maxElementMod);\n                    })\n                }\n            }\n        })\n        return sum;\n    },\n\n    applyBuff(buff, chance, user, target, type, additionalArgs = {}) {\n\n        //console.log(\"appl \");\n        ///console.log(user);\n        //console.log(target)\n\n        // initialising additionalArgs variables\n        var ignoreRes = false;\n        \n        if (additionalArgs.ignoreRes != undefined) {\n            ignoreRes = additionalArgs.ignoreRes;\n        }\n\n        var eff, res;\n        if (target == user || type == \"buffs\") {\n            eff = 0;\n            res = 0;\n        }\n        else {\n            var user2 = user;\n            var target2 = target;\n            if (user.type == \"player\") {\n                user2 = Combat.getPlayerAdd(user);\n            }\n            if (target.type == \"player\") {\n                target2 = Combat.getPlayerAdd(target);\n            }\n            //console.log(user2);\n            //console.log(target2);\n            eff = Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])((user2.effectiveness + Combat.calcBuffs(\"effectiveness\", user2) + Combat.calcDebuffs(\"effectiveness\", user2)), 0, 999);\n            res = Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])((target2.resistance + Combat.calcBuffs(\"resistance\", target2) + Combat.calcDebuffs(\"resistance\", target2)), 0, 999);\n        };\n\n        // ignore res skills\n        if (ignoreRes == true) {\n            res = 0;\n        }\n\n        chance = Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])(chance + eff, 0, 100);\n        const roll = Math.round((Math.random() * 100)) + 1;\n        const actualChance = chance - res;\n        //console.log(\"Trying to applf:\");\n        //console.log(buff.name);\n        //console.log(roll);\n        //console.log(chance);\n        //console.log(res);\n        //console.log(actualChance);\n        //console.log(roll <= chance);\n        if (roll <= actualChance) {\n\n            if (!buff.hasOwnProperty(\"stacks\")) { buff.stacks = 1 }; // needed for applying the buff\n\n            if (Combat.checkStacks(target[type], buff.name) == 0) {\n\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${target.name}${buff.apply_text}`)\n                if (type == 'buffs') {\n                    target.buffs.push({...buff});\n                } else {\n                    target.debuffs.push({...buff});\n                }\n                _views_statView__WEBPACK_IMPORTED_MODULE_1__[\"updateStatsCombat\"](Combat.getPlayerAdd(Combat.playerFighter));\n\n            }\n            else {\n                const alreadyAppliedBuff = Combat.getBuff(target, buff.name);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${target.name}${buff.apply_text}`)\n                alreadyAppliedBuff.stacks += buff.stacks;\n                if (alreadyAppliedBuff.stacks > alreadyAppliedBuff.max_stacks) { alreadyAppliedBuff.stacks = alreadyAppliedBuff.max_stacks};\n                if (alreadyAppliedBuff.duration < buff.duration) { alreadyAppliedBuff.duration = buff.duration};\n            }\n        } else if (roll <= chance) {\n            //console.log(\"effect resisted\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('<span style=\"color:#9500D6\">Effect resisted!</span>');\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('Effect not applied.');\n        }\n\n    },\n\n    getBuff(object, buffName) {\n        var buff;\n        const buffsets = [object.buffs, object.debuffs];\n        for (var index in buffsets) {\n            const buffset = buffsets[index];\n            for (var i = 0; i < buffset.length; i++) {\n                if (buffset[i].name == buffName) { return buffset[i] };\n            }\n        }\n    },\n\n    stripBuff(object, buff) { // removes all stacks of a buff\n        var stripped = false;\n        for (var i = 0; i < object.length; i++) {\n            const buff_i = object[i];\n            if (buff_i.name == buff) {\n                if (buff_i.hasOwnProperty(\"unstrippable\")) {\n                    return false;\n                } else {\n                    object.splice(i, 1);\n                    stripped = true;\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${buff_i.name} removed.`)\n                    i--;\n                }\n            }\n        }\n        return stripped;\n    },\n\n    buffCheck(object, afterwards) { // note - used for buffs AND debuffs. Checks buffs, debuffs and removes ones that have expired\n        // tick any HOT/DOT\n        const total = object.buffs.concat(object.debuffs);\n        //console.log(`logging total`);\n        //console.log(total)\n       //console.log(\"buffcheck called\");\n\n        for (var index = total.length - 1; index >= 0; index--) { // just copied below code no reason to itr. backwards\n            const buff = total[index];\n            //console.log(`buffdamage ${buff.damage}`);\n            if (buff.hasOwnProperty(\"damage\")) {\n                // do the DOT\n                //console.log(`dot ${buff.damage}`)\n                const dot = buff.damage;\n                var damage;\n                if (dot[0] == \"percentile\") {\n                    damage = Math.round(object.max_health * (dot[1] / 100)) * buff.stacks;\n                }\n                if (dot[0] == \"flat\") {\n                    damage = dot[1] * buff.stacks;\n                }\n\n                const msg1 = `<br>(${buff.name}) ${object.name} ${damage > 0 ? \"lost\" : \"gained \"} health! <span style=\"color:${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"elementColours\"][dot[2]]}\">[${Math.abs(damage)}, ${dot[0]}]</span>`;\n                //const msg2 = `${object.name}'s health remaining: ${object.health - damage}/${object.max_health}`; doesnt show right hp\n                \n                _skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([msg1], true, \"push\");\n                _skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].dealDamage(object.type, damage, \"self\", false, false, Combat.getPlayer(), Combat.getEnemy());\n            }\n            \n            if (buff.hasOwnProperty(\"heal\")) {\n                // TBA\n            }\n\n            if (buff.hasOwnProperty(\"onTick\")) {\n                for (var i = 0; i < buff.stacks; i++) {\n                    buff.onTick(object.type, object, Combat.getPlayer(), Combat.getEnemy());\n                }\n            }\n\n        }\n        \n        for (var index = object.buffs.length - 1; index >= 0; index--) {\n            const cur = object.buffs[index];\n            if (cur.fade != false) {\n                cur.duration -= 1;\n            }\n            if (cur.duration <= 0) {\n                _skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`<br>${cur.name} faded. (${object.name})`], true, \"push\");\n                object.buffs.splice(index, 1);\n            }\n        }\n        for (var index = object.debuffs.length - 1; index >= 0; index--) {\n            //console.log(`index is ${index}`);\n            //console.log(`object.buffs is ${object.debuffs}`);\n            const cur = object.debuffs[index];\n            if (cur.fade != false) {\n                cur.duration -= 1;\n            }\n            if (cur.duration <= 0) {\n                _skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].pushMessagesToState([`<br>${cur.name} faded. (${object.name})`], true, \"push\");\n                object.debuffs.splice(index, 1);\n            }\n        }\n\n        _skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].skillStack.stack.push([\"continue\", afterwards, true]); // so it runs last\n        _skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].runSkillStack();\n\n    },\n\n    turnReset(object) {\n        object.actions -= 1;\n        if (object == Combat.playerFighter) { _views_statView__WEBPACK_IMPORTED_MODULE_1__[\"updateStatsCombat\"](Combat.getPlayerAdd(Combat.playerFighter)); };\n    },\n\n    combatLoop() {\n\n        _views_statView__WEBPACK_IMPORTED_MODULE_1__[\"updateStatsCombat\"](Combat.getPlayer());\n\n        var combatEnd = Combat.healthCheck();\n        Combat.turn += 1;\n        Combat.state.push({\n            player: [],\n            enemy: []\n        });\n        //console.log(\"PRINTING STATE\");\n        //console.log(Combat.state);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>TURN ${Combat.turn}`);\n\n        if (combatEnd == false) {\n            //this.consecutiveActions = 1; // need to be put here as well as turn reset so that it is noted at the start of the battle\n            Combat.playerFighter.actions = Combat.calcActions(Combat.getPlayerAdd(Combat.playerFighter), Combat.getEnemy());\n            _views_statView__WEBPACK_IMPORTED_MODULE_1__[\"updateStatsCombat\"](Combat.getPlayerAdd(Combat.playerFighter));\n            Combat.combatMessage().forEach(message => {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](message);\n            });\n            Combat.initShortcuts();\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](Combat.selectAttack);\n        } else {\n            Combat.endBattle(Combat.healthCheck()); // end the fight if one combatant is dead. healthcheck will pass the victor.\n        }\n\n    },\n\n    combatMessage() {\n        return [\n            `<br>Health: ${Combat.playerFighter.health}/${Combat.playerFighter.max_health}`,\n            `${Combat.getEnemy().name} (LV${Combat.getEnemy().level}) Health: ${Combat.enemy.health}/${Combat.enemy.max_health}`,\n            `Actions: ${Combat.playerFighter.actions}`,\n            `Please select an action`\n        ]\n    },\n    /*\n    endPlayerTurn() {\n        //console.log('ending player turn');\n        const playerFighter = Combat.playerFighter;\n        const enemy = Combat.enemy;\n        var turnMod;\n        if (this.healthCheck() == false) {\n            switch (this.consecutiveActions) {\n                case 1:\n                    turnMod = 0.4\n                    break;\n                case 2:\n                    turnMod = 1.75\n                    break;\n                case 3:\n                    turnMod = 4\n                    break;\n                default:\n                    turnMod = 999\n                    break;\n            }\n            if (playerFighter.speed > .enemy..speed * turnMod) {\n                this.consecutiveActions += 1;\n                mainView.displayMessage('<br>Your speed has allowed you to attack again!');\n                mainView.displayMessagesDelayed(Combat.combatMessage(), 0, () => '');\n                mainView.setInputResponse(this.selectAttack);\n            } else {\n                mainView.displayMessage('Player turn end');\n                mainView.displayMessage('');\n                // run end of turn code here\n                enemy.ai();\n            }\n        }\n    },\n    */\n    /*\n    endEnemyTurn() {\n        //console.log('ending enemy turn');\n        const playerFighter = Combat.playerFighter;\n        const enemy = Combat.enemy;\n        var turnMod;\n        if (this.healthCheck() == false) {\n            switch (this.consecutiveActions) {\n                case 1:\n                    turnMod = 0.4\n                    break;\n                case 2:\n                    turnMod = 1.75\n                    break;\n                case 3:\n                    turnMod = 4\n                    break;\n                default:\n                    turnMod = 999\n                    break;\n            }\n            if (.enemy..speed > playerFighter.speed * turnMod) {\n                this.consecutiveActions += 1;\n                mainView.displayMessage('<br>The speed of the enemy has allowed them to attack again!<br>');\n                enemy.ai();\n            } else {\n                mainView.displayMessage('Enemy turn end');\n                mainView.displayMessage('');\n                // run end of turn code here\n                this.combatLoop();\n            }\n        }\n    },\n    */\n    endTurn(type) {\n        const entity = (type == 'player' ? Combat.playerFighter : Combat.enemy);\n        const other = (type == 'player' ? Combat.enemy : Combat.playerFighter);\n        var turnMod;\n        if (this.healthCheck() == false) { // don't really need to end the turn if the fight is over\n            /*switch (this.consecutiveActions) {\n                case 1:\n                    turnMod = 0.4\n                    break;\n                case 2:\n                    turnMod = 1.75\n                    break;\n                case 3:\n                    turnMod = 4\n                    break;\n                default:\n                    turnMod = 999\n                    break;\n            }*/\n            _views_statView__WEBPACK_IMPORTED_MODULE_1__[\"updateStatsCombat\"](Combat.getPlayerAdd(Combat.playerFighter)); // so mana and stuff updated inbetween turns\n            //console.log(`MIGHT END TURN... CURRENT ACTIONS OF ENTITY ARE ${entity.actions}; TYPE IS ${type}`);\n            if (entity.actions > 1) { // get an extra turn\n                entity.actions -= 1\n                if (type == 'player') {\n                    //mainView.displayMessage('<br>Your speed has allowed you to attack again!');\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>-------<br><span style='color:#ff9900'><b>Additional Action!</b></span><br>-------<br>\");\n                    entity.actionsTaken += 1;\n                    Combat.combatMessage().forEach(message => {\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](message);\n                    })\n                    Combat.initShortcuts();\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](this.selectAttack);\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>-------<br><span style='color:#ff9900'><b>Additional Action!</b></span><br>-------<br>\");\n                    entity.actionsTaken += 1\n                    //mainView.displayMessage('<br>The speed of the enemy has allowed them to attack again!');\n                    // re-evaluate enemy mode after each action\n                    _enemies__WEBPACK_IMPORTED_MODULE_8__[\"mode\"][Combat.enemy.mode].call(undefined, Combat.state, Combat.getPlayerAdd(Combat.playerFighter), Combat.enemy, () => {\n                        _enemies__WEBPACK_IMPORTED_MODULE_8__[\"ai\"][Combat.enemy.ai].call(); // so that we can get the small pause after showing enemy mode\n                    })\n                }\n            } else { // end turn\n                if (type == 'player') {\n\n                    // reset actions taken\n                    entity.actionsTaken = 0;\n\n                    // stamina regen\n                    var staminaRegen = Math.round(Combat.getPlayerAdd(Combat.playerFighter).max_stamina / 10);\n                    Combat.playerFighter.stamina += staminaRegen;\n                    Combat.playerFighter.stamina = Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])(Combat.playerFighter.stamina, 0, Combat.playerFighter.max_stamina);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Regenerated ${staminaRegen} stamina!`);\n\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('<br>Player turn end');\n                    Combat.turnReset(Combat.playerFighter);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('<br>---------------------------------------');\n                    Combat.enemy.actions = Combat.calcActions(Combat.getEnemy(), Combat.getPlayerAdd(Combat.playerFighter));\n                     // this will cause buffs to tick for the enemy at the start of their next turn\n                    //console.l(\"logging state\");\n                    //console.l(Combat.state);\n                    Combat.buffCheck(Combat.enemy, () => {\n                        _enemies__WEBPACK_IMPORTED_MODULE_8__[\"mode\"][Combat.enemy.mode].call(undefined, Combat.state, Combat.getPlayerAdd(Combat.playerFighter), Combat.enemy, () => {\n                            _enemies__WEBPACK_IMPORTED_MODULE_8__[\"ai\"][Combat.enemy.ai].call(); // so that we can get the small pause after showing enemy mode\n                        })\n                    });\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('<br>Enemy turn end');\n\n                    // reset actionsTaken\n                    entity.actionsTaken = 0;\n\n                    // stamina regen\n                    var staminaRegen = Math.round(Combat.enemy.max_stamina / 10);\n                    Combat.enemy.stamina += staminaRegen;\n                    Combat.enemy.stamina = Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"clamp\"])(Combat.enemy.stamina, 0, Combat.enemy.max_stamina);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>${Combat.enemy.name} regenned ${staminaRegen} stamina!`);\n\n                    Combat.turnReset(Combat.enemy);\n                    //Combat.state[Combat.state.length - 1].push({ ...Combat.getPlayer() });\n                    //Combat.state[Combat.state.length - 1].push({ ...Combat.getEnemy() });\n\n                    // this will cause buffs to tick for the plr at the start of their next turn\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('<br>---------------------------------------');\n                    Combat.buffCheck(Combat.playerFighter, () => {\n                        // run end of turn FUNCTION here\n                        this.combatLoop();\n                    });\n\n                }\n            }\n\n        } else {\n            this.endBattle(this.healthCheck()); // end the fight if one combatant is dead. healthcheck will pass the victor.\n        }\n\n\n    },\n\n    displayStatus(object) {\n\n        // before displaying the buffs, I'm going to sort them so that all the buffs w/ same name are grouped together...\n        // this will prevent \"extra stack\"s from displaying under the wrong thing\n        const compare = (a,b) => {\n            if (a.name > b.name) {\n                return 1;\n            } else if (a.name < b.name) {\n                return -1;\n            } else { return 0 };\n        };\n        object.buffs.sort(compare);\n        object.debuffs.sort(compare);\n        // --------------- \\\\\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Displaying status...`);\n\n        // displaying hp, mana, stamina, sp\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`HP: ${object.health}/${object.max_health}`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Mana: ${object.mana}/${object.max_mana}`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Stamina: ${object.stamina}/${object.max_stamina}`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`SP: ${object.sp}/${object.max_sp}`);\n\n        if (object.type == \"enemy\") {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('<br><b>Total Stat Modifiers</b>');\n            const allStats = [\"atk\", \"def\", \"matk\", \"mdef\", \"speed\", \"effectiveness\",\n            \"resistance\", \"evasion\", \"mitigation\"];\n            var modFound = false;\n            allStats.forEach(stat => {\n                const mod = Combat.calcMod(stat, object);\n                //console.log(`for ${stat} mod is ${mod}`)\n                if (mod != 0) {\n                    modFound = true;\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](` - ${stat}: ${[\"effectiveness\", \"resistance\"].includes(stat) ? mod : mod * 100}%`)\n                }\n            });\n            if (!modFound) { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"--\")}\n        }\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('<br><b>BUFFS</b>'); // we have to format the buff for display\n\n        const displayedBuffs = [];\n\n        if (object.buffs.length == 0) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>None\");\n        }\n\n        Combat.displayBuffs(object.buffs);\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('<br><b>DEBUFFS</b>'); // we have to format the buff for display\n\n        if (object.debuffs.length == 0) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>None\");\n        }\n\n        Combat.displayBuffs(object.debuffs);\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Please select an action`)\n    },\n\n    displayBuffs(buffs) {\n    \n        const displayedBuffs = [];\n        buffs.forEach(cur => { // for each buff in buffs...\n            var currentBuff = {... cur} // create a copy of the buff\n            var name = currentBuff.name; // remove the things we don't want to display\n            //delete currentBuff.name; we cannot do this as we need this variable\n            delete currentBuff.types;\n            delete currentBuff.apply_text;\n\n            // buff duration\n            const buffDuration = `<br> ➢ ${currentBuff.duration} turns remaining`;\n            delete currentBuff.duration;\n\n            // buff element\n            const element = `<br><span style=\"color:${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"elementColours\"][currentBuff.element]}\">${currentBuff.element}</span>`\n            delete currentBuff.element;\n\n            // number of stacks (may need to change)\n            const stacksNo = Combat.checkStacks(buffs, currentBuff.name);\n            const stacks = `<br>${stacksNo} stack${stacksNo > 1 ? 's' : ''}<b>/</b>${currentBuff.max_stacks} max`;\n            delete currentBuff.max_stacks;\n            \n            // buff description\n            var desc;\n            if (currentBuff.hasOwnProperty(\"desc\")) { // add desc to the thing if the buff has one\n                desc = `<br> - ${currentBuff.desc}`\n                delete currentBuff.desc;\n            } else { desc = `` };\n\n            // dot (if the thing has one)\n            var damage = '';\n            if (currentBuff.hasOwnProperty(\"damage\")) {\n                if (currentBuff.damage[0] == \"percentile\") {\n                    damage = `<br> ➢ ${Math.abs(currentBuff.damage[1])}% ${currentBuff.damage[1] > 0 ? 'DoT' : 'HoT'}`;\n                } else if (currentBuff.damage[0] == \"flat\") {\n                    damage = `<br> ➢ ${Math.abs(currentBuff.damage[1])}DMG ${currentBuff.damage[1] > 0 ? 'DoT' : 'HoT'}`;\n                };\n            }\n\n            if (currentBuff.hasOwnProperty('elemental')) { // if the buff augments elemental stats...\n                var BuffOffensive = Object.keys(currentBuff.elemental.offence).map(cur => { // for each offensive stat create a string in format \"element: value\"\n                    const value = currentBuff.elemental.offence[cur];\n                    return `<br> ➢ ${value > 0 ? '+' : ''}${value} ${cur} attack`;\n                }) \n                var BuffDefensive = Object.keys(currentBuff.elemental.defence).map(cur => { // same as above for defensive\n                    const value = currentBuff.elemental.defence[cur];\n                    return `<br> ➢ ${value > 0 ? '+' : ''}${value} ${cur} defence`;\n                });\n                //BuffOffensive.split('-');\n                //BuffDefensive.split('-');\n            } else { var BuffOffensive = [];\n            var BuffDefensive = [] }; // if there is no elemental component define anyway so as to not throw error\n\n            delete currentBuff.elemental; // delete actual element component since we have formated arrays to display with\n\n            var buffComponents = Object.keys(currentBuff).map(cur => { // iterate over all normal buff properties and format them in an array\n                const value = currentBuff[cur];\n                if (![\"name\", \"damage\", \"onTick\", \"stacks\"].includes(cur)) { // don't want to display name, see above as to why it wasn't deleted\n                    if ([\"resistance\", \"effectiveness\"].includes(cur)) {\n                        return `<br> ➢ ${value > 0 ? '+' : ''}${value} ${cur}`\n                    }\n                    else if (cur == \"fade\") {\n                        if (currentBuff.fade == false) { return `<br> ➢ Does not fade with time`};\n                    }\n                    else if (cur == \"unstrippable\") {\n                        if (currentBuff.unstrippable == true) { return `<br> ➢ Unstrippable`};\n                    }\n                    else {\n                        return `<br> ➢ ${value > 0 ? '+' : ''}${value * 100}% ${cur}`\n                    }\n                }\n            });\n\n            // okay now display the buff jesus that was long.\n            var fullBuff;\n            if (displayedBuffs.includes(currentBuff.name)) { // this should never come into play but I'll leave it here \n                fullBuff = `FURTHER STACK: ${buffDuration}`;\n            } else {\n                fullBuff = `<br>${name.toUpperCase()}${element}${stacks}${buffDuration}${buffComponents.join('')}\n                ` + `${BuffOffensive.join('')}${BuffDefensive.join('')}${desc}${damage}`;\n            }\n            \n            \n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](fullBuff);\n\n            // Add the buff to a list of already displayed buffs. If a buff is here, we will skip displaying most of the details\n            displayedBuffs.push(currentBuff.name);\n            //console.l(`showing displayed buffs`);\n        })\n    },\n\n    displayStats(object) {\n        // need to display: atk, def, matk, mdef, speed, cchance, cdmg, eff, res, elementals\n        const displayText = {\n            atk: \"attack\",\n            def: \"defence\",\n            matk: \"magic attack\",\n            mdef: \"magic defence\",\n            speed: \"speed\",\n            crit_chance: \"critical chance\",\n            crit_damage: \"critical damage\",\n            effectiveness: \"effectiveness\",\n            resistance: \"resistance\"\n        };\n\n        const statsToGet = [\"atk\", \"matk\", \"def\", \"matk\", \"mdef\", \"speed\", \"crit_chance\", \"crit_damage\", \"effectiveness\", \"resistance\"];\n\n        var displayString = ``;\n\n        statsToGet.forEach(stat => { // get all the \"main stats\"\n            var value = object[stat];\n\n            if (stat == \"crit_chance\" || stat == \"crit_damage\") {\n                value = (value * 100).toString() + \"%\"\n            }\n\n            displayString += `<br> - ${displayText[stat]}: ${value}`;\n        });\n\n        // now get the elemenetal stats\n        Object.keys(object.elemental.offence).forEach(element => {\n            displayString += `<br> - ${object.elemental.offence[element]} ${element} attack`\n        });\n\n        Object.keys(object.elemental.defence).forEach(element => {\n            displayString += `<br> - ${object.elemental.defence[element]} ${element} defence`\n        });\n\n        // get description\n        displayString += `<br><br><b>Observations: </b>${object.desc}`;\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](displayString);\n\n\n    },\n\n    initShortcuts() {\n\n        // display the turn here\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`(Turn ${Combat.turn})`);\n\n        const player = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player;\n        const playerSkills = Combat.getPlayer().skillsList;\n\n        const temp = ['skills', 'status', 'enemy', 'pouch', 'flee'];\n\n        /*\n        playerSkills.forEach(skill => {\n            temp.unshift(skills[skill].name)\n        });\n        */\n\n        //console.log(playerSkills);\n        for (var i = playerSkills.length - 1; i > -1; i--) { // iterating backwards gives the desired order\n            //console.log(`current is ${playerSkills[i]}`)\n            temp.unshift(_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"][playerSkills[i]].name)\n        }\n\n        //console.l(\"showing temp\");\n        //console.l(temp);\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"](temp, { combat: true });\n\n    },\n\n    selectAttack() {\n        // getting fighters from the Combat object\n        const playerFighter = Combat.playerFighter;\n        const enemy = Combat.enemy;\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](Combat.selectAttack); // remove event listener\n        const choice = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]();\n\n        Combat.getEquips(playerFighter); // FOR TESTING PURPOSES\n\n        // react to decision\n        if (choice == 'skills') { // if they typed 'skills', show them their skills\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> ${Combat.getPlayer().skillsList.map(cur => {\n                return `${_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"][cur].name}: ${_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"][cur].description}`\n            }).join('<br><br>')}`)\n            Combat.initShortcuts();\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](Combat.selectAttack);\n\n        }\n\n        else if (choice == 'status') { // if they typed 'status', show them their buffs and debuffs'\n\n            Combat.displayStatus(playerFighter);\n\n            const func = () => {\n                Combat.combatMessage().forEach(message => {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](message);\n                })\n                Combat.initShortcuts();\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](Combat.selectAttack);\n            }\n\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"]([\"Input anything to continue...\"], func, false);\n    \n        }\n\n        else if (choice == 'enemy') { // if they typed 'enemy', show the enemy's buffs and debuffs\n\n            Combat.displayStatus(enemy);\n            \n            const func = () => {\n                Combat.combatMessage().forEach(message => {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](message);\n                })\n                Combat.initShortcuts();\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](Combat.selectAttack);\n            }\n\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"]([\"Input anything to continue...\"], func, false);\n\n        }\n\n        else if (choice == 'flee') {\n\n            Combat.flee();\n\n        }\n            \n        else if (playerFighter.skillsList.findIndex(cur => { return cur.replace(/_/g, \" \") == choice }) !== -1) { // if they typed a skill name, use the skill\n            //console.l(`${choice} used`)\n\n            // get the index of the skill, as it will be the same as in skillsList - idk if this is needed actually\n            //const skillIndex = skillsList.findIndex(cur => { return skillsList[cur] == choice });\n\n\n            // use the skill\n\n            if (_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].getSkill(choice).cost(playerFighter, enemy) == true) { // if the player can use the skill..\n                _skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].getSkill(choice).use(Combat.getPlayerAdd(playerFighter), enemy, 'player'); // enemy.stats has to be passed in since the battle-ready enemy object has exp, gold etc.\n                // ^ also we get the stats of the player's equips and pass those in too obvi <3\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> ${_skills__WEBPACK_IMPORTED_MODULE_2__[\"skills\"].getSkill(choice).cost(playerFighter, enemy)}`);\n                Combat.initShortcuts();\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](Combat.selectAttack);\n            }\n\n        }\n        \n        else if (choice == \"p\" || choice == \"pouch\") {\n            const pouch = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.pouch; // access actual thing not a copy since we..\n            // ..are consuming actual items\n            if (pouch.length == 0) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Your pouch is empty!\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](Combat.selectAttack);\n                Combat.initShortcuts();\n            } else {\n                Combat.pouchMenuLoop();\n            }\n        }\n        \n        else {\n\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid Input\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](Combat.selectAttack);\n            Combat.initShortcuts();\n        }\n    },\n\n    pouchMenuLoop() {\n        const player = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player;\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Currently in the pouch menu. Options:\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br> - Type the name of an item to use it.\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\" - b/back (to return)\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Items currently in pouch:<br>\");\n        player.stats.pouch.forEach(item => {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${item[1]} ${_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][item[0]].name} - ${_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][item[0]].desc}`);\n        });\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](Combat.pouchMenuResponse);\n    },\n\n    pouchMenuResponse() { // REFACTOR\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](Combat.pouchMenuResponse);\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        const player = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player;\n\n        if (player.stats.pouch.findIndex(item => Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"getItemIdentfierByName\"])(input) == item[0]) != -1) {\n            // if they inputted an item in the pouch, remove it\n            const itemIndex = player.stats.pouch.findIndex(item => Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"getItemIdentfierByName\"])(input) == item[0]);\n            const itemIdentifier = player.stats.pouch[itemIndex][0]; // \"health_potion\"\n            const itemName = _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][itemIdentifier].name; // health potion\n            const itemEffect = _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][itemIdentifier].use.battleEffect; // self explanatory\n            player.stats.pouch[itemIndex][1] -= 1; // consume one item\n            if (player.stats.pouch[itemIndex][1] == 0) { // if there are 0 of the item left, remove it entirely\n                player.stats.pouch.splice(itemIndex, 1);\n            };\n            itemEffect(); // invoke item effect\n        }\n\n        else if (input == \"b\" || input == \"back\") {\n            // return\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Returning..\");\n            Combat.combatMessage().forEach(message => {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](message);\n            })\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](Combat.selectAttack);\n            Combat.initShortcuts();\n        }\n\n        else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Invalid input\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](Combat.pouchMenuResponse);\n        }\n    }, \n\n    getEnemy() {\n        return Combat.enemy;\n    },\n\n    getPlayerAdd(player) { // for getting player + equips + sp allocations + stats from levelling up\n        //console.log(\"getplayeradd called\");\n        const stats = Combat.getEquips(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats); // getting equips\n        const elemental = Combat.getEquipsElements(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats);\n        const offence = elemental.offence;\n        const defence = elemental.defence;\n        //const sp = \n        const playerTemp = JSON.parse(JSON.stringify(player)); /* this is needed to create a 'deep copy' of the object, \n        wherein reference variables are not copied like nested objects */\n\n        //console.log(playerTemp);\n\n        Object.keys(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.sp_investment).forEach(stat => {\n            if (stat != \"health\" && stat != \"mana\") {\n                stats[stat] += _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.sp_investment[stat] * 2 // getting sp investment\n            } if (stat == \"mana\") {\n                stats.max_mana += _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.sp_investment[stat] * 15; // mana is a little different\n            }\n        })\n\n        Object.keys(playerTemp).forEach(cur => { // adding stats found to playerTemp\n            if (stats.hasOwnProperty(cur)) {\n                playerTemp[cur] += stats[cur]\n            }\n        })\n\n        // ADDING LEVEL STATS TO PLAYER\n        const levelUps = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.level - 1;\n        playerTemp.atk += levelUps * 2;\n        playerTemp.def += levelUps * 2;\n        playerTemp.matk += levelUps * 2;\n        playerTemp.mdef += levelUps * 2;\n        playerTemp.speed += levelUps * 2;\n\n        Object.keys(offence).forEach(cur => { // elemental offence\n            playerTemp.elemental.offence[cur] += offence[cur];\n        })\n\n        Object.keys(defence).forEach(cur => { // elemental defence\n            playerTemp.elemental.defence[cur] += defence[cur];\n        })\n\n\n        //console.log(playerTemp);\n        return playerTemp\n    },\n\n    getPlayer() {\n        return Combat.playerFighter;\n    },\n\n    checkStacks(buffs, buffToFind) {\n        var counter = 0;\n        var buff;\n        for (buff in buffs) {\n            //console.log(buff);\n            if (buffs[buff].name == buffToFind) {\n                counter += buffs[buff].stacks;\n            }\n        }\n        return counter;\n    },\n\n    calcActions(object, object2) {\n\n        //console.log(\"printing object, followed by object2\");\n        //console.log(object);\n        //console.log(object2);\n\n\n        if (object.speed * (1 + Combat.calcMod(\"speed\" ,object)) > object2.speed * (2 +  Combat.calcMod(\"speed\", object2))) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>The superior speed of the caster grants them an extra action!\");\n            return 2;\n        } else if (object.speed * (1 + Combat.calcMod(\"speed\", object)) < object2.speed * (0.25 + Combat.calcMod(\"speed\", object2))) {\n            //mainView.displayMessage(\"<br>The lesser speed of the caster causes them to struggle to keep up..\");\n            return 1;\n        } else { return 1 };\n    },\n\n    endBattle(victor) {\n\n        // reset the display\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player);\n        //console.log(\"update display called\");\n        \n\n        //console.log(this.enemy);\n        if (victor == \"enemy\") { // if the enemy won...\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${Combat.playerFighter.name} has been defeated!`);\n            const msgArr = [[\"The defeat in battle leaves you disoriented...<br>\", 1],\n                    [\"Fortuately, you awake in familiar surroundings...\", 1]]\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.current_health = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.max_health;\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.current_mana = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.max_mana;\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.current_stamina = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.max_stamina;\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](msgArr, \"battle\", _index__WEBPACK_IMPORTED_MODULE_7__[\"mainLoop\"]);\n\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>${Combat.playerFighter.name} emerged victorious!`);\n\n            // carry over hp and mana\n            //console.log(`playerfighter hp/mana ${Combat.playerFighter.health}/${Combat.playerFighter.mana}`)\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.current_health = Combat.getPlayer().health;\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.current_mana = Combat.getPlayer().mana;\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.current_stamina = Combat.getPlayer().stamina;\n            //console.log(`data hp/mana = ${gameData.data.player.stats.current_health}/${gameData.data.player.stats.current_mana}`)\n\n            // reward gold and exp\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.gold += this.enemy.gold;\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.exp += this.enemy.exp;\n\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Gained ${this.enemy.gold} gold!`);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Gained ${this.enemy.exp} exp!`);\n\n            const drops = this.enemy.drops;\n\n\n            var index = 0; \n            for (index in drops) { // for each possible drop..\n                const random = Math.round((Math.random() * 1000)); // we use 1000 so that drop chances like 0.5% are possible\n                const item = drops[index];\n                if (item[1] >= random) {\n                    if (item[3] != undefined) { // only reagents have this property\n                        Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"addItem\"])(item[0], item[2], item[3])\n                    } else { Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"addItem\"])(item[0]) };\n                }\n            }\n\n            // Call level up function\n            checkLevel();\n            // ---\n\n            this.endFunction.call(); // call endfunctio\n\n\n        } // if the player won (yippe!)\n\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player);\n\n    },\n\n    flee() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${Combat.playerFighter.name} has fled!`);\n        const msgArr = [[\"You just barely manage to escape, but lose your way as you run.<br>\", 1],\n                [\"Fortuately, you find yourself in familiar surroundings...\", 1]]\n        _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.current_health = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.max_health;\n        _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.current_mana = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.max_mana;\n        _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.current_stamina = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats.max_stamina;\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](msgArr, \"battle\", _index__WEBPACK_IMPORTED_MODULE_7__[\"mainLoop\"]);\n    },\n\n    heal(player) {\n        player.current_health = Combat.getMaxHealth(player);\n        player.current_mana = Combat.getPlayerAdd(player).max_mana;\n        player.current_stamina = Combat.getPlayerAdd(player).max_stamina;\n    }\n\n}\n\n\n// LEVEL UP //\nconst checkLevel = () => {\n    if (_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.level < _data__WEBPACK_IMPORTED_MODULE_3__[\"level_cap\"]) { // do first otherwise accessing a too high level will give an error\n        if (_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.exp >= _data__WEBPACK_IMPORTED_MODULE_3__[\"exp_requirements\"][_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.level]) { // if the player has enough exp..\n                       \n            const msgArr = (`<b><br>You can feel yourself becoming stronger...</b>` + \"<br>\" +\n            (`Levelled up to level ${_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.level + 1}`) + \"<br>\" +\n            (`+2 SP!`) + \"<br>\" +\n            (`+2 AP!`) + \"<br>\" +\n            (`+20 health!`) + \"<br>\" +\n            (`+2 all stats!<br>`))\n\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](msgArr);\n            processLevelUp();\n                        \n        };\n    \n    }\n    \n    \n}\n\nconst processLevelUp = () => {\n    const player = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player; // should've done this eariler in the function, haha...\n    const plrstats = player.stats;\n\n    // CORRECTING LEVEL, EXP, ECT.\n    player.exp -= _data__WEBPACK_IMPORTED_MODULE_3__[\"exp_requirements\"][player.level];\n    player.level += 1;\n    player.sp += 2;\n    player.ap += 2;\n\n    // EDITING STATS //\n    /*\n    plrstats.health += 20;\n    plrstats.current_health += 20;\n    plrstats.atk += 2;\n    plrstats.def += 2;\n    plrstats.matk += 2;\n    plrstats.mdef += 2;\n    plrstats.speed += 2;\n    */\n\n    Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"updateDisplay\"])(player);\n\n    checkLevel();\n}\n\n//# sourceURL=webpack:///./src/js/models/combat.js?");

/***/ }),

/***/ "./src/js/models/crafting.js":
/*!***********************************!*\
  !*** ./src/js/models/crafting.js ***!
  \***********************************/
/*! exports provided: initCrafting, getCraftingDetails, resetCrafting, unlockRecipes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initCrafting\", function() { return initCrafting; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCraftingDetails\", function() { return getCraftingDetails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resetCrafting\", function() { return resetCrafting; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unlockRecipes\", function() { return unlockRecipes; });\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var _items__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./items */ \"./src/js/models/items.js\");\n/* harmony import */ var _views_baseView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../views/baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! .. */ \"./src/js/index.js\");\n/* harmony import */ var _baseModel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./baseModel */ \"./src/js/models/baseModel.js\");\n/* harmony import */ var _directories_recipes_recipes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../directories/recipes/recipes */ \"./src/directories/recipes/recipes.js\");\n\n\n\n\n\n\n\n\nconst recipes = _directories_recipes_recipes__WEBPACK_IMPORTED_MODULE_6__[\"recipeDirectory\"];\n\nconst floorRecipes = {\n    0: [\"wooden_sword\", \"health_potion\"],\n\n    1: [\"wooden_sword\", \"wooden_stave\", \"wooden_armour\", \"wooden_trousers\", \"leather_cap\",\n    \"leather_armour\", \"leather_pants\", \"wolven_reavers\", \"leather\", \"pickaxe\", \"blue_vine_charm\", \"vinewarding_charm\",\n    \"bearkiller_charm\", \"canine_charm\", \"vine_armour\"]\n};\n\nconst initCrafting = (returnFunction, recipesAvailable = undefined) => {\n    recipeHandler.returnFunction = returnFunction; // so the player knows where to go back to\n    recipeHandler.recipesAvailable = recipesAvailable;\n\n    // -- TUTORIAL -- \\\\\n    const tutorials = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].tutorials;\n    if (tutorials.includes('crafting_1') == false && _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].special.doingTutorial == true) {\n        _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].tutorials.push('crafting_1');\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"tutorialMessages\"].crafting_1, recipeHandler.recipesLoop);\n    }\n    else {\n        recipeHandler.recipesLoop();\n    }\n\n}\n\nconst getCraftingDetails = () => {\n    return {\n         recipesAvailable: recipeHandler.recipesAvailable,\n         currentRecipe: recipeHandler.currentRecipe,\n         recipesArray: recipeHandler.recipesArray,\n         returnFunctionm: recipeHandler.returnFunction,\n         craftingFromNpc: recipeHandler.craftingFromNpc\n    }\n}\n\nconst resetCrafting = () => {\n    recipeHandler.reset();\n}\n\nconst recipeHandler = {\n    \n    recipesAvailable: undefined, // if we are using a craftsperson\n    currentRecipe: undefined,\n    recipesArray: undefined, // because the order we display them will change\n    returnFunction: undefined,\n    craftingFromNpc: undefined,\n\n    reset() {\n        this.recipesAvailable = undefined,\n        this.currentRecipe = undefined,\n        this.recipesArray = undefined,\n        this.returnFunction = undefined,\n        this.craftingFromNpc = undefined\n    },\n    \n    recipesLoop: (showMsg = true) => {\n        if (recipeHandler.recipesAvailable == undefined) {\n            // player is using their own recipes\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}Currently in the recipes menu. Input 'f'/'floor' to use the recipes allocated` +\n            ` to your floor. If you have any personal recipes, input 'p'/'personal' in order to access them.`);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Input <b>'b'</b> or <b>back</b> to return.\")\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.recipesLoopResponse);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"]([\"floor\", \"personal\", \"back\"]);\n            recipeHandler.craftingFromNpc = false;\n\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Currently crafting using recipes you do not own...\");\n            recipeHandler.craftingFromNpc = true;\n            recipeHandler.recipesLoop2();\n        }\n    },\n\n    recipesLoopResponse() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](recipeHandler.recipesLoopResponse);\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        if (input == \"f\" || input == \"floor\") {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Using floor recipes..\");\n            recipeHandler.recipesAvailable = floorRecipes[_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].current_floor];\n            recipeHandler.recipesLoop2();\n        }\n        else if (input == \"p\" || input == \"personal\") {\n            const personalRecipes = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.recipes;\n            if (personalRecipes.length == 0) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>You don't have any personal recipes!\");\n                recipeHandler.recipesLoop();\n\n            } else {\n                recipeHandler.recipesLoop2();\n            }\n        }\n        else if (input == \"b\" || input == \"back\") {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Returning...\");\n            // reset recipe handler\n            recipeHandler.recipesAvailable = undefined; // if we are using a craftsperson\n            recipeHandler.currentRecipe =  undefined;\n            recipeHandler.recipesArray = undefined; // because the order we display them will change\n            recipeHandler.craftingFromNpc = undefined;\n\n            recipeHandler.returnFunction();\n            recipeHandler.returnFunction = undefined;\n        }\n        else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input.\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.recipesLoopResponse);\n        }\n    },\n\n    recipesLoop2: (showMsg = true) => {\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player, \"normal\");\n\n        if (showMsg) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}Input 'a' to see them all in alphabetical order, ` + \n            `or input 'r' to see first all recipes that can be crafted.`);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Input <b>'b'/'back'</b> to return.\")\n        }\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"]([\"alphabetical\", \"ready\", \"back\"]);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.displayRecipes);\n    },\n\n    displayRecipes: () => {\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](recipeHandler.displayRecipes);\n\n        const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n\n        // first things first, sort the recipes the player has\n        \n        var recipesArr;\n        if (recipeHandler.recipesAvailable == undefined) {\n            recipesArr = player.recipes.map(recipe => {\n                return recipes[recipe];\n            })\n        } else {\n            recipesArr = recipeHandler.recipesAvailable.map(recipe => {\n                return recipes[recipe];\n            })\n        }\n       //console.log(\"LOGGING RECIPES ARR\");\n       //console.log(recipesArr);\n       //console.log(recipeHandler.recipesAvailable);\n       //console.log(recipeHandler.finishFunction);\n\n        const alphabet = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a','b','c','d','e','f','g','h','i','j','k',\n        'l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];\n\n        var listed = false; // will be used to ensure we only operate on the list if they asked for one\n\n        switch (input) {\n            case \"alphabetical\":\n            case \"a\":\n                listed = true;\n                for (var i = 0; i < recipesArr.length; i++) {\n                    for (var x = 1; x < recipesArr.length; x++) {\n                        var foundShorter = false;\n                        var pos = 0;\n                        while (foundShorter == false) {\n                            const letterA = alphabet.indexOf(recipesArr[x].name[pos].toLowerCase()) // getting the pos. in the alphabet of first letter\n                            const letterB = alphabet.indexOf(recipesArr[x-1].name[pos].toLowerCase()); // see above\n                            if (letterA < letterB) { // if the item infront is in front in the alphabet\n                                // we need to change that\n                                const temp = recipesArr[x];\n                                recipesArr[x] = recipesArr[x - 1];\n                                recipesArr[x - 1] = temp; // \n                                foundShorter = true;\n                            } else if (letterA > letterB) {\n                                foundShorter = true; // this means they are the right way around\n                            } else { // stop the loop if we have already reached the end of one of the letters\n                                if (pos + 1 >= recipesArr[x].name.length || pos + 1 >= recipesArr[x - 1].name.length) {\n                                    foundShorter = true;\n                                } else { pos ++ }; \n                            }\n                        }\n                    }\n                }\n                break;\n\n            case \"ready\":\n            case \"r\":\n                listed = true;\n                var counter = 0;\n                for (var i = 1; i < recipesArr.length; i++) {\n                    if (recipeHandler.checkReady(recipesArr[i], inventory)) {\n                        const temp = {...recipesArr[i]} // we need to copy it since we are going to delete the original\n                        delete recipesArr[i];\n                        recipesArr.unshift(temp)\n                        i++;\n                        counter++;\n                        if (counter == recipesArr.length) {\n                            i = recipesArr.length // otherwise this script will loop if all of the recipes are ready\n                        };\n                    }\n                };\n                recipesArr = recipesArr.filter(function( element ) {\n                    return element !== undefined;\n                });\n                break; \n\n            case \"back\":\n            case \"b\":\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Returning...\");\n\n                if (recipeHandler.craftingFromNpc == true) {\n                    // for crafting with a NPC, this is essentially the highest-level menu. But for crafting from menu...\n                    // ..., we need to return to recipesLoop(1).\n                    // reset recipe handler\n                    recipeHandler.recipesAvailable = undefined;\n                    recipeHandler.currentRecipe =  undefined;\n                    recipeHandler.recipesArray = undefined; // because the order we display them will change\n                    recipeHandler.craftingFromNpc = undefined;\n\n                    recipeHandler.returnFunction();\n                    recipeHandler.returnFunction = undefined;\n                } else {\n                    recipeHandler.recipesAvailable = undefined;\n                    recipeHandler.recipesLoop();\n                }\n                break;\n\n            default:\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input.\");\n                recipeHandler.recipesLoop2(false);\n                break;\n            }\n            \n            if (listed) {\n\n\n                recipeHandler.recipesArray = recipesArr;\n\n                //console.log(\"LOGGING RECIPES ARR\");\n                //console.log(recipesArr);\n    \n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}Showing recipes...`);\n                // display the recipes\n                recipesArr.forEach(recipe => {\n                    const notation = (recipeHandler.checkReady(recipe, inventory) == true ? '[X]' : '[ ]');\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${recipesArr.indexOf(recipe) + 1} - ${recipe.name} (${notation})`)\n                })\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}Say the name or number of a recipe to access it. From there you can see the` +\n                ` items and gold required, and craft the recipe if you desire as well.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Input <b>'b'</b> or <b>'back'</b> to return.\")\n    \n                var inputShortcuts = recipesArr.map(recipe => {\n                    return recipe.name\n                }) // these are objects right? haha\n\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.recipesMenu);\n            };\n\n    },\n\n    recipesMenu: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](recipeHandler.recipesMenu);\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n        const recipesArr = recipeHandler.recipesArray;\n\n        // process input\n        // if the player enters 's' or 'scroll', enter scroll mode\n        // if the player enters the name of a recipe, move to recipe menu\n        // if the player enters the number of a recipe, move to recipe menu\n        // if the player enters back, move back to recipes main loop\n        // if the player enters anything else, inform that their input is invalid and put them back here\n\n        const index = parseInt(input);\n        var wasIndex = false;\n\n        if (index.toString() != \"NaN\") {\n            if (recipesArr.length > index - 1) {\n                wasIndex = true;\n            }\n        }\n\n\n        \n        var wasName = false;\n        var recipe;\n        recipesArr.forEach(_recipe => {\n            if (_recipe.name.toLowerCase() == input) {\n                wasName = true;\n                //console.log(`logging recipe -1`);\n                //console.log(_recipe);\n                recipe = _recipe; // if the input was a name, this will save the recipe so we don't have to find it again\n            }\n        })\n\n\n        switch (true) {\n\n            case (wasIndex): {\n                const recipe = recipesArr[index - 1];\n                recipeHandler.currentRecipe = recipesArr[index - 1];\n                recipeHandler.recipeLoop();\n                break;\n            }\n\n            case (wasName): {\n                /*const _index = recipesArr.findIndex(recipe => {\n                    recipe.name.toLowerCase() == input;\n                });\n                //console.log(`index RN is ${_index}`);\n                const recipe = recipesArr[_index - 1];*/\n                //console.log(`logging recipe`);\n                //console.log(recipe);\n                recipeHandler.currentRecipe = recipe;\n                recipeHandler.recipeLoop();\n                break;\n            }\n\n            case (input == \"b\"):\n            case (input == \"back\"): {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}Returning..`);\n                recipeHandler.recipesLoop2();\n                break;\n            }\n\n            default: {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}Invalid input.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.recipesMenu);\n            }\n\n        }\n    },\n\n    recipeLoop: () => {\n\n        const recipesArr = recipeHandler.recipesArr;\n        const recipe = recipeHandler.currentRecipe;\n        const inventory = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.inventory;\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}Currently viewing ${recipe.name} recipe.`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`The following is required:`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${recipe.gold} gold (You have ${_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.gold})`)\n        recipe.items.forEach(item => {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${item[1]} ${_items__WEBPACK_IMPORTED_MODULE_2__[\"items\"][item[0]].name}${item[1] > 1 ? 's' : ''} (You have ${Object(_items__WEBPACK_IMPORTED_MODULE_2__[\"getQuantity\"])(item[0], inventory)})`)\n        });\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>The recipe will craft the following item:`);\n        Object(_items__WEBPACK_IMPORTED_MODULE_2__[\"displayDetails\"])(_items__WEBPACK_IMPORTED_MODULE_2__[\"items\"][recipe.item], true, true, true, false, true);\n\n        const canCraft = recipeHandler.checkReady(recipe, inventory);\n\n        if (canCraft) { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>This item can be crafted.\")};\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - c/craft (to craft it, if possible).`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - z (to scroll up; looking through more recipes)`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - x (to scroll down; looking through more recipes)`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - l (reprint list of recipes, and your position)`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - b/back (to return)`);\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"](['up', 'down', 'list', 'craft', 'back']);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.recipeMenu)\n\n    },\n\n    recipeMenu: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](recipeHandler.recipeMenu);\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n        const recipesArr = recipeHandler.recipesArray;\n       //console.log(recipesArr);\n        const recipe = recipeHandler.currentRecipe;\n        const inventory = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.inventory;\n\n        // if the player inputted z, look at the item 1 index below current\n        // if the player inputted x, look at the item 1 index above current\n        // if the player inputted b or back, perform recipesLoop\n        // if the player inputted anything else, state invalid input\n        \n        var currentIndex = recipesArr.findIndex(_recipe => { // we need to know this to scroll forward or backward\n           //console.log(_recipe);\n            return recipe.name == _recipe.name;\n        })\n\n        switch (input) {\n            \n            case 'up':\n            case 'z': {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}Scrolling back..`);\n                if (currentIndex == 0) { currentIndex = recipesArr.length - 1} else { currentIndex-- };\n                recipeHandler.currentRecipe = recipesArr[currentIndex];\n                //console.log(recipesArr);\n                //console.log(recipesArr[newIndex]);\n                //console.log(currentIndex);\n                recipeHandler.recipeLoop();\n                \n                break;    \n            }\n\n            case 'down':\n            case 'x': {\n                var newIndex;\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}Scrolling forward..`);\n                if (currentIndex == recipesArr.length - 1) { currentIndex = 0} else { currentIndex++ };\n                recipeHandler.currentRecipe = recipesArr[currentIndex];\n                recipeHandler.recipeLoop();\n                \n                break;    \n            }\n\n            case 'list':\n            case 'l': {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}Displaying recipes...`);\n                var notation\n                recipesArr.forEach(recipe => {\n                    if (recipe.name == recipeHandler.currentRecipe.name) {\n                        notation = '<b>';\n                    } else { notation = '' };\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${notation}${recipe.name}${notation == '<b>' ? '</b>' : ''}`);\n                })\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>You are still in the recipe menu. See above options.\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.recipeMenu);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"](['up', 'down', 'list', 'craft', 'back']);\n                break;\n            }\n\n            case 'craft':\n            case 'c': {\n                const canCraft = recipeHandler.checkReady(recipeHandler.currentRecipe, inventory);\n                if (!canCraft) {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>This item cannot be crafted.\");\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.recipeMenu);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"](['up', 'down', 'list', 'craft', 'back']);\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}How many of this item would you like to craft? Please input the ` +\n                    ` number you would like to craft, or input '0' if you would like to return.`);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.inputQuantity);\n                }\n                break;\n            }\n\n            case 'back':\n            case 'b': {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Returning...\");\n                recipeHandler.recipesLoop();\n                break;\n            }\n\n            default: {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input.\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.recipeMenu);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"](['up', 'down', 'list', 'craft', 'back']);\n            }\n        }\n\n    },\n\n    inputQuantity: () => {\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](recipeHandler.inputQuantity);\n\n        const inventory = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.inventory;\n\n        if (parseInt(input).toString() == 'NaN') {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input.\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.inputQuantity);\n        } else if (parseInt(input) == 0) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Returning...\");\n            recipeHandler.recipeLoop();\n        } else {\n            const amount = parseInt(input);\n            const tempRecipe = JSON.parse(JSON.stringify(recipeHandler.currentRecipe)); // we will use this to see if they have enough reagents/items\n            tempRecipe.items.forEach(value => {\n                value[1] = value[1] * amount;\n            });\n            tempRecipe.gold = tempRecipe.gold * amount;\n            \n            //console.log(\"logging temp recipe\");\n            //console.log(tempRecipe);\n\n            const canCraft = recipeHandler.checkReady(tempRecipe, inventory);\n            \n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}In order to craft ${input} ${_items__WEBPACK_IMPORTED_MODULE_2__[\"items\"][recipeHandler.currentRecipe.item].name}` +\n             `${amount > 1 ? 's' : ''}, You will need the following items:`);\n\n            // we know they have at least 1 of each item, so fewer checks will be needed here\n\n            tempRecipe.items.forEach(item => {\n                const itemName = item[0];\n                const itemAmount = item[1]\n                const playerAmount = Object(_items__WEBPACK_IMPORTED_MODULE_2__[\"getQuantity\"])(itemName, inventory);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${itemAmount} ${_items__WEBPACK_IMPORTED_MODULE_2__[\"items\"][itemName].name} (You have ${playerAmount})`);\n            })\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${tempRecipe.gold} gold`)\n\n            if (!canCraft) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"]([[\"<br>You cannot craft this much of that item!\", 2]], \"outside\", () => {\n                    recipeHandler.recipeLoop();\n                })\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Are you sure you would like to craft ${amount}` +\n                 ` ${_items__WEBPACK_IMPORTED_MODULE_2__[\"items\"][recipeHandler.currentRecipe.item].name}? Input 'y'/'yes' to confirm, or enter` +\n                 ` anything else to return.`)\n                 recipeHandler.craftAmount = amount;\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](recipeHandler.craftConfirmation);\n            }\n        }\n\n    },\n\n    craftConfirmation: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](recipeHandler.craftConfirmation);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](recipeHandler.craftConfirmation);\n\n        const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n\n        if (input == 'y' || input == 'yes') {\n            const recipe = recipeHandler.currentRecipe;\n            const amount = recipeHandler.craftAmount;\n\n            for (var i = 0; i < amount; i++) {\n                player.gold -= recipe.gold;\n                recipe.items.forEach(item => {\n                    Object(_items__WEBPACK_IMPORTED_MODULE_2__[\"removeItem\"])(item[0], item[1])\n                });\n            }\n\n            Object(_items__WEBPACK_IMPORTED_MODULE_2__[\"addItem\"])(recipe.item, amount, amount);\n            Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"updateDisplay\"])(player, \"normal\");\n\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"]([[`${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"separator\"]}Returning to recipe menu...`, 2]], \"outside\", () => {\n                recipeHandler.recipeLoop();\n            })\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Returning...\");\n            recipeHandler.recipeLoop();\n        }\n\n    },\n\n    checkReady: (recipe, inventory) => { // checks if a recipe can be crafted or not\n        const inv = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.inventory;\n        const needed = recipe.items;\n        var owned = true;\n        \n        needed.forEach(item => {\n            // check if the item is a reagent\n            // ..if a reagent, find and check quantity accordingly \n            // same if item\n            var quantity;\n           //console.log(item);\n            if ((Object(_items__WEBPACK_IMPORTED_MODULE_2__[\"getQuantity\"])(item[0], inv) >= item[1]) == false) {\n                owned = false;\n            }\n            \n        })\n\n        if (_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.gold < recipe.gold) {\n            owned = false;\n        };\n\n        return owned;\n    }\n}\n\nconst unlockRecipes = (recipe, showUnlock = true) => {\n    if (recipe[0].length == 1) {\n        recipe = [recipe];\n    }\n    recipe.forEach(recipeName => {\n       //console.log(recipeName);\n        if (recipes[recipeName] != undefined) {\n            // ensure the player doesn't already have the recipe\n            if (_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.recipes.indexOf(recipeName) == -1) {\n                _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.recipes.push(recipeName);\n                if (showUnlock) {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Unlocked recipe [${recipes[recipeName].name}]`);\n                }\n            } else {\n               //console.log(\"recipe already owned\");\n            }\n        } else {\n           //console.log(\"recipe does not exist\");\n        } \n    });\n}\n\n//# sourceURL=webpack:///./src/js/models/crafting.js?");

/***/ }),

/***/ "./src/js/models/data.js":
/*!*******************************!*\
  !*** ./src/js/models/data.js ***!
  \*******************************/
/*! exports provided: data, floors, settings, level_cap, exp_requirements, sp_investment_caps, constants, disciplines, flags */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"data\", function() { return data; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"floors\", function() { return floors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"settings\", function() { return settings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"level_cap\", function() { return level_cap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"exp_requirements\", function() { return exp_requirements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sp_investment_caps\", function() { return sp_investment_caps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"constants\", function() { return constants; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"disciplines\", function() { return disciplines; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flags\", function() { return flags; });\nconst data = {\n    player: {\n        name,\n        gold: 100,\n        exp: 0,\n        level: 1,\n        sp: 0,\n        ap: 0,\n        sp_investment: {\n            health: 0,\n            mana: 0,\n            atk: 0,\n            def: 0,\n            matk: 0,\n            mdef: 0,\n            speed: 0\n        },\n        stats: {\n            health: 60,\n            current_health: 60,\n            max_sp: 100,\n            max_mana: 100,\n            current_mana: 100,\n            max_stamina: 100,\n            current_stamina: 100,\n            atk: 30,\n            def: 30,\n            matk: 30,\n            mdef: 30,\n            speed: 20,\n            crit_chance: 0.1,\n            crit_damage: 1.5,\n            effectiveness: 0,\n            resistance: 0,\n            evasion: 0,\n            elemental: {\n                offence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                },\n                defence: {\n                    none: 100,\n                    physical: 100,\n                    fire: 100,\n                    water: 100,\n                    earth: 100,\n                    wind: 100,\n                    thunder: 100,\n                    dark: 100,\n                    light: 100\n                }\n            },\n            skills: [\n                'attack',\n                'guard',\n                'adventurer-0',\n                'adventurer-1'\n            ],\n            equips: {\n                weapon: undefined,\n                head: undefined,\n                body: undefined,\n                legs: undefined,\n                misc1: undefined,\n                misc2: undefined\n            },\n            pouch: [] // store like reagents in inventory [item_name, amount]\n        },\n        inventory: [], // for  normal items, place the name of the item, for reagents, an array [item_name, amount]\n        library: [ // should contain a reference to the skill in question in disciplines; ex adventurer-1 or whatever.\n            'attack',\n            'guard',\n            'adventurer-0',\n            'adventurer-1'\n\n        ], // all skills known, including those in the skills array\n        recipes: [\n            // place name of the recipe in here\n        ],\n        maps: {\n            floor0: [...Array(65)].map(e => Array(65).fill(undefined)),\n            floor1: [...Array(65)].map(e => Array(65).fill(undefined))\n        },\n        exploreCache: {\n            zone: undefined,\n            coordinates: [],\n        }\n    },\n    max_floor: 1,\n    current_floor: 1,\n    first_time: {\n        explore: true,\n        //shop: true,\n        equip: true,\n        stats: true,\n        crafting: true,\n        //settings: true,\n        game: true,\n        combat: true\n    },\n    version: 0.182,\n    unlocked: {\n        explore: true,\n        shop: true,\n        inventory: true,\n        stats: true,\n        crafting: true,\n        settings: true,\n        ascend: true,\n    },\n    tutorials: [],\n    special: {\n        doingTutorial: false,\n        clearedTutorialTrue: false,\n        clearedTutorial: false,\n        canToggleAutosave: true,\n        dataCache: {}\n    },\n    presents: [\n        \n    ]\n};\n\nconst floors = {\n    max: 1,\n    1: {\n        boss: 'flame_minotaur'\n    }\n};\n\nconst settings = {\n    messageDelay: 0.8,\n    battleMessageDelay: 0.6,\n    scrollStyle: 'input',\n    toggleShortcut: '',\n    scrollLimit: 200,\n    mainTextSize: \"17px\",\n    miscTextSize: \"17px\",\n    statsTextSize: \"16px\",\n    stickyInputShortcut: {\n        on: false,\n        active: false\n    },\n    autoSave: true\n}\n\nconst level_cap = 25;\n\nconst exp_requirements = { // this could easily be an array but making it an object improves readability\n    1: 100, // each property shows the exp required to advance from the current level to the next,\n    2: 400, // so 1 being equal to 100 means that 100 exp is required to advance from level 1 (to level 2)\n    3: 800,\n    4: 1100,\n    5: 1500,\n    6: 2000,\n    7: 3000,\n    8: 3500,\n    9: 4000,\n    10: 4500,\n    11: 5000,\n    12: 5500,\n    13: 6100,\n    14: 6700,\n    15: 7500,\n    16: 8500,\n    17: 9600,\n    18: 10700,\n    19: 12000,\n    20: 14000,\n    21: 16500,\n    22: 19000,\n    23: 23000,\n    24: 26000,\n    25: 30000,\n}\n\nconst sp_investment_caps = {\n    1: 2,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 7,\n    9: 8,\n    9: 8,\n    10: 9,\n    11: 9,\n    12: 9,\n    13: 9,\n    14: 10,\n    15: 10,\n    16: 10,\n    17: 11,\n    18: 11,\n    19: 11,\n    20: 12,\n    21: 12,\n    22: 12,\n    23: 13,\n    24: 14,\n    25: 15\n}\n\nconst constants = {\n    damageCap: 999,\n    minBuffMod: 0.1,\n    maxBuffMod: 5,\n    minElementMod: -99,\n    maxElementMod: 500,\n    pouchMaxStorage: 3\n}\n\nconst disciplines = {\n    adventurer: {\n        name: \"adventurer\",\n        requirements: {\n            skills: [],\n            level: 1,\n            flags: []\n        },\n        cost: {\n            gold: 0,\n            items: []\n        },\n        skills: [\n            {\n                name: \"boost\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: [],\n                },\n                disciple: \"adventurer\",\n                cost: {\n                    gold: 0,\n                    items: [],\n                    ap: 1\n                },\n                code: \"adventurer-0\",\n                unlocked: true,\n                unlearnable: false\n                \n            },\n            {\n                name: \"check\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"adventurer\",\n                cost: {\n                    gold: 25,\n                    items: [],\n                    ap: 1\n                },\n                code: \"adventurer-1\",\n                unlocked: true,\n                unlearnable: false\n            },\n            {\n                name: \"brutal_swipe\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"adventurer\",\n                cost: {\n                    gold: 40,\n                    items: [],\n                    ap: 2\n                },\n                code: \"adventurer-2\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"dagger_throw\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"adventurer\",\n                cost: {\n                    gold: 40,\n                    items: [],\n                    ap: 2\n                },\n                code: \"adventurer-3\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"piercing_dagger_throw\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"adventurer\",\n                cost: {\n                    gold: 40,\n                    items: [],\n                    ap: 2\n                },\n                code: \"adventurer-4\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"smokescreen\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"adventurer\",\n                cost: {\n                    gold: 40,\n                    items: [],\n                    ap: 2\n                },\n                code: \"adventurer-5\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"hex\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"adventurer\",\n                cost: {\n                    gold: 25,\n                    items: [],\n                    ap: 1\n                },\n                code: \"adventurer-6\",\n                unlocked: false,\n                unlearnable: true\n            },\n            \n        ],\n        unlocked: true,\n        visible: true,\n        complete: false,\n        conditions: {\n            level: 1,\n            discplines: []\n        }\n    },\n    \n    mage: {\n        name: \"mage\",\n        desc: \"A magic-based discipline that has access to elemental attacks of the Fire, Water and Earth elements. Using one\" +\n        \" grants the user an 'elemental charge', which can be consumed using 'Enforce Energy' or 'Imbue Energy' in order to apply certain effects.\" +\n        \" Charges can be fused by using different elemental attacks while having certain charges already applied. By using\" +\n        \" skills in certain orders to create special charges, the mage can induce powerful effects and deal high damage.\",\n        requirements: {\n            skills: [],\n            level: 4,\n            flags: []\n        },\n        cost: {\n            gold: 100,\n            items: []\n        },\n        skills: [\n            {\n                name: \"fireball\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"mage\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 2\n                },\n                code: \"mage-0\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"icebolt\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"mage\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 2\n                },\n                code: \"mage-1\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"lesser_quake\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"mage\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 2\n                },\n                code: \"mage-2\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"imbue_energy\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"mage\",\n                cost: {\n                    gold: 25,\n                    items: [],\n                    ap: 1\n                },\n                code: \"mage-3\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"enforce_energy\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"mage\",\n                cost: {\n                    gold: 25,\n                    items: [],\n                    ap: 1\n                },\n                code: \"mage-4\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"blood_pact\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"mage\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 2\n                },\n                code: \"mage-5\",\n                unlocked: false,\n                unlearnable: true\n            },\n        ],\n        unlocked: false,\n        visible: true,\n        complete: false,\n        conditions: {\n            level: 1,\n            discplines: []\n        }\n    },\n    \n    guardian: {\n        name: \"guardian\",\n        desc: \"A primarily defensive discipline that focuses on lasting and keeping itself alive with by increasing its defence, removing\" +\n        \" debuffs from themselves and removing buffs from the enemy. When needed, they can use the powerful 'Sentinel Blow' \" +\n        \" which deals damage based on the user's defence stat instead of attack to deal high amounts of damage.\",\n        requirements: {\n            skills: [],\n            level: 4,\n            flags: []\n        },\n        cost: {\n            gold: 100,\n            items: []\n        },\n        skills: [\n            {\n                name: \"sentinel_blow\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"guardian\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 1\n                },\n                code: \"guardian-0\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"stalwart_strike\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"guardian\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 1\n                },\n                code: \"guardian-1\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"debilitate\",\n                requirements: {\n                    skills: [],\n                    level: 3,\n                    flags: []\n                },\n                disciple: \"guardian\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 2\n                },\n                code: \"guardian-2\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"enduring_fortress\",\n                requirements: {\n                    skills: [],\n                    level: 3,\n                    flags: []\n                },\n                disciple: \"guardian\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 2\n                },\n                code: \"guardian-3\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"sacred_shield\",\n                requirements: {\n                    skills: [],\n                    level: 3,\n                    flags: []\n                },\n                disciple: \"guardian\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 2\n                },\n                code: \"guardian-4\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"guard_conversion\",\n                requirements: {\n                    skills: [],\n                    level: 3,\n                    flags: []\n                },\n                disciple: \"guardian\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 2\n                },\n                code: \"guardian-5\",\n                unlocked: false,\n                unlearnable: true\n            },\n        ],\n        unlocked: false,\n        visible: true,\n        complete: false,\n        conditions: {\n            level: 1,\n            discplines: []\n        }\n    },\n\n    ninja: {\n        name: \"ninja\",\n        desc: \"Probably the most complex of the starter disciplines, the ninja uses skills that apply certain buffs and debuffs\" +\n        \", which can be 'chained' into other skills while those buffs or debuffs are applied for special effects. When the\" +\n        \" ninja has applied a sufficient number of buffs or debuffs, they can fuse them into one powerful buff or debuff using\" +\n        \" the 'Enforce Infliction' and 'Imbue Infliction' skills, so that they can stack them all over again. 'Shadow Strike'\" +\n        \" serves as a powerful attack that when used right, can grant SP to further extend the user's turn to deal greater damage.\",\n        requirements: {\n            skills: [],\n            level: 4,\n            flags: []\n        },\n        cost: {\n            gold: 100,\n            items: []\n        },\n        skills: [\n            {\n                name: \"swift_strike\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"ninja\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 1\n                },\n                code: \"ninja-0\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"shinobi_strike\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"ninja\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 1\n                },\n                code: \"ninja-1\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"crippling_blow\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"ninja\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 2\n                },\n                code: \"ninja-2\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"enfeebling_blow\",\n                requirements: {\n                    skills: [],\n                    level: 1,\n                    flags: []\n                },\n                disciple: \"ninja\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 2\n                },\n                code: \"ninja-3\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"imbue_infliction\",\n                requirements: {\n                    skills: [],\n                    level: 3,\n                    flags: []\n                },\n                disciple: \"ninja\",\n                cost: {\n                    gold: 25,\n                    items: [],\n                    ap: 2\n                },\n                code: \"ninja-4\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"enforce_infliction\",\n                requirements: {\n                    skills: [],\n                    level: 4,\n                    flags: []\n                },\n                disciple: \"ninja\",\n                cost: {\n                    gold: 25,\n                    items: [],\n                    ap: 2\n                },\n                code: \"ninja-5\",\n                unlocked: false,\n                unlearnable: true\n            },\n            {\n                name: \"shadow_strike\",\n                requirements: {\n                    skills: [],\n                    level: 4,\n                    flags: []\n                },\n                disciple: \"ninja\",\n                cost: {\n                    gold: 50,\n                    items: [],\n                    ap: 2\n                },\n                code: \"ninja-6\",\n                unlocked: false,\n                unlearnable: true\n            },\n        ],\n        unlocked: false,\n        visible: true,\n        complete: false,\n        conditions: {\n            level: 1,\n            discplines: []\n        }\n    },\n\n    lore: {\n        name: \"lore\",\n        requirements: {\n            skills: [],\n            level: 99999999999\n        },\n        cost: {\n                    gold: 0,\n                    items: []\n        },\n        skills: [\n            {\n                        name: \"boost\",\n                        requirements: {\n                            skills: [],\n                            level: 1,\n                            flags: [],\n                        },\n                        disciple: \"lore\",\n                        cost: {\n                            gold: 0,\n                            items: [],\n                            ap: 1\n                        },\n                        code: \"lore-0\",\n                        unlocked: false,\n                        unlearnable: true\n                        \n            },\n            {\n                        name: \"check\",\n                        requirements: {\n                            skills: [],\n                            level: 1,\n                            flags: []\n                        },\n                        disciple: \"lore\",\n                        cost: {\n                            gold: 0,\n                            items: [],\n                            ap: 1\n                        },\n                        code: \"lore-1\",\n                        unlocked: false,\n                        unlearnable: true\n            },\n            {\n                        name: \"forgotten_haste\",\n                        requirements: {\n                            skills: [],\n                            level: 1,\n                            flags: []\n                        },\n                        disciple: \"lore\",\n                        cost: {\n                            gold: 0,\n                            items: [],\n                            ap: 0\n                        },\n                        code: \"lore-2\",\n                        unlocked: false,\n                        unlearnable: true\n            },\n            {\n                        name: \"divine_protection\",\n                        requirements: {\n                            skills: [],\n                            level: 1,\n                            flags: [\"f0_fought_young_wolf\"]\n                        },\n                        disciple: \"lore\",\n                        cost: {\n                            gold: 0,\n                            items: [],\n                            ap: 0\n                        },\n                        code: \"lore-3\",\n                        unlocked: false,\n                        unlearnable: true\n            },\n            {\n                        name: \"guard_crush\",\n                        requirements: {\n                            skills: [],\n                            level: 1,\n                            flags: [\"f0_fought_young_wolf\"]\n                        },\n                        disciple: \"lore\",\n                        cost: {\n                            gold: 0,\n                            items: [],\n                            ap: 0\n                        },\n                        code: \"lore-4\",\n                        unlocked: false,\n                        unlearnable: true\n            },\n            {\n                        name: \"smite\",\n                        requirements: {\n                            skills: [],\n                            level: 1,\n                            flags: [\"f0_fought_young_wolf\"]\n                        },\n                        disciple: \"lore\",\n                        cost: {\n                            gold: 0,\n                            items: [],\n                            ap: 0\n                        },\n                        code: \"lore-5\",\n                        unlocked: false,\n                        unlearnable: true\n            },\n                    \n        ],\n        unlocked: false,\n        visible: false,\n        complete: false,\n        conditions: {\n            level: 999999999999,\n            discplines: []\n        }\n    }\n}\n\nconst flags = {\n\n    impossible_flag: {\n        desc: \"Used for locking content indefinitely. Will never be set to true.\",\n        complete: false\n    },\n\n    // FLOOR ZERO\n    /* #region */\n    f0_done_intro: {\n        desc: \"Complete the intro on floor zero.\",\n        complete: false\n    },\n\n    f0_fought_slime: {\n        desc: \"Fight the slime on floor zero.\",\n        complete: false,\n    },\n\n    f0_learnt_prerequisite_skills_1: {\n        desc: \"Learn boost and check on floor zero.\",\n        complete: false,\n    },\n\n    f0_fought_young_wolf: {\n        desc: \"Fight the young wolf on floor zero.\",\n        complete: false\n    },\n\n    f0_learnt_prerequisite_skills_2: {\n        desc: \"Learn the remainders of Lore's skills on floor zero.\",\n        complete: false\n    },\n\n    f0_been_taught_crafting: {\n        desc: \"Be told about crafting by Lucia.\",\n        complete: false\n    },\n\n    f0_crafted_required_items: {\n        desc: \"Crafted a wooden sword and health potion.\",\n        complete: false\n    },\n\n    f0_passed_t4: {\n        desc: \"Show Lucia the health potion and wooden sword you've crafted on floor zero.\",\n        complete: false\n    },\n\n    f0_fought_dreadful_wolf: {\n        desc: \"Defeat the dreadful wolf on floor zero\",\n        complete: false\n    },\n\n    f0_fought_charon: {\n        desc: \"Defeat the myserious enemy on floor zero.\",\n        complete: false\n    },\n\n    // INTERESTING ITEMS\n    /* #region */\n    f0_picked_up_greater_health_potion: {\n        desc: \"Pick up a greater health potion on floor zero.\",\n        complete: false\n    },\n    f0_picked_up_greater_mana_potion: {\n        desc: \"Pick up a greater mana potion on floor zero.\",\n        complete: false\n    },\n    f0_picked_up_invigorating_flower: {\n        desc: \"Pick up an invigorating flower on floor zero.\",\n        complete: false\n    },\n    f0_picked_up_desperate_flower: {\n        desc: \"Pick up a desperate flower on floor zero.\",\n        complete: false\n    },\n    f0_picked_up_stamina_vial: {\n        desc: \"Pick up a stamina vial on floor zero.\",\n        complete: false\n    },\n    f0_picked_up_monster_essence: {\n        desc: \"Pick up monster essence on floor zero.\",\n        complete: false\n    },\n    f0_picked_up_simple_sword: {\n        desc: \"Pick up a simple sword on floor zero.\",\n        complete: false\n    },\n    f0_picked_up_leather_cap: {\n        desc: \"Pick up a leather cap on floor zero.\",\n        complete: false\n    },\n    f0_picked_up_wolfhide_charm: {\n        desc: \"Pick up a wolfhide charm on floor zero.\",\n        complete: false\n    },\n    /* #endregion */\n    /* #endregion */\n\n    // FLOOR ONE\n    /* #region  */\n    f1_spoken_to_tutorial_man: {\n        desc: \"Speak to the tutorial man on floor one.\",\n        complete: false\n    },\n\n    beatSlime: {\n        desc: \"Defeat the slime on floor one.\",\n        complete: false\n    },\n\n    f1_spoken_to_little_girl: {\n        desc: \"Speak to a little girl on floor one about her slime problem.\",\n        complete: false\n    },\n\n    f1_helped_little_girl: {\n        desc: \"Help a little girl on floor one with her slime problem.\",\n        complete: false\n    },\n\n    f1_spoken_to_docile_slime: {\n        desc: \"Interact with a docile slime on floor one.\",\n        complete: false\n    },\n\n    f1_helped_docile_slime: {\n        desc: \"Help a docile slime on floor one gather their bretheren.\",\n        complete: false\n    },\n\n    f1_spoken_to_rude_kid: {\n        desc: \"Speak to a rude kid on floor one.\",\n        complete: false\n    },\n    \n    f1_kicked_rude_kids_shin: {\n        desc: \"Kick the shin of a rude kid on floor one.\",\n        complete: false\n    },\n\n    f1_extended_convo_with_rude_kid: {\n        desc: \"Have an extended conversation with a rude kid on floor one.\",\n        complete: false\n    },\n\n    f1_spoken_to_little_boy: {\n        desc: \"Speak to a young boy in the dark forest of floor one.\",\n        complete: false\n    },\n    \n    f1_helped_little_boy: {\n        desc: \"Help the young boy in the dark forest of floor one.\",\n        complete: false\n    },\n\n    f1_spoken_to_wanderer_collector: {\n        desc: \"Speak to the collector of wanderer memorabilia on floor one.\",\n        complete: false\n    },\n\n    f1_helped_wanderer_collector: {\n        desc: \"Help out the collector of wanderer memorabilia on floor one.\",\n        complete: false\n    },\n\n    f1_met_wanderer_at_statue: {\n        desc: \"Meet a wanderer at the statue of Lucia, the Solace Goddess on floor one.\",\n        complete: false\n    },\n\n    f1_spoken_to_lost_teenager: {\n        desc: \"Speak to a lost teenager in the forest on floor one.\",\n        complete: false,\n    },\n\n    f1_spoken_to_traveller_woman: {\n        desc: \"Speak to a travelling woman with a green backpack on floor one.\",\n        complete: false\n    },\n\n    f1_helped_alchemist_lady: {\n        desc: \"Help an alchemist lady on floor one and in return, be taught how to make crafted health potions.\",\n        complete: false,\n    },\n\n    f1_spoken_to_alchemist_lady: {\n        desc: \"Speak to an alchemist lady on floor one.\",\n        complete: false\n    },\n\n    f1_gotten_beginner_recipes: {\n        desc: \"Receive beginner recipes from the craftswomen in the settlement at floor one.\",\n        complete: false\n    },\n\n    f1_gotten_advanced_recipes: {\n        desc: \"Received advanced recipes from the artisan in the settlement at floor one.\",\n        complete: false\n    },\n\n    f1_spoken_to_hermit: {\n        desc: \"Speak to the travelling hermit on floor one.\",\n        complete: false\n    },\n\n    f1_spoken_to_person_looking_for_settlement: {\n        desc: \"Speak to the person looking for the settlement on floor one.\",\n        complete: false\n    },\n\n    f1_helped_person_looking_for_settlement: {\n        desc: \"Help the person looking for the settlement on floor one.\",\n        complete: false\n    },\n\n    f1_taken_crafted_sword: {\n        desc: \"Successfully taken a crafted sword in the forest on floor one.\",\n        complete: false\n    },\n\n    f1_bought_from_teenage_mage: {\n        desc: \"Buy a cheat sheet from a teenage mage on floor one.\",\n        complete: false,\n    },\n\n    f1_spoken_to_forest_craftsman: {\n        desc: \"Speak to the craftsman in the forest settlement on floor one.\",\n        complete: false,\n    },\n\n    f1_spoken_to_aina: {\n        desc: \"Speak to Aina in the forest settlement on the floor one\",\n        complete: false\n    \n    },\n\n    f1_spoken_to_sora: {\n        desc: \"Speak to Sora in the forest settlement on floor one.\",\n        complete: false\n    },\n\n    f1_spoken_to_daryl: {\n        desc: \"Speak to the teenage mage in the forest area on floor one.\",\n        complete: false\n    },\n\n    f1_spoken_to_ora: {\n        desc: \"Speak to Ora in the deep forest on floor one.\", \n        complete: false\n    },\n\n    f1_defeated_ora: {\n        desc: \"Defeat Ora in battle in the deep forest on floor one.\",\n        complete: false\n    },\n\n    f1_found_guarded_earthen_manasoul: {\n        desc: \"Find and obtain the earthen manasoul in the deep forest on floor one.\", \n        complete: false\n    },\n\n    f1_spoken_to_person_looking_for_cat: {\n        desc: \"Speak to the person looking for their cat in the deep forest on floor one.\",\n        complete: false,\n    },\n\n    f1_helped_person_looking_for_cat: {\n        desc: \"Help out the person looking for their cat in the deep forest on floor one.\",\n        complete: false,\n    },\n\n    f1_found_bellas_cat: {\n        desc: \"Find Bella's cat, Rayla, in the dark forest on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_gold_1: {\n        desc: \"Picked up gold in the deep forest on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_gold_2: {\n        desc: \"Picked up gold in the deep forest on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_gold_3: {\n        desc: \"Picked up gold in the deep forest on floor one.\",\n        complete: false\n    },\n\n    thanks_for_playing: {\n        desc: \"Thanks for playing TRPG!\",\n        complete: false,\n    },\n\n    // INTERESTING ITEM FLAGS\n    /* #region */\n    f1_picked_up_hydra_staff: {\n        desc: \"Pick up a hydra staff on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_crown_of_darkness: {\n        desc: \"Pick up a crown of darkness on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_simple_sword: {\n        desc: \"Pick up a simple sword on floor one.\",\n        complete: false\n    },\n    \n    f1_picked_up_damaged_helm: {\n        desc: \"Pick up a damaged helm on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_metal_stave: {\n        desc: \"Pick up a metal stave on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_silver_axe: {\n        desc: \"Pick up a silver axe on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_silver_dagger: {\n        desc: \"Pick up a silver dagger on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_pickaxe: {\n        desc: \"Pick up a pickaxe on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_feathervine_sword: {\n        desc: \"Pick up a feathervine sword on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_silver_helm: {\n        desc: \"Pick up a silver helm on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_wolfhide_cap: {\n        desc: \"Pick up a wolfhide cap on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_vine_helmet: {\n        desc: \"Pick up a vine helmet on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_ninja_headcloak: {\n        desc: \"Pick up a ninja headcloak on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_makeshift_steel_armour: {\n        desc: \"Pick up a makeshift steel armour on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_vine_armour: {\n        desc: \"Pick up a vine armour on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_vine_pantaloons: {\n        desc: \"Pick up a vine pantaloons on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_silver_legwear: {\n        desc: \"Pick up a silver legwear on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_slime_ball: {\n        desc: \"Pick up a slime ball on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_weak_vine: {\n        desc: \"Pick up a weak vine on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_hempweed_ligament: {\n        desc: \"Pick up a hempweed ligament on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_wood: {\n        desc: \"Pick up a wood on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_steel: {\n        desc: \"Pick up a steel on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_health_potion: {\n        desc: \"Pick up a health potion on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_greater_health_potion: {\n        desc: \"Pick up a greater health potion on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_crafted_health_potion: {\n        desc: \"Pick up a crafted health potion on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_greater_mana_potion: {\n        desc: \"Pick up a crafted mana potion on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_mana_potion: {\n        desc: \"Pick up a mana potion on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_earthen_shield_potion: {\n        desc: \"Pick up an earthen shield potion on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_brown_pelt: {\n        desc: \"Pick up some brown pelt on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_venomous_claw: {\n        desc: \"Pick up a venomous claw on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_crafted_mana_potion: {\n        desc: \"Pick up a crafted mana potion on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_forest_explorer_daggers: {\n        desc: \"Pick up a forest explorer daggers on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_forest_explorer_cap: {\n        desc: \"Pick up a forest explorer cap on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_forest_explorer_armour: {\n        desc: \"Pick up a forest explorer armour on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_forest_explorer_pants: {\n        desc: \"Pick up a forest explorer pants on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_forest_explorer_pendant: {\n        desc: \"Pick up a forest explorer pendant on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_forest_explorer_charm: {\n        desc: \"Pick up a forest explorer charm on floor one.\",\n        complete: false\n    },\n\n    // ------------------------- DARK FOREST -------------------- \\\\\n\n    f1_picked_up_crafted_mana_potion_2: {\n        desc: \"Pick up a crafted mana potion on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_greater_health_potion_2: {\n        desc: \"Pick up a greater health potion on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_greater_mana_potion_2: {\n        desc: \"Pick up a greater mana potion on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_hempweed_ligament_2: {\n        desc: \"Pick up a hempweed ligament on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_makeshift_steel_legwear: {\n        desc: \"Pick up a makeshift steel legwear on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_runic_dagger: {\n        desc: \"Pick up a runic dagger on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_deep_forest_explorer_scythe: {\n        desc: \"Pick up a deep forest explorer scythe on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_deep_forest_explorer_cap: {\n        desc: \"Pick up a deep forest explorer cap on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_deep_forest_explorer_armour: {\n        desc: \"Pick up a deep forest explorer armour on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_deep_forest_explorer_pants: {\n        desc: \"Pick up a deep forest explorer pants on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_deep_forest_explorer_necklace: {\n        desc: \"Pick up a deep forest explorer necklace on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_deep_forest_explorer_bracelet: {\n        desc: \"Pick up a deep forest explorer bracelet on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_forest_scourge_scale: {\n        desc: \"Pick up a forest scourge scale on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_venomous_claw_2: {\n        desc: \"Pick up a venomous claw on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_magic_bark: {\n        desc: \"Pick up a magic bark on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_sharp_claw_2: {\n        desc: \"Pick up a sharp claw on floor one.\",\n        complete: false\n    },\n\n    f1_picked_up_ailwarder_charm: {\n        desc: \"Pick up an ailwarder charm on floor one.\",\n        complete: false\n    },\n\n    /* #endregion */\n    /* #endregion */\n};\n\n//# sourceURL=webpack:///./src/js/models/data.js?");

/***/ }),

/***/ "./src/js/models/enemies.js":
/*!**********************************!*\
  !*** ./src/js/models/enemies.js ***!
  \**********************************/
/*! exports provided: enemies, ai, mode, getEnemy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enemies\", function() { return enemies; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ai\", function() { return ai; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mode\", function() { return mode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getEnemy\", function() { return getEnemy; });\n/* harmony import */ var _skills__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./skills */ \"./src/js/models/skills.js\");\n/* harmony import */ var _combat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./combat */ \"./src/js/models/combat.js\");\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _directories_enemies_enemies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../directories/enemies/enemies */ \"./src/directories/enemies/enemies.js\");\n\n\n\n\n\nconst enemies = _directories_enemies_enemies__WEBPACK_IMPORTED_MODULE_3__[\"enemiesDirectory\"];\n\nconst ai = _directories_enemies_enemies__WEBPACK_IMPORTED_MODULE_3__[\"aiDirectory\"];\n\nconst mode = _directories_enemies_enemies__WEBPACK_IMPORTED_MODULE_3__[\"modeDirectory\"];\n\nconst getEnemy = enemy => {\n    return enemies[enemy];\n}\n\n\n//# sourceURL=webpack:///./src/js/models/enemies.js?");

/***/ }),

/***/ "./src/js/models/equipMode.js":
/*!************************************!*\
  !*** ./src/js/models/equipMode.js ***!
  \************************************/
/*! exports provided: equipMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equipMenu\", function() { return equipMenu; });\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var _views_statView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../views/statView */ \"./src/js/views/statView.js\");\n/* harmony import */ var _views_miscView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../views/miscView */ \"./src/js/views/miscView.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../index */ \"./src/js/index.js\");\n/* harmony import */ var _items__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./items */ \"./src/js/models/items.js\");\n/* harmony import */ var _views_baseView__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../views/baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _baseModel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./baseModel */ \"./src/js/models/baseModel.js\");\n/* harmony import */ var _combat__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./combat */ \"./src/js/models/combat.js\");\n/* harmony import */ var _rooms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./rooms */ \"./src/js/models/rooms.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst equipMenu = {\n\n    currentItem: null, // saved as whatever the string is in the inventory; the identifier corresponding to the item in items\n    currentIndex: -1, // the index of the currently selected item, used mainly for making the selected item bold in display\n    returnFunction: null, // self-explanatory\n\n    reset() {\n        this.currentItem = null,\n        this.currentIndex = -1,\n        this.returnFunction = null\n    },\n\n    menuLoop() {\n        equipMenu.currentIndex = -1;\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player, \"normal\");\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"separator\"]}Entering inventory. Say the name of an item to view its details and equip it.` +\n        ` Say the name of a slot to unequip the item in that slot. Say 'p'/'pouch' to enter the pouch menu, which will allow` +\n        ' you to remove items from your pouch (to add items, first navigate to the item in your inventory)');\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Input <b>'b'/'back'</b> to return.\")\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.inventoryMenu);\n    },\n\n    inventoryMenu() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](equipMenu.inventoryMenu);\n        const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase(); // set to lower case here so don't have to keep doing for this function\n        const item_index = player.inventory.length > 0 ? player.inventory.findIndex(cur => {\n            //console.log(cur);\n            if (cur[1].length == 1) {\n                return _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][cur].name.toLowerCase() == input.toLowerCase();\n            } else { return _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][cur[0]].name.toLowerCase() == input.toLowerCase() };\n        }) : -1; // try to find index of item in inventory with input as the name of the item.\n\n        if (player.stats.equips.hasOwnProperty(input)) { // if they enter the name of an item slot..\n            if (player.stats.equips[input] != undefined) { // and if there is something equipped in that slot..\n                // call unequip item on the item slot\n                equipMenu.unequipItem(input);\n            }\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.inventoryMenu); // resetting the mainview so the player can continue inputting stuff\n\n        } \n        \n        else if (item_index != -1) { // else if the input matches the name of an item in inventory..\n            // display the name and details of the item, and give the player options as to what to do with it\n            const item = player.inventory[item_index];\n            const itemDetails = _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][item]; // get the item from the item directory\n            // preparing to display all the item properties\n\n            equipMenu.currentItem = item;\n            equipMenu.itemLoop();\n\n        } \n        \n        else if (input == \"back\" || input == \"b\") {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Returning...\");\n            equipMenu.currentIndex = -1 // we need to reset this, it is MANDATORY\n            equipMenu.returnFunction();\n            equipMenu.reset();\n        } \n        \n        else if (input == \"p\" || input == \"pouch\") {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Entering the pouch menu...\");\n            equipMenu.pouchMenuLoop();\n        }\n\n        else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.inventoryMenu);\n        }\n\n        //updateDisplay(gameData.data.player, \"normal\");\n            \n    },\n\n    pouchMenuLoop() {\n        const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n\n        if (player.stats.pouch.length == 0) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Your pouch is empty!\");\n            equipMenu.menuLoop();\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Currently in the pouch menu. Options:\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br> - Type the name of an item to remove it from the pouch.\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\" - b/back (to return)\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Items currently in pouch:<br>\");\n            player.stats.pouch.forEach(item => {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${item[1]} ${_items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][item[0]].name}`);\n            });\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.pouchMenuResponse);\n        }\n        \n    },\n\n    pouchMenuResponse() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](equipMenu.pouchMenuResponse);\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n\n        if (player.stats.pouch.findIndex(item => Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"getItemIdentfierByName\"])(input) == item[0]) != -1) {\n            // if they inputted an item in the pouch, remove it\n            const itemIndex = player.stats.pouch.findIndex(item => Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"getItemIdentfierByName\"])(input) == item[0]);\n            const itemIdentifier = player.stats.pouch[itemIndex][0];\n            const itemAmount = player.stats.pouch[itemIndex][1]\n            const itemName = _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][itemIdentifier].name;\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Removed ${itemAmount} ${itemName}`);\n            Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"addItem\"])(itemIdentifier, itemAmount, itemAmount);\n            player.stats.pouch.splice(itemIndex, 1);\n            equipMenu.pouchMenuLoop();\n        }\n\n        else if (input == \"b\" || input == \"back\") {\n            // return\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Returning..\");\n            equipMenu.menuLoop();\n        }\n\n        else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Invalid input\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.pouchMenuResponse);\n        }\n    }, \n\n    itemLoop() {\n\n        const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n\n        const item = equipMenu.currentItem;\n        const itemDetails = (Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"isReagent\"])(item) ? _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][item[0]] : _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][item]);\n\n\n        equipMenu.currentIndex = player.inventory.findIndex(item => {\n            if (Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"isReagent\"])(item)) {\n                return item[0] == equipMenu.currentItem[0];\n            } else {\n                return item == equipMenu.currentItem;\n        }});\n\n\n        const itemIterable = JSON.parse(JSON.stringify(itemDetails)); // creating a copy of the object so we don't mess w/ the one in inventory\n        var elementIterable = null;\n        if (itemIterable.hasOwnProperty(\"elemental\")) {\n            elementIterable = JSON.parse(JSON.stringify(itemIterable.elemental)); // need to copy since its an object\n            delete itemIterable.elemental; // we want to iterate over element separately since its more complex\n        } else {\n        }\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>${itemDetails.name} selected.`);\n        Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"displayDetails\"])(itemDetails);\n\n\n        // this means the item can be equipped\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>say 'e'/'equip' to equip this item, and 'u'/'use to consume it.  Otherwise, enter 'b' to return. The item\" +\n        \"'s position in your inventory is marked in <b>bold</b>. Input 'z' to scroll up or 'x' to scroll down.\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Options:\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br> - e/equip (to equip it)\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br> - u/use (to consume it)\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br> - p/pouch (to add the item to your pouch - or remove it if it already added)\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br> - z to scroll up in inventory\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br> - x to scroll down in inventory\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br> - b/back to return\");\n\n        \n        equipMenu.currentItem = item;\n\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player, \"normal\");\n\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.itemMenu);\n    },\n\n    itemMenu() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](equipMenu.itemMenu);\n        const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        const item = equipMenu.currentItem;\n        const itemDetails = (Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"isReagent\"])(item) ? _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][item[0]] : _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][item]);\n\n        if (input == 'e' || input == 'equip') {\n            if (itemDetails.type == \"reagent\") {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>You cannot equip reagents.\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.itemMenu);\n            } else {\n                const item_index = player.inventory.findIndex(cur => {\n                    return cur == item.toLowerCase()\n                }) // we know the object exists because it was previously seleced\n                \n                if (itemDetails.type != \"misc\") {\n                    if (player.stats.equips[itemDetails.type] == undefined) { // if there is nothing in that slot..\n                        equipMenu.equipItem(item_index);\n                    } else {\n                        // if there is something in that slot, we need to unequip it first\n                        equipMenu.unequipItem(itemDetails.type);\n                        equipMenu.equipItem(item_index);\n                    }\n                } else {\n                    // need to handle misc differently since there are two misc slots\n                    if (player.stats.equips.misc1 != undefined && player.stats.equips.misc2 != undefined) {\n                        // we only need to do something if both slots are full, otherwise the equipItem funtion will handle it..\n                        // in this case just unequip whatever is in the first misc slot\n                        equipMenu.unequipItem(\"misc1\")\n                    }\n                    equipMenu.equipItem(item_index);\n                };\n\n                equipMenu.menuLoop();\n            }\n\n        }\n        \n        else if (input == \"u\" || input == \"use\") {\n            if (itemDetails.hasOwnProperty(\"use\") != true) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"This item cannot be used.\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.itemMenu);\n            } else {\n\n                // check use case\n                if (itemDetails.use.case != \"all\" && itemDetails.use.case != \"outside\") {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"This item cannot be used here!\");\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.itemMenu);\n                } else {\n                    const itemEffect = itemDetails.use.effect;\n                    var actuallyUse = true;\n                    itemEffect.forEach(effect => {\n                        switch (effect[1]) {\n\n                            case \"health\": {\n                                var amountToHeal;\n                                if (effect[2] == \"flat\") {\n                                    amountToHeal = effect[3];\n                                } else if (effect[2] == \"percentile\") {\n                                    amountToHeal = _combat__WEBPACK_IMPORTED_MODULE_8__[\"Combat\"].getMaxHealth(player.stats) * (effect[3] / 100);\n                                }\n                                if (player.stats.current_health + amountToHeal < 0) {\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Your health is too low to use that item!\");\n                                    actuallyUse = false;\n                                } else {\n                                   //console.log(player);\n                                    player.stats.current_health += amountToHeal;\n                                   //console.log(player);\n                                    if (player.stats.current_health > _combat__WEBPACK_IMPORTED_MODULE_8__[\"Combat\"].getMaxHealth(player.stats)) { player.stats.current_health = _combat__WEBPACK_IMPORTED_MODULE_8__[\"Combat\"].getMaxHealth(player.stats) }\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Recovered ${amountToHeal} HP!`);\n                                    //mainView.setInputResponse(equipMenu.itemMenu);\n                                    Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(player, \"normal\");\n                                }\n                                break;\n                            }\n\n                            case \"mana\": {\n                                var amountToHeal;\n                                if (effect[2] == \"flat\") {\n                                    amountToHeal = effect[3];\n                                } else if (effect[2] == \"percentile\") {\n                                    amountToHeal = _combat__WEBPACK_IMPORTED_MODULE_8__[\"Combat\"].getPlayerAdd(player.stats).max_mana * (effect[3] / 100);\n                                }\n                                if (player.stats.current_mana + amountToHeal < 0) {\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Your mana is too low to use that item!\");\n                                    actuallyUse = false;\n                                } else {\n                                   //console.log(player);\n                                    player.stats.current_mana += amountToHeal;\n                                   //console.log(player);\n                                    if (player.stats.current_mana > _combat__WEBPACK_IMPORTED_MODULE_8__[\"Combat\"].getPlayerAdd(player.stats).max_mana) {\n                                        player.stats.current_mana = _combat__WEBPACK_IMPORTED_MODULE_8__[\"Combat\"].getPlayerAdd(player.stats).max_mana;\n                                    }\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Recovered ${amountToHeal} MP!`);\n                                    //mainView.setInputResponse(equipMenu.itemMenu);\n                                    //updateDisplay(player, \"normal\");\n                                }\n                                break;\n                            }\n\n                            case \"stamina\": {\n                                var amountToHeal;\n                                if (effect[2] == \"flat\") {\n                                    amountToHeal = effect[3];\n                                } else if (effect[2] == \"percentile\") {\n                                    amountToHeal = _combat__WEBPACK_IMPORTED_MODULE_8__[\"Combat\"].getPlayerAdd(player.stats).max_stamina * (effect[3] / 100);\n                                }\n                                if (player.stats.current_mana + amountToHeal < 0) {\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Your stamina is too low to use that item!\");\n                                    actuallyUse = false;\n                                } else {\n                                   //console.log(player);\n                                    player.stats.current_stamina += amountToHeal;\n                                   //console.log(player);\n                                    if (player.stats.current_stamina > _combat__WEBPACK_IMPORTED_MODULE_8__[\"Combat\"].getPlayerAdd(player.stats).max_stamina) {\n                                        player.stats.current_stamina = _combat__WEBPACK_IMPORTED_MODULE_8__[\"Combat\"].getPlayerAdd(player.stats).max_stamina;\n                                    }\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Recovered ${amountToHeal} stamina!`);\n                                    //mainView.setInputResponse(equipMenu.itemMenu);\n                                    //updateDisplay(player, \"normal\");\n                                }\n                                break;\n                            }\n\n                            \n                            case \"teleport\": {\n                                const currentZone = Object(_rooms__WEBPACK_IMPORTED_MODULE_9__[\"getCurrentZone\"])();\n                                if (currentZone == undefined) {\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('<br>This item cannot be used right now!');\n                                    actuallyUse = false;\n                                } else {\n                                    if (currentZone.name != effect[2]) {\n                                        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>You can't use this item right now! You're in the wrong zone!\");\n                                        actuallyUse = false;\n                                    } else {\n                                        Object(_rooms__WEBPACK_IMPORTED_MODULE_9__[\"teleport\"])(effect[3])\n                                        \n                                    }\n                                }\n                                break;\n                            }\n                            \n\n                            default: {\n                                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Error occurred: Effect invalid\");\n                                actuallyUse = false;\n                                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.itemMenu);\n                            }\n                        };\n\n\n                        var goBack = false;\n                        if (actuallyUse) {\n                           //console.log(`AAAAAAAAAAAAAAAAAAAAAAAAAAAA ${getItemIdentfierByName(itemDetails.name)}`);\n                            Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"removeItem\"])(Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"getItemIdentfierByName\"])(itemDetails.name), 1);\n                            if (Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"getQuantity\"])(Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"getItemIdentfierByName\"])(itemDetails.name), _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.inventory) == 0) {\n                                goBack = true;\n                            }\n                        }\n\n                        if (!goBack) {\n                            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.itemMenu);\n                        } else { equipMenu.menuLoop() }\n                        Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(player, \"normal\");\n                    });\n                }\n            }\n        \n        }\n\n        else if (input == \"p\" || input == \"pouch\") {\n            const itemName = Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"getItemIdentfierByName\"])(itemDetails.name);\n            // check if the item is in the pouch. If so, remove it and return\n            if (player.stats.pouch.findIndex(item => item[0] == itemName) != -1) {\n                const itemIndex = player.stats.pouch.findIndex(item => item[0] == itemName);\n                const itemAmount = player.stats.pouch[itemIndex][1]\n                Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"addItem\"])(itemName, itemAmount, itemAmount);\n                player.stats.pouch.splice(itemIndex, 1);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Removed ${itemAmount} ${itemDetails.name} from the pouch.`);\n                equipMenu.itemLoop();\n            }\n\n            else if (itemDetails.hasOwnProperty(\"use\")) {\n                if (itemDetails.use.hasOwnProperty(\"battleEffect\")) {\n                    if (player.stats.pouch.length < _data__WEBPACK_IMPORTED_MODULE_1__[\"constants\"].pouchMaxStorage) {\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`How many ${itemDetails.name} would you like to add to your pouch? Input anything invalid to return.`)\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Do note that you cannot add more than ${itemDetails.use.pouchMax} of this item.`);\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.addPouchResponse);\n                    } else {\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<b>Your pouch is full!</b>\");\n                        equipMenu.itemLoop();\n                    }\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"]([[\"This item cannot be added to your pouch!\", 2]], \"outside\", equipMenu.itemLoop);\n                    //equipMenu.itemLoop();\n                }\n            }\n\n            else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"]([[\"This item cannot be added to your pouch!\", 2]], \"outside\", equipMenu.itemLoop);\n                //equipMenu.itemLoop();\n            }\n            // if not, ensure the item can be added to the pouch. If so, ask the player how many of the item they...\n            // want to add to the pouch.\n        }\n        \n        else if (input == \"z\" || input == \"x\") { // this is not really necessary, but it's here because I want to..\n            // ..keep this block somewhat separate\n\n            const currentItem = equipMenu.currentItem;\n\n\n            const itemIndex = equipMenu.currentIndex;\n\n            if (input == \"z\") {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"separator\"]}Scrolling up..`);\n\n                var newIndex = itemIndex - 1;\n                if (newIndex < 0) { newIndex = player.inventory.length - 1 };\n\n                var newItem;\n                if (Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"isReagent\"])(player.inventory[newIndex])) { // needed :(\n                    newItem = player.inventory[newIndex][0];\n                } else { newItem = player.inventory[newIndex]}\n\n                //console.log(player.inventory);\n                //console.log(`player len is ${player.inventory.length}`);\n\n\n                equipMenu.currentItem = player.inventory[newIndex];\n                equipMenu.itemLoop();\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"separator\"]}Scrolling down..`);\n               \n                var newIndex = itemIndex + 1;\n                if (newIndex == player.inventory.length) { newIndex = 0 };\n\n                var newItem;\n                if (Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"isReagent\"])(player.inventory[newIndex])) { // needed :(\n                    newItem = player.inventory[newIndex][0];\n                } else { newItem = player.inventory[newIndex]}\n\n                equipMenu.currentItem = player.inventory[newIndex];\n                equipMenu.itemLoop();\n            }\n        } else if (input == \"b\" || input == \"back\") {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"separator\"]}Returning...`);\n            equipMenu.menuLoop();\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input.\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](equipMenu.itemMenu);\n        }\n\n    },\n\n    addPouchResponse() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](equipMenu.addPouchResponse);\n        const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        const item = equipMenu.currentItem;\n        const itemDetails = (Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"isReagent\"])(item) ? _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][item[0]] : _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][item]);\n        const itemName = Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"getItemIdentfierByName\"])(itemDetails.name);\n        const itemIndex = player.inventory.findIndex(item => item[0] == itemName);\n\n\n        // if number inputted\n        if (parseInt(input).toString != \"NaN\") {\n            const amount = parseInt(input);\n            // and number is within pouchlimit\n            var removedAll = false;\n            if (amount > 0 && amount <= itemDetails.use.pouchMax) {\n                // and player has that number in inventory\n                if (amount <= player.inventory[itemIndex][1]) {\n                    // add item to pouch\n                    if (amount == player.inventory[itemIndex][1]) { removedAll = true };\n                    Object(_items__WEBPACK_IMPORTED_MODULE_5__[\"removeItem\"])(itemName, amount);\n                    player.stats.pouch.push([itemName, amount]);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Added ${amount} ${itemDetails.name} to pouch.`);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"When you want to remove this item from your pouch, if you have none of it left\" +\n                    \" in your inventory, you can remove it via the pouch menu accessible by inputting p/pouch instead of an item\" +\n                    \" name at the inventory menu.\");\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"You don't have enough of this item!\");\n                }\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"That amount is either beyond the pouch limit or below out of range!\");\n            }\n        \n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Invald input\");\n            equipMenu.itemLoop();\n        }\n\n        if (removedAll) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"]([[\"Returning..\", 2]], \"outside\", equipMenu.menuLoop);\n        }\n        else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"]([[\"Returning..\", 2]], \"outside\", equipMenu.itemLoop);\n        }\n        //equipMenu.itemLoop();\n    },\n\n    unequipItem(slot) {\n        const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n        const temp = player.stats.equips[slot] // we are going to delete the item and then add the temp into inventory\n        const tempDetails = _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][temp];\n        player.stats.equips[slot] = undefined;\n        player.inventory.push(temp); // adding item to inventory array\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"separator\"]}${tempDetails.name} unequipped.`); // telling the player item was unequipped\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(player, \"normal\");\n\n    },\n\n    equipItem(item_index) { // NEED TO EDIT\n        const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n        const temp = player.inventory[item_index]; // getting item from item dir. and copying it\n        const tempDetailsCopy = {..._items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][temp]};\n        if (tempDetailsCopy.type == \"misc\") { // misc. items have to be handled specially since there are two slots for them\n            if (player.stats.equips[\"misc1\"] == undefined) {\n                tempDetailsCopy.type = \"misc1\";\n            } else if (player.stats.equips[\"misc2\"] == undefined) {\n                tempDetailsCopy.type = \"misc2\";\n            } else {\n                tempDetailsCopy.type = \"misc1\"; // if this is not here, the type will remain \"misc\", which will raise an error later.\n                // setting it to \"misc1\" which will be full means that the game will inform the player that there is no slot\n                // for the misc item rather than raising an error\n            }\n        }; \n\n        // removeItem could be used here, but this procedure is uniform and using removeItem() would be superfluous so I didn't\n        if (player.stats.equips[tempDetailsCopy.type] == undefined) { // if there is no item equipped in that slot..\n            //console.log(`${tempDetailsCopy.type} selected`)\n            const itemIdentifier = player.inventory[item_index]; // \"slime_sword\" vs. \"Slime Sword\"\n            delete player.inventory[item_index]\n            player.stats.equips[tempDetailsCopy.type] = itemIdentifier;\n            /*if (temp.type == \"misc1\" || temp.type == \"misc2\") { // resetting misc type, see above subroutine with misc\n                temp.type = \"misc\";\n            };*/\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"separator\"]}${tempDetailsCopy.name} equipped.`);\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"There is already an item equipped in that slot.\"); // this will not happen but ill leave it here\n        }\n\n        for (var i = 0; i < player.inventory.length; i++) { // for loop needed since map/forEach skip empty objects\n            if (player.inventory[i] == undefined) { // if a certain index in inventory has value undefined...\n                player.inventory.splice(i, 1 ); // destroy it since otherwise it messes stuff up. yare yare\n            }\n        }\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(player, \"normal\");\n\n    }\n}\n\n\n\n//# sourceURL=webpack:///./src/js/models/equipMode.js?");

/***/ }),

/***/ "./src/js/models/helpModule.js":
/*!*************************************!*\
  !*** ./src/js/models/helpModule.js ***!
  \*************************************/
/*! exports provided: addHelp, centerHelp, prepareHelpModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addHelp\", function() { return addHelp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"centerHelp\", function() { return centerHelp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prepareHelpModule\", function() { return prepareHelpModule; });\n// -- CODE FOR THE HELP MODULE -- \\\\\n\nfunction addHelp() {\n    const helpBar = document.querySelector('.tab-container');\n    helpBar.style.visibility = \"visible\";\n}\n\nfunction centerHelp() {\n    const helpBar = document.querySelector('.tab-container');\n    helpBar.style.visibility = \"visible\";\n    helpBar.style.left = \"0px\";\n    helpBar.style.right = \"0px\";\n    helpBar.style.top = \"0px\";\n    helpBar.style.bottom = \"0px\";\n\n}\n\n// I am SORRY for using functon declarations here and nowhere else PLEASE forgive me for my inconsistency\n\nfunction closeTabs() {\n  const tabcontent = document.getElementsByClassName(\"tabcontent\");\n  for (var i = 0; i < tabcontent.length; i++) {\n    tabcontent[i].style.display = \"none\";\n  }\n\n      // Get all elements with class=\"tablinks\" and remove the class \"active\"\n  const tablinks = document.getElementsByClassName(\"tablinks\");\n  for (var i = 0; i < tablinks.length; i++) {\n    tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n  }\n}\n\nfunction changeTab(evt, cityName) {\n    // Declare all variables\n    var i, tabcontent, tablinks;\n  \n    // Get all elements with class=\"tabcontent\" and hide them\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\n    for (i = 0; i < tabcontent.length; i++) {\n      tabcontent[i].style.display = \"none\";\n    }\n  \n    // Get all elements with class=\"tablinks\" and remove the class \"active\"\n    tablinks = document.getElementsByClassName(\"tablinks\");\n    for (i = 0; i < tablinks.length; i++) {\n      tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n  \n    // Show the current tab, and add an \"active\" class to the button that opened the tab\n    document.getElementById(cityName).style.display = \"block\";\n    evt.currentTarget.className += \" active\";\n}\n\nfunction changeTab2(evt, cityName) {\n    // Declare all variables\n    var i, tabcontent, tablinks;\n  \n    // Get all elements with class=\"tabcontent\" and hide them\n    tabcontent = document.getElementsByClassName(\"tabcontent-2\");\n    for (i = 0; i < tabcontent.length; i++) {\n      tabcontent[i].style.display = \"none\";\n    }\n  \n    // Get all elements with class=\"tablinks\" and remove the class \"active\"\n    tablinks = document.getElementsByClassName(\"tablinks-2\");\n    for (i = 0; i < tablinks.length; i++) {\n      tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n  \n    // Show the current tab, and add an \"active\" class to the button that opened the tab\n    document.getElementById(cityName).style.display = \"block\";\n    evt.currentTarget.className += \" active\";\n}\nfunction removeHelp(event) {\n    closeTabs();\n    const helpBar = document.querySelector('.tab-container');\n    helpBar.style.visibility = \"hidden\";\n};\n\n\n// Make the DIV element draggable:\ndocument.addEventListener('DOMContentLoaded', (event) => {\n    dragElement(document.getElementById(\"draggable\"));\n  })\n\n\nfunction dragElement(elmnt) {\n  var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n  if (document.getElementById(elmnt.id + \"header\")) {\n    // if present, the header is where you move the DIV from:\n    document.getElementById(elmnt.id + \"header\").onmousedown = dragMouseDown;\n  } else {\n    // otherwise, move the DIV from anywhere inside the DIV:\n    elmnt.onmousedown = dragMouseDown;\n  }\n\n  function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onmouseup = closeDragElement;\n    // call a function whenever the cursor moves:\n    document.onmousemove = elementDrag;\n  }\n\n  function elementDrag(e) {\n    e = e || window.event;\n    e.preventDefault();\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    // set the element's new position:\n    elmnt.style.top = (elmnt.offsetTop - pos2) + \"px\";\n    elmnt.style.left = (elmnt.offsetLeft - pos1) + \"px\";\n  }\n\n  function closeDragElement() {\n    // stop moving when mouse button is released:\n    document.onmouseup = null;\n    document.onmousemove = null;\n  }\n}\n\n\n// ADDING EVENT LISTENERS\n\nfunction prepareHelpModule() {\n    const tablinks = document.getElementsByClassName('tablinks');\n    for (var i = 0; i < tablinks.length; i++) {\n        const tab = tablinks[i];\n        if (!tab.classList.contains(\"tablinks-2\") && tab.id != \"close\") {\n            const id = tab.id;\n            tab.addEventListener('click', (event) => { changeTab(event, id.slice(0, -5))} )\n        }\n        else if (tab.classList.contains(\"tablinks-2\")) {\n            const id = tab.id;\n            tab.addEventListener('click', (event) => { changeTab2(event, id.slice(0, -5))} )\n        }\n        else {\n            tab.addEventListener('click', (event) => removeHelp())\n        }\n        \n    }\n}\n\n\n//# sourceURL=webpack:///./src/js/models/helpModule.js?");

/***/ }),

/***/ "./src/js/models/initMenu.js":
/*!***********************************!*\
  !*** ./src/js/models/initMenu.js ***!
  \***********************************/
/*! exports provided: initEquip, zoneSetUp, getExploreDetails */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initEquip\", function() { return initEquip; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zoneSetUp\", function() { return zoneSetUp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getExploreDetails\", function() { return getExploreDetails; });\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var _views_statView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../views/statView */ \"./src/js/views/statView.js\");\n/* harmony import */ var _views_miscView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../views/miscView */ \"./src/js/views/miscView.js\");\n/* harmony import */ var _equipMode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./equipMode */ \"./src/js/models/equipMode.js\");\n/* harmony import */ var _rooms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rooms */ \"./src/js/models/rooms.js\");\n/* harmony import */ var _views_baseView__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../views/baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _models_baseModel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../models/baseModel */ \"./src/js/models/baseModel.js\");\n\n\n\n\n// -- inventory\n\n\n// -- rooms\n\n\n// - misc\n\n\n\n\nconst initEquip = (returnFunction) => {\n    _equipMode__WEBPACK_IMPORTED_MODULE_4__[\"equipMenu\"].returnFunction = returnFunction;\n\n    // -- TUTORIAL -- \\\\\n    const tutorials = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].tutorials;\n    if (tutorials.includes('inventory_1') == false && _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].special.doingTutorial == true) {\n        _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].tutorials.push('inventory_1');\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](_views_baseView__WEBPACK_IMPORTED_MODULE_6__[\"tutorialMessages\"].inventory_1, _equipMode__WEBPACK_IMPORTED_MODULE_4__[\"equipMenu\"].menuLoop);\n    }\n    else {\n        _equipMode__WEBPACK_IMPORTED_MODULE_4__[\"equipMenu\"].menuLoop();\n    }\n\n    \n};\n\nconst zoneSetUp = (zone, room = 'start', additionalArgs = {}) => {\n    _rooms__WEBPACK_IMPORTED_MODULE_5__[\"zoneExplorer\"].currentZone = _rooms__WEBPACK_IMPORTED_MODULE_5__[\"zones\"][zone];\n    const zoneDetails = _rooms__WEBPACK_IMPORTED_MODULE_5__[\"zones\"][zone].zone;\n    if (room == 'start') {\n       //console.log(\"(zonesetup) room equals start\");\n        for (var y = 0; y < zoneDetails.length; y++) {\n            for (var x = 0; x < zoneDetails[y].length; x++) {\n                if (zoneDetails[y][x] == \"s\") {\n                   //console.log(zoneDetails[y][x])\n                    _rooms__WEBPACK_IMPORTED_MODULE_5__[\"zoneExplorer\"].coordinates = [y, x];\n                    break;\n                }\n            }\n        }\n    // get coordinates. If room != \"start\", check if string, if not, then it is coordinates\n    } else if (typeof(room) == \"string\") {\n        // TBA\n    } else {\n        _rooms__WEBPACK_IMPORTED_MODULE_5__[\"zoneExplorer\"].coordinates = [room[0], room[1]];\n    }\n\n    // -- TUTORIAL -- \\\\\n    _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.exploreCache.zone = zone;\n    _rooms__WEBPACK_IMPORTED_MODULE_5__[\"zoneExplorer\"].roomLoop(additionalArgs);\n\n}\n\nconst getExploreDetails = () => {\n    return {\n        currentZone: _rooms__WEBPACK_IMPORTED_MODULE_5__[\"zoneExplorer\"].currentZone,\n        currentRoom: _rooms__WEBPACK_IMPORTED_MODULE_5__[\"zoneExplorer\"].currentRoom,\n        coordinates: _rooms__WEBPACK_IMPORTED_MODULE_5__[\"zoneExplorer\"].coordinates,\n        justEnteredRoom: _rooms__WEBPACK_IMPORTED_MODULE_5__[\"zoneExplorer\"].justEnteredRoom,\n        ambushed: _rooms__WEBPACK_IMPORTED_MODULE_5__[\"zoneExplorer\"].ambushed\n    }\n}\n\n//# sourceURL=webpack:///./src/js/models/initMenu.js?");

/***/ }),

/***/ "./src/js/models/items.js":
/*!********************************!*\
  !*** ./src/js/models/items.js ***!
  \********************************/
/*! exports provided: items, addItem, removeItem, displayDetails, isReagent, getName, getQuantity, getItemIdentfierByName, cleanInventory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"items\", function() { return items; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addItem\", function() { return addItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeItem\", function() { return removeItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"displayDetails\", function() { return displayDetails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isReagent\", function() { return isReagent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getName\", function() { return getName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getQuantity\", function() { return getQuantity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getItemIdentfierByName\", function() { return getItemIdentfierByName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cleanInventory\", function() { return cleanInventory; });\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var _directories_items_items__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../directories/items/items */ \"./src/directories/items/items.js\");\n\n\n\n\n/* ITEM TEMPLATE\n{\n            name: \"pendant\",\n            type: \"misc\",\n            speed: 10,\n            elemental: {\n                offence: {\n                },\n                defence: {\n                }\n            }\n        }\n*/\n\n/* REAGENT TEMPLATE\n    slime_ball: {\n        name: \"Slime Ball\",\n        type: \"reagent\",\n        desc: \"A ball of green slime. Although it has shape, it is easy to press into. Has a peculiar texture.\",\n}\n*/\n\nconst items = _directories_items_items__WEBPACK_IMPORTED_MODULE_2__[\"itemsDirectory\"];\n\n\n\nconst addItem = (thing, min = 1, max = 1) => {\n    const item = {...items[thing]}; // get the item from the item directory (copying it just incase)\n    const amount = Math.floor(Math.random() * (max - min + 1)) + min; // how many of the item we will add\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Attained ${amount} ${item.name}${amount > 1 ? 's' : ''}!`);\n    var alreadyAdded = false; // so we dont already add reagents\n    const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n    if (item.type == \"reagent\") {\n        //console.log(\"item is reagent\")\n        player.inventory.forEach(cur => {\n            //console.log(cur[1]);\n            //console.log(thing)\n            if (cur[0] == thing) {\n                cur[1] += amount\n                alreadyAdded = true;\n                //console.log(`item count increased ${cur[1]}`)\n            }\n        })\n    }\n\n    if (alreadyAdded == false) {\n        if (item.type != \"reagent\") {\n            for (var i = 1; i < amount + 1; i++) {\n                _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.inventory.push(thing); // add the item to the player's inventory\n            }\n        } else {\n            _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.inventory.push([thing, amount])\n            //console.log(gameData.data.player.inventory);\n            //console.log(item);\n\n        }\n\n    }\n}\n\nconst removeItem = (thing, amount) => {\n    const item = items[thing];\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Removed ${amount} ${item.name}${amount > 1 ? 's' : ''}!`);\n    var alreadyRemoved = false; // so we dont add already added reagents\n    const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n    if (item.type == \"reagent\") {\n        //console.log(\"item is reagent\")\n        const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n        player.inventory.forEach(cur => {\n            if (cur[0] == thing) {\n                cur[1] -= amount\n                if (cur[1] == 0) {\n                    const itemIndex = player.inventory.findIndex(cur_ => {\n                        return cur_[0] == thing;\n                    });\n                   //console.log(itemIndex);\n                    player.inventory.splice(itemIndex, 1);\n                }\n                alreadyRemoved = true;\n                //console.log(`item count decreased ${cur[1]}`)\n            }\n        })\n    }\n\n    if (alreadyRemoved == false) { // item must then be an equipment already added\n        for (var i = 1; i < amount + 1; i++) {\n            if (player.inventory.indexOf(thing) != -1) { // so we don't delete thing in index -1\n                delete player.inventory[player.inventory.indexOf(thing)] // remove item from plr inventory\n                cleanInventory();\n                alreadyRemoved = false;\n            }\n        }\n    }\n\n    cleanInventory();\n\n    if (alreadyRemoved == false) {\n        return -1;\n    } else {\n        return 0; // 0 = item(s) removed, -1 = no items(s) removed\n    }\n\n}  \n\nconst displayDetails = (item, stats = true, desc = true, type = true, sell_value = true, name = false, pouch_limit = true) => {\n    const statsList = [\"atk\", \"def\", \"matk\", \"mdef\", \"speed\", \"crit_chance\", \"crit_damage\", \"effectiveness\", \"resistance\",\n    \"max_stamina\", \"max_mana\", \"evasion\"];\n    const statsNames = [\"attack\", \"defence\", \"magic attack\", \"magic defence\", \"speed\", \"critical chance\", \"critical damage\",\n     \"effectiveness\", \"resistance\", \"max stamina\", \"max mana\", \"evasion\"];\n    \n     if (name) {_views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](item.name)};\n     Object.keys(item).forEach(cur => {\n        const property = item[cur];\n        if (type && cur == \"type\") { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Type: ${property}`)}\n        if (stats && statsList.includes(cur)) {\n            if ([\"evasion\", \"crit_chance\", \"crit_damage\"].includes(cur)) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${Math.round(property * 100)}% ${statsNames[statsList.indexOf(cur)]}`)\n            }\n            else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${property} ${statsNames[statsList.indexOf(cur)]}`)\n            }\n\n        }\n        if (stats && cur == \"elemental\") {\n            Object.keys(property.offence).forEach(el => {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${property.offence[el] < 0 ? '' : '+'}${property.offence[el]} ${el} attack`)\n            })\n            Object.keys(property.defence).forEach(el => {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${property.defence[el] < 0 ? '' : '+'}${property.defence[el]} ${el} defence`)\n            })\n        }\n        if (stats && cur == \"use\") {\n            // not sure if i will put anything here, description should be sufficient\n        }\n        if (desc && cur == \"desc\") { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Description: ${property}`)};\n        if (desc && cur == \"sell_value\") { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Sell value: ${property}`)}\n        if (pouch_limit && cur == \"use\") { \n            if (item[cur].pouchMax != undefined) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Pouch limit: ${property.pouchMax}`)\n            }\n        };\n    })\n}\n\n\nconst isReagent = (item) => {\n    // because I keep having to do this\n    if (item[0].length > 1) {\n        return true\n    } else {\n        return false\n    }\n}\n\nconst getName = (item) => {\n    // becacuse I keep having the do this (2)\n    if (isReagent(item)) {\n        return item[0]\n    } else {\n        return item\n    }\n}\n\nconst getQuantity = (item, inventory) => {\n\n    var counter = 0;\n\n    if (items[item].type != \"reagent\") { // iterate over each item in the inventory, if its what we need, counter++\n        inventory.forEach(invItem => {\n            if (invItem == item) {\n                counter++;\n            }\n        }) \n    } else {\n        inventory.forEach(invItem => { // will only find the item once (if it is there) and will get how many of the item there are\n            if (invItem[0] == item) {\n                counter = invItem[1];\n            }\n        })\n    }\n\n    //console.log(`searched for ${item} and found ${counter}`)\n\n    return counter;\n}\n\nconst getItemIdentfierByName = (name) => {\n    \n    const keys = Object.keys(items);\n    for (var i = 0; i < keys.length; i++) {\n        if (items[keys[i]].name == name) {\n            return keys[i]\n        }\n    }\n    return false;\n\n}\n\nconst cleanInventory = () => {\n   //console.log(\"clean inv called\")\n   //console.log(gameData.data.player.inventory)\n    const player = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player;\n    for (var i = 0; i < player.inventory.length; i++) { // for loop needed since map/forEach skip empty objects\n        if (player.inventory[i] == undefined || player.inventory[i] == null) { // if a certain index in inventory has value undefined...\n            player.inventory.splice(i, 1 ); // destroy it since otherwise it messes stuff up. yare yare\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/models/items.js?");

/***/ }),

/***/ "./src/js/models/learnSkills.js":
/*!**************************************!*\
  !*** ./src/js/models/learnSkills.js ***!
  \**************************************/
/*! exports provided: initStats, statMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initStats\", function() { return initStats; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"statMenu\", function() { return statMenu; });\n/* harmony import */ var _views_baseView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var _views_statView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../views/statView */ \"./src/js/views/statView.js\");\n/* harmony import */ var _views_miscView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../views/miscView */ \"./src/js/views/miscView.js\");\n/* harmony import */ var _enemies__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./enemies */ \"./src/js/models/enemies.js\");\n/* harmony import */ var _combat__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./combat */ \"./src/js/models/combat.js\");\n/* harmony import */ var _skills__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./skills */ \"./src/js/models/skills.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../index */ \"./src/js/index.js\");\n/* harmony import */ var _baseModel__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./baseModel */ \"./src/js/models/baseModel.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n// STAT MODE // \nconst initStats = returnFunction => {\n    statMenu.returnFunction = returnFunction;\n\n    // -- TUROIAL -- \\\\\n    if (_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].tutorials.includes('stats_1') == false && _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].special.doingTutorial == true) {\n        _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].tutorials.push('stats_1');\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayWaitForInput\"](_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"tutorialMessages\"].stats_1, statMenu.statLoop)\n    } else {\n        statMenu.statLoop();\n    }\n}\n\nconst statMenu = {\n\n    returnFunction: undefined,\n\n    reset() {\n        this.returnFunction = undefined\n    },\n\n    statLoop: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Entering the stats menu.<br> Say 'sk'/'skills' to enter the skill menu, or 'sp' to enter the sp menu.\")\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Input <b>'b'/'back'</b> to return.\")\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"presetMenuOptions\"].statMenu);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](statMenu.statLoopResponse);\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player, \"normal\");\n    },\n\n    statLoopResponse: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](statMenu.statLoopResponse); // so they can't press multiple times real fast and cause several triggers\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]();\n        // going through menus\n        switch (input.toLowerCase()) {\n            case \"sk\":\n            case \"skills\": {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Entering skills menu. To change skills equipped, say 'e'/equipped', or say 'l'/'learn' to learn new skills.`);\n                \n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"]([\"equipped\", \"learn\", \"back\"])\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](skillsMenu)\n            }\n            break;\n\n            case \"sp\": {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Entering SP menu. Say 'a'/'allocate' to allocate SP, or 'r'/'reset' to reset allocation.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Current SP investments:\")\n                displaySP();\n\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"]([\"allocate\", \"reset\", \"back\"])\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](spMenu);\n            }\n            break;\n\n            case \"b\":\n            case \"back\": {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning to main menu...`);\n                statMenu.returnFunction();\n            }\n            break;\n\n            default: {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Invalid input\");\n\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"presetMenuOptions\"].statMenu);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](statMenu.statLoopResponse);\n            }\n        }\n    }\n\n\n}\n\nconst spMenu = () => {\n    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](spMenu);\n    const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]();\n    const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n\n    switch (input.toLowerCase()) {\n        case \"a\":\n        case \"allocate\": {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Entering allocate mode. Say the name of a stat, for example 'atk' to allocate SP to that stat. Only atk, def, matk, mdef, speed and hp can be allocated to.`);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`You have ${_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player.sp} SP.`);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`At level ${player.level}, the maximum SP that can be allocated to one stat is ${_data__WEBPACK_IMPORTED_MODULE_2__[\"sp_investment_caps\"][player.level]}.`);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"presetMenuOptions\"].allocateSP);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](allocateMode)\n        }\n        break;\n\n        case \"r\":\n        case \"reset\": {\n            var total = 0;\n            Object.keys(player.sp_investment).forEach(cur => {\n                total += player.sp_investment[cur];\n            }) // calculating sp reset cost\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Are you sure you want to reset your SP? It will cost ${total * 20} gold. Type 'y' or 'yes' to confirm. To go back, enter anything else.`); // NEED TO MAKE\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](resetMode);\n        }\n        break;\n\n        case \"b\":\n        case \"back\": {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning to status menu..`);\n            \n            statMenu.statLoop(); //\n        }\n        break;\n\n        default: {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Invalid input\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Current SP investments:`)\n            displaySP();\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](spMenu);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"]([\"allocate\", \"reset\", \"back\"])\n        }\n    }\n\n}\n\nconst displaySP = () => {\n    const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n\n    const msgArr = Object.keys(player.sp_investment).map(cur => {\n        return (`${cur}: ${player.sp_investment[cur]}`);\n    })\n\n    msgArr.forEach(cur => _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](cur));\n\n}\n\nconst resetMode = () => {\n    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](resetMode);\n    const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n    const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n\n    var total = 0;\n    Object.keys(player.sp_investment).forEach(cur => { total += player.sp_investment[cur] });\n    const cost = total * 20;\n\n    if (input == \"yes\" || input == \"y\") {\n        if (player.gold >= cost) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}SP has been reset.`);\n\n            Object.keys(player.sp_investment).forEach(cur => {\n                player.sp += player.sp_investment[cur];\n                player.sp_investment[cur] = 0;\n            })\n            player.gold -= cost;\n            \n            const playerHP = _combat__WEBPACK_IMPORTED_MODULE_6__[\"Combat\"].getMaxHealth(player.stats);\n            if (player.stats.current_health > playerHP) { player.stats.current_health = playerHP};\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}You don't have enough gold!`)\n        }\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}You now have ${player.sp} SP.`);\n\n    }\n\n    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning to SP menu..`);\n    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Entering SP menu. Say 'a'/'allocate' to allocate SP, or 'r'/'reset' to reset allocation.`);\n    \n    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Current SP investments:\")\n    displaySP();\n    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](spMenu);\n    \n    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"]([\"allocate\", \"reset\", \"back\"])\n    Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player, \"normal\");\n\n}\n\nconst allocateMode = () => {\n    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](allocateMode)\n    const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n    const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n    var goback = true;\n\n    if (player.sp_investment.hasOwnProperty(input)) {\n        if (player.sp > 0) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`How many SP points would you like to allocate to ${input}?`)\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"]( allocateSPInvoke(input)  ); // otherwise it will be called immediately\n            goback = false;\n            \n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"You don't have any SP!\");\n        }\n    } else if (input == \"back\" || input == \"b\") {\n        goback = false;\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`Returning to SP menu...`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`Entering SP menu. Say 'a/allocate' to allocate SP, 'r/reset' to reset allocation.`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"Current SP investments:\")\n        displaySP();\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"]([\"allocate\", \"reset\", \"back\"])\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](spMenu);\n    } else {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"Invalid input.\");\n    }\n\n    \n    if (goback) {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`<br>You currently have ${player.sp} SP.`)\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](allocateMode); // if input is not back, then go back to allocate mode\n    };\n    \n\n    Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player, \"normal\");\n\n}\n\nconst allocateSPInvoke = (stat) => {\n   //console.log(\"ALLOCATE SP INVOKE CALLED\");\n    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"]( allocateSPInvoke );\n    const allocateSP = () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](allocateSP, false);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]();\n        if (parseInt(input).toString() != \"NaN\") {\n            const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n            if (parseInt(input) <= player.sp) {\n                if (parseInt(input) + player.sp_investment[stat] <= _data__WEBPACK_IMPORTED_MODULE_2__[\"sp_investment_caps\"][player.level]) {\n                    player.sp -= parseInt(input);\n                    player.sp_investment[stat] += parseInt(input);\n                    if (stat == \"health\") { player.stats.current_health += parseInt(input) * 20 } // increase their hp based on sp alloc.\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${input} SP allocated to ${stat}. Returning to allocate mode..<br>`);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`Entering allocate mode. Say the name of a stat, for example 'atk' to allocate SP to that stat. Only atk, def, matk, mdef, speed and hp can be allocated to.`);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`At level ${player.level}, the maximum SP that can be allocated to one stat is ${_data__WEBPACK_IMPORTED_MODULE_2__[\"sp_investment_caps\"][player.level]}.`);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`You have ${_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player.sp} SP.`);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"presetMenuOptions\"].allocateSP);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](allocateMode);\n                    Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"updateDisplay\"])(player, \"normal\");\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`This amount of SP would exceed your single stat allocation limit! Returning to allocate mode..<br>`);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`Entering allocate mode. Say the name of a stat, for example 'atk' to allocate SP to that stat. Only atk, def, matk, mdef, speed and hp can be allocated to.`);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`At level ${player.level}, the maximum SP that can be allocated to one stat is ${_data__WEBPACK_IMPORTED_MODULE_2__[\"sp_investment_caps\"][player.level]}.`);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`You have ${_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player.sp} SP.`);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"presetMenuOptions\"].allocateSP);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](allocateMode);\n                }\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`You don't have enough SP! Returning to allocate mode..<br>`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`Entering allocate mode. Say the name of a stat, for example 'atk' to allocate SP to that stat. Only atk, def, matk, mdef, speed and hp can be allocated to.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`At level ${player.level}, the maximum SP that can be allocated to one stat is ${_data__WEBPACK_IMPORTED_MODULE_2__[\"sp_investment_caps\"][player.level]}.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`You have ${_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player.sp} SP.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"presetMenuOptions\"].allocateSP);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](allocateMode);\n            }\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`Invalid input.`);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"]( allocateSPInvoke(stat) );\n        }\n    }\n    return allocateSP;\n}\n\nconst skillsMenu = () => {\n    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](skillsMenu);\n    const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n    const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n\n    switch (input) {\n\n        case \"e\":\n        case \"equipped\": {\n            equipSkills.disciplinesMenuLoop();\n        }\n        break;\n\n        case \"l\":\n        case \"learn\": {\n            learnSkills.disciplinesMenuLoop();\n            \n        }\n        break;\n\n        case \"b\":\n        case \"back\": {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning...`);\n            statMenu.statLoop();\n        };\n        break;\n\n        default: {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Invalid input.\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"]([\"equipped\", \"learn\", \"back\"])\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](skillsMenu);\n        }\n    }\n};\n\nconst learnSkills = {\n    currentDiscipline: null,\n\n    currentSkill: null,\n\n    disciplinesMenuLoop() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Showing all available disciplines. Say the name of a discipline to view the skills it contains if it is unlocked, or to unlock it if it is not unlocked.`)\n        const disciplines = _data__WEBPACK_IMPORTED_MODULE_2__[\"disciplines\"]; // i need to do this here because learnSkills() only reacts to inputs..\n        \n        \n        // making disciplines visisble -- NEED REWORK\n        //console.log(`e ${gameData.data.special.doingTutorial}`);\n        if (_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].special.doingTutorial != true) {\n            Object.keys(disciplines).forEach(discipline => {\n                if (disciplines[discipline].requirements.level <= _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player.level) {\n                    disciplines[discipline].visible = true;\n                }\n            });\n        }\n        \n        \n\n        const disciplinesForDisplay = Object.keys(disciplines); // show unlocked disciplines first bc it looks better\n        const sortLocked = (a, b) => {\n            if (disciplines[a].unlocked == true && disciplines[b].unlocked == true) {\n                if (a > b) { return 1 } else { return -1 };\n            } else if (disciplines[a].unlocked == false && disciplines[b].unlocked == false) {\n                if (a > b) { return 1 } else { return -1 };\n            } else if (disciplines[a].unlocked == true) {\n                return -1;\n            } else {\n                return 1;\n            }\n        }\n        disciplinesForDisplay.sort(sortLocked);\n        \n        disciplinesForDisplay.forEach(cur => { // and will not display this on time\n            const disc = disciplines[cur];\n            if (disc.unlocked == true) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](` - ${Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"capitalise\"])(disc.name)} -- UNLOCKED`);\n            } else if (disc.visible == true) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](` - ${Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"capitalise\"])(disc.name)} -- LOCKED (LV ${disc.requirements.level})`);\n            }\n        })\n\n        // making the array for initinputshortcut\n\n        inputShortcuts.showAllDisciplines(disciplines);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](learnSkills.disciplinesMenu);\n    },\n\n    disciplineMenuLoop(showskills) {\n        const discipline = learnSkills.currentDiscipline;\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n\n        //console.log(discipline);\n\n        if (showskills == true) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Showing all skills in the ${discipline.name.toUpperCase()} discipline. Say the name of a skill to view its description and unlock it if you haven't done so already.`);\n            var count = 0;\n            var max = 0;\n            discipline.skills.forEach(skill => {\n                if (skill.unlocked == true) {\n                    count += 1;\n                }\n                max += 1;\n            });\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`Skills known in this discipline: ${count}/${max}<br>`);\n    \n            // now, we need to display all the skills in the discipline and whether or not they are known\n            discipline.skills.forEach(skill => {\n                const name = skill.name;\n                const known = (skill.unlocked == true ? 'X' : ' ');\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_skills__WEBPACK_IMPORTED_MODULE_7__[\"skills\"][name].name} - [${known}] ${known == ' ' ? '(LV' + skill.requirements.level + ', ' + skill.cost.ap + ' AP)' : ''}`); // fireball - [X];\n            });\n    \n        }\n\n        // now process any input made by the player\n\n        \n        inputShortcuts.skillsInDiscipline(discipline);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](learnSkills.disciplineMenu);\n    },\n\n    disciplineMenu() { // this is called when the player is selecting a skill in a discipline\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](learnSkills.disciplineMenu);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n        //console.log(\"running discipline menu\")\n        //console.log(`input: ${input}`);\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n        const discipline = learnSkills.currentDiscipline;\n        const skillInDiscipline = discipline.skills.findIndex(cur => {\n            //console.log(cur);\n            return _skills__WEBPACK_IMPORTED_MODULE_7__[\"skills\"][cur.name].name == input;\n        });\n\n        if (skillInDiscipline != -1) { // if the player's input was a skill in the discipline..\n            const desc = _skills__WEBPACK_IMPORTED_MODULE_7__[\"skills\"][discipline.skills[skillInDiscipline].name].description;\n            const skill = discipline.skills[skillInDiscipline];\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}${Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"capitalise\"])(input)} - ${desc}`);\n            if (skill.unlocked == true) { // if the player has the skill..\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}This skill is already unlocked.`);\n\n                \n                inputShortcuts.skillsInDiscipline(discipline);\n                learnSkills.disciplineMenuLoop(false);\n            } else { // if the player doesn't have the skill..\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}This skill is not learned. In order to unlock it, the following requirements must be met:`)\n                const allMet = learnSkills.checkRequirements(skill);\n                if (allMet == false) {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessagesDelayed\"]([[\"<br>You do not meet the requirements to unlock this skill!\", 2]], \"outside\", () => {\n                        learnSkills.disciplineMenuLoop(true);\n                    })\n                } else {\n                    var allOwned = learnSkills.checkCost(skill);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`Unlocking this skill requires ${skill.cost.ap} AP.`)\n                    if (player.ap < skill.cost.ap) { allOwned = false }; // ensure they have enough ap. checkRequirements() does not do this\n                    if (allOwned == false) {\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessagesDelayed\"]([[\"<br>You do not have enough items/gold/ap to unlock this skill!\", 2]], \"outside\", () => {\n                            learnSkills.disciplineMenuLoop(true);\n                        })\n\n                    } else {\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"Would you like to learn this skill? Say 'y' or 'yes' to learn it, otherwise enter anything else.\");\n                        learnSkills.currentSkill = skill;\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](learnSkills.unlockSkill);\n                    }\n                }\n            }\n        } else if (input == 'back' || input == 'b') {\n            learnSkills.disciplinesMenuLoop();\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Invalid input\");\n\n            inputShortcuts.skillsInDiscipline(discipline);\n            learnSkills.disciplineMenuLoop(false);\n        }\n    },\n\n\n    unlockSkill() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](learnSkills.unlockSkill);\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n        const skill = learnSkills.currentSkill;\n\n        if (input == 'y' || input == 'yes') { // if they want to learn the skill...\n\n            skill.unlocked = true; // all we have to do is say the skill is unlocked\n\n            skill.cost.items.forEach(cur => {\n                    const index = player.inventory.findIndex(item => { // try to find the item in inventory. We know we will because..\n                        try { // they have all the required items\n                            return item.name == cur[0]; \n                        } catch {\n                            //console.log(\"item not a reagent\");\n                        }\n                    })\n                    const reagent = player.inventory[index];\n                    reagent[1] -= cur[1];\n                    //console.log(`reagent count: ${reagent[1]}`)\n                    if (reagent[1] == 0) {\n                        delete player.inventory[index];\n                    };\n        \n                });\n        \n                player.gold -= skill.cost.gold;\n                player.ap -= skill.cost.ap;\n\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"Skill unlocked!\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"If you would like to use this skill in battle, remember to <u>equip</u> it first.\")\n\n                inputShortcuts.unlockedDisciplines();\n                learnSkills.disciplineMenuLoop(true);\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning to discipline menu...`);\n\n            inputShortcuts.unlockedDisciplines();\n            learnSkills.disciplineMenuLoop(true);\n        }\n\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"updateDisplay\"])(player, \"normal\");\n        \n    },\n\n\n    disciplinesMenu() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](learnSkills.disciplinesMenu);\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n        const disciplines = _data__WEBPACK_IMPORTED_MODULE_2__[\"disciplines\"];\n    \n        if (disciplines.hasOwnProperty(input)) {\n            if (disciplines[input].unlocked == true) {\n                //console.log(input);\n                learnSkills.currentDiscipline = disciplines[input];\n                //console.log(this.currentDiscipline);\n\n                //inputShortcuts.unlockedDisciplines();\n                learnSkills.disciplineMenuLoop(true);\n            } else if (disciplines[input].unlocked == false || disciplines[input].visible == true) {\n                // this disciplines is unlockable but not unlocked.\n                this.currentDiscipline = disciplines[input];\n                const discipline = this.currentDiscipline;\n\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`<b>${Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"capitalise\"])(discipline.name)}</b> - ${discipline.desc}`)\n\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}This discipline is not unlocked. To unlock it, the following requirements must be met:`);\n                \n                const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n\n                const allMet = learnSkills.checkRequirements(discipline);\n\n                // DISCIPLINE UNLOCK\n                if (allMet == false ) {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessagesDelayed\"]([[\"You do not meet the requirements to unlock this discipline!\", 2]], \"outside\", learnSkills.disciplinesMenuLoop);\n                } else {\n                    const allOwned = learnSkills.checkCost(discipline);\n                    if (allOwned == false) {\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessagesDelayed\"]([[\"You do not have enough items/gold to unlock this discipline!\", 2]], \"outside\", learnSkills.disciplinesMenuLoop);\n                    } else {\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Would you like to unlock this discipline? If so, type 'y' or 'yes'. This action cannot be undone.\");\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](learnSkills.unlockDiscipline);\n                    }\n                }\n                \n            }\n\n\n        } else if (input == 'back' || input == 'b') {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning...`);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Entering skills menu. To change skills equipped, say 'e'/'equipped', or say 'l'/'learn' to learn new skills.`);\n            \n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"]([\"equipped\", \"learn\", \"back\"])\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](skillsMenu);\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Invalid input<br>\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](learnSkills.disciplinesMenu);\n        }\n        \n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player, \"normal\");\n\n    },\n\n    unlockDiscipline() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](learnSkills.unlockDiscipline);\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n\n        if (input == \"y\" || input == \"yes\") {\n            this.currentDiscipline.unlocked = true;\n            this.currentDiscipline.cost.items.forEach(cur => {\n                const index = player.inventory.findIndex(item => { // try to find the item in inventory. We know we will because..\n                    try { // they have all the required items\n                        return item[0] == cur[0]; \n                    } catch {\n                        //console.log(\"item not a reagent\");\n                    }\n                })\n                const reagent = player.inventory[index];\n                reagent[1] -= cur[1];\n                //console.log(`reagent count: ${reagent[1]}`)\n                if (reagent[1] == 0) {\n                    delete player.inventory[index];\n                };\n    \n            });\n    \n            player.gold -= this.currentDiscipline.cost.gold;\n    \n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Discipline unlocked!`);\n            this.currentDiscipline = null;\n            learnSkills.disciplinesMenuLoop();\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning to disciplines menu..`)\n            learnSkills.disciplinesMenuLoop();\n        }\n\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player, \"normal\");\n\n    },\n\n    checkRequirements(object, displayMessages = true) {\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n\n        var allMet = true; // if any conditions are not met, this will be set to false and the player will be..\n        // unable to unlock the discipline\n\n        // LEVEL REQUIREMENT\n        var met = false;\n        if (player.level >= object.requirements.level) { met = true } else { allMet = false}; \n        if (displayMessages) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`Be at level ${object.requirements.level} or higher - [${met == true ? 'X' : ' '}]`);\n        };\n\n        // SKILLS REQUIREMENT\n        object.requirements.skills.forEach(cur => { // for each skill..\n            if (player.library.indexOf(cur) != -1) { // if it is in the player's library\n                met = true; // then the player has the skill\n            } else { met = false; allMet = false };\n            if (displayMessages) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`Unlock skill ${cur} - [${met == true ? 'X' : ' '}]`);\n            }\n        });\n\n        // FLAG REQUIREMENT\n        object.requirements.flags.forEach(cur => { // for each flag..\n            if (_data__WEBPACK_IMPORTED_MODULE_2__[\"flags\"][cur].complete == true) { // if it is flagged as complete\n                met = true; // then the flag has been met\n            } else { met = false; allMet = false };\n            if (displayMessages) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_data__WEBPACK_IMPORTED_MODULE_2__[\"flags\"][cur].desc} - [${met == true ? 'X' : ' '}]`);\n            }\n        });\n\n        return allMet;\n    },\n\n    checkCost(object) {\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n\n        var allOwned = true; // we will set this to false if the player misses any of the needed items\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`<br>You will need to pay: ${object.cost.gold} gold.`);\n        if (object.cost.items.length > 0) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`You will also need the following items:`);\n            object.cost.items.forEach(cur => { // for each item that is required\n                const indexOfReagent = player.inventory.findIndex(item => { // try to find the item in inventory\n                    try { // not all items are in the 'reagent' format, and if they aren't, trying to access their..\n                        return item[0] == cur[0];  // indexes will throw an error. so this is needed\n                    } catch {\n                        //console.log(\"item not a reagent\");\n                    }\n                } )\n                var count = 0;\n                if (indexOfReagent == -1) {\n                    //console.log(\"item not found\")\n                    count = 0; // if the item isnt in inventory, then they have none of it\n                } else {\n                    //console.log(\"item found\")\n                    count = player.inventory[indexOfReagent][1]; // otherwise find out how many they have\n                }\n                //console.log(count);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${cur[1]} ${cur[0]} (${count}/${cur[1]})`); // 50 Slimes (30/50), etc.\n\n                if (cur[1] > count) { // if this is true then the player doesn't have enough of the reagent\n                    allOwned = false;\n                }\n            });\n        }\n        if (object.cost.gold > player.gold) {\n            allOwned = false;\n        }\n        return allOwned;\n    }\n\n}\n\nconst equipSkills = {\n\n    currentDiscipline: null,\n\n    currentSkill: null,\n\n    disciplinesMenuLoop() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Showing all available disciplines. Say the name of a discipline to` +\n        ` view the skills it contains. <b>Or, say 'e' or 'equipped' to view your currently equipped skills.</b>`)\n        const disciplines = _data__WEBPACK_IMPORTED_MODULE_2__[\"disciplines\"]; // i need to do this here because learnSkills() only reacts to inputs..\n\n        \n        // making disciplines visisble -- NEED REWORK\n        //console.log(`e ${gameData.data.special.doingTutorial}`);\n        if (_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].special.doingTutorial != true) {\n            Object.keys(disciplines).forEach(discipline => {\n                if (disciplines[discipline].requirements.level <= _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player.level) {\n                    disciplines[discipline].visible = true;\n                }\n            });\n        }\n        \n\n        Object.keys(disciplines).forEach(cur => { // and will not display this on time\n            const disc = disciplines[cur];\n            if (disc.unlocked == true) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](` - ${Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"capitalise\"])(disc.name)}`);\n            }\n        })\n\n        // making the array for initinputshortcut\n        var array = [\"equipped\"];\n        Object.keys(disciplines).forEach(cur => {\n            const disc = disciplines[cur];\n            if (disc.unlocked == true) { array.push(disc.name) }\n        })\n        array.push(\"back\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](array);\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](equipSkills.disciplinesMenu);\n    },\n\n    disciplinesMenu() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](equipSkills.disciplinesMenu);\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n        const disciplines = _data__WEBPACK_IMPORTED_MODULE_2__[\"disciplines\"];\n    \n        if (disciplines.hasOwnProperty(input)) {\n            if (disciplines[input].unlocked == true) {\n                //console.log(input);\n                equipSkills.currentDiscipline = disciplines[input];\n                //console.log(this.currentDiscipline);\n\n                var array = [\"equipped\"];\n                Object.keys(disciplines).forEach(cur => {\n                    const disc = disciplines[cur];\n                    if (disc.unlocked == true) { array.push(disc.name) }\n                })\n                array.push(\"back\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](array);\n\n                equipSkills.disciplineMenuLoop(true);\n            }\n        } else if (input == 'back' || input == 'b') {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning...`);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Entering skills menu. To change skills equipped, say 'e'/'equipped',`\n            + ` or say 'l'/'learn' to learn new skills.`);\n\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"]([\"equipped\", \"learn\", \"back\"])\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](skillsMenu);\n        } else if (input == 'e' || input == 'equipped') {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessagesDelayed\"]([[`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Showing equipped skills. Say the name of an equipped skill to unequip it.`, 0.3, true, {}, \"flatsec\"]], \"outside\", () => {\n                //console.log(\"logging skills\");\n                //console.log(player.stats.skills);\n                Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"getSkillsList\"])(player.stats.skills).forEach(cur => {\n                   //console.log(`current skills is ${cur}`);\n                    const desc = _skills__WEBPACK_IMPORTED_MODULE_7__[\"skills\"][cur].description;\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`<br>${_skills__WEBPACK_IMPORTED_MODULE_7__[\"skills\"][cur].name} - ${desc}`);\n                });\n                equipSkills.initShortcuts();\n    \n                // respond to player input\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](equipSkills.unequipSkill);\n            })\n        } \n        else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Invalid input<br>\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](equipSkills.disciplinesMenu);\n                // making the array for initinputshortcut\n                var array = [\"equipped\"];\n                Object.keys(disciplines).forEach(cur => {\n                    const disc = disciplines[cur];\n                    if (disc.unlocked == true) { array.push(disc.name) }\n                })\n                array.push(\"back\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](array);\n        }\n        \n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player, \"normal\");\n\n    },\n\n    unequipSkill() {\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](equipSkills.unequipSkill);\n\n        // create skillslist w/ corresponding index so the names of equipped skills can be seen\n        var skillsList = Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"getSkillsList\"])(player.stats.skills);\n\n        if (skillsList.indexOf(input.replace(/\\s/g, \"_\")) != -1) { // input.replace... changes input to skill notation\n            if (player.stats.skills.length > 1) {\n                if (input != \"attack\" && input != \"guard\") {\n                    player.stats.skills.splice([skillsList.indexOf(input.replace(/\\s/g, \"_\"))], 1);\n\n                    // ensuring no \"empty\" spaces in skills\n                    //console.log(player.stats.skills);\n\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${input} unequipped.`);\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>That skill can't be unequipped!\");\n                }\n                equipSkills.initShortcuts();\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](equipSkills.unequipSkill);\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"You can't have 0 skills!\");\n                equipSkills.initShortcuts();\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](equipSkills.unequipSkill);\n            }\n        } else if (input == 'back' || input == 'b') {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning to disciplines menu...`);\n            equipSkills.disciplinesMenuLoop();\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Invalid input.\");\n            equipSkills.initShortcuts();\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](equipSkills.unequipSkill);\n        }\n    },\n\n    disciplineMenuLoop(showskills = false) {\n        const discipline = equipSkills.currentDiscipline;\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n\n        //console.log(discipline);\n\n        if (showskills == true) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Showing all known skills in the ${discipline.name.toUpperCase()} discipline. Say the name of a skill to view its description.`);\n    \n            // now, we need to display all the skills in the discipline and whether or not they are known\n            discipline.skills.forEach(skill => {\n                const name = skill.name;\n                const known = (skill.unlocked == true ? 'X' : ' ');\n                if (known == 'X') {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](` - ${_skills__WEBPACK_IMPORTED_MODULE_7__[\"skills\"][name].name}`);\n                }\n            });\n    \n        }\n\n        // now process any input made by the player\n\n        // need custom loop in this case\n        var skillsArr = [];\n        discipline.skills.forEach(skill => {\n            if (skill.hasOwnProperty(\"name\") && skill.unlocked == true) {\n                skillsArr.push(_skills__WEBPACK_IMPORTED_MODULE_7__[\"skills\"][skill.name].name);\n            }\n        })\n        skillsArr.push(\"back\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](skillsArr);\n\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](equipSkills.disciplineMenu);\n    },\n\n    disciplineMenu() { // this is called when the player is selecting a skill in a discipline\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](equipSkills.disciplineMenu);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n        //console.log(`input: ${input}`);\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n        const discipline = equipSkills.currentDiscipline;\n        //console.log(\"logging current discipline\");\n        //console.log(discipline);\n\n        // iterate over discipline being looked at\n        // if is unlocked, append to mock library the name of the skill\n        const mockLibrary = discipline.skills.map(skill => {\n            if (skill.unlocked == true) {\n                return _skills__WEBPACK_IMPORTED_MODULE_7__[\"skills\"][skill.name].name; // gets the version of the name w/o the spaces and stuff\n            }\n        });\n\n        if (mockLibrary.indexOf(input) != -1) { // if the player has the skill...\n            const desc = _skills__WEBPACK_IMPORTED_MODULE_7__[\"skills\"][input.replace(/\\s/g, \"_\")].description;\n           //console.log(`INPUT EDITED FOR getSkillByName = ${input.replace(/\\s/g, \"_\")}`)\n            const skill = getSkillByName(discipline, input.replace(/\\s/g, \"_\")) // we want the obj ver. of the skill\n            equipSkills.currentSkill = skill;\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`<br>${Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"capitalise\"])(input)} - ${desc}`);\n            //console.log(`SKILL BY CODE NAME ${getSkillCodeByName(input.replace(/\\s/g, \"_\"), discipline)}`)\n            if (player.stats.skills.indexOf(getSkillCodeByName(input.replace(/\\s/g, \"_\"), discipline)) != -1) { // if the player has the skill equipped..\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"This skill is already equipped.\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>You are still in the skills menu. Input b/back to return\");\n\n                equipSkills.disciplineMenuLoop(false);\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"]((\"<br>This skill is not equipped. Say 'e' or 'equip' to equip this skill.\") +\n                (\" You can also say 'f' or 'forget' to unlearn this skill. Input anything else to return.\"))\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](equipSkills.skillMenu);\n            }\n        } else if (input == 'back' || input == 'b') {\n            equipSkills.disciplinesMenuLoop();\n        } else {\n            //console.log(\"skill not found\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>Invalid input\");\n\n            inputShortcuts.skillsInDiscipline(discipline);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](equipSkills.disciplineMenu);\n        }\n    },\n\n    skillMenu() {\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n        const player = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player;\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](equipSkills.skillMenu);\n\n        const currentSkill = equipSkills.currentSkill;\n        const currentDiscipline = equipSkills.currentDiscipline;\n\n        if (input == 'e' || input == 'equip') {\n            if (player.stats.skills.length < 12) {\n                if (player.stats.skills.indexOf(currentSkill.code) == -1 ) {\n                   //console.log(\"logging current skill\");\n                   //console.log(equipSkills.currentSkill);\n                    player.stats.skills.push(equipSkills.currentSkill.code); // ez pz\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Skill equipped.`);\n    \n                    equipSkills.disciplineMenuLoop(true);\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}You already have this skill equipped!`);\n\n                    equipSkills.disciplineMenuLoop(true);\n                }\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}You have too many skills equipped!`);\n\n                equipSkills.disciplineMenuLoop(true);\n            }\n        } else if (input == 'f' || input == 'forget') {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Would you like to unlearn this skill? You will get the AP back, but you the reagents and gold will be lost.`)\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`<br>Input 'y'/'yes' to forget the skill, otherwise input 'b'/'back' to return to the discipline menu.`)\n\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"]([\"yes\", \"back\"]);\n\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](equipSkills.unlearnSkillResponse);\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning to discipline menu...`);\n\n            equipSkills.disciplineMenuLoop(true);\n        }\n    },\n\n    unlearnSkillResponse() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"removeInputResponse\"](equipSkills.unlearnSkillResponse);\n        \n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"getInput\"]().toLowerCase();\n\n        switch (input) {\n            \n            case \"y\":\n            case \"yes\": {\n                const currentSkill = equipSkills.currentSkill;\n                const currentDiscipline = equipSkills.currentDiscipline;\n                //console.log(\"logging current skill\");\n                //console.log(currentSkill);\n                // ensure the skill is not equipped before allowing unlearning\n                if (_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player.stats.skills.indexOf(currentSkill.code) == -1) {\n                    if (currentSkill.unlearnable == true) {\n                        equipSkills.unlearnSkill();\n                    } else {\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>This skill cannot be unlearned!\");\n                        equipSkills.disciplineMenuLoop(true);\n                    }\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"<br>You cannot unlearn an equipped skill!\");\n                    equipSkills.disciplineMenuLoop(true);\n                }\n                break;\n            }\n\n            case \"b\":\n            case \"back\": {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning...`);\n                equipSkills.disciplineMenuLoop(true);\n                break;\n            }\n\n            default: {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](\"Invalid input.\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"setInputResponse\"](equipSkills.unlearnSkillResponse);\n            }\n        }\n    },\n\n    unlearnSkill() {\n        const currentSkill = equipSkills.currentSkill;\n        const currentDiscipline = equipSkills.currentDiscipline;\n\n        currentSkill.unlocked = false;\n        //const library = gameData.data.player.library;\n        //const index = library.indexOf(getSkillCodeByName(currentSkill.name, currentDiscipline));\n        //library.splice(index, 1);\n        \n        _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player.ap += currentSkill.cost.ap;\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Skill unlearned! Gained ${currentSkill.cost.ap} AP.`);\n\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_9__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player, \"normal\");\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_0__[\"separator\"]}Returning...`);\n\n        equipSkills.disciplineMenuLoop(true);\n    },\n\n    getSkills() { // returns an array of all the skills a player has but by name\n        var skillsA = _data__WEBPACK_IMPORTED_MODULE_2__[\"data\"].player.stats.skills.map(skillCode => {\n            if (skillCode != \"guard\" && skillCode != \"attack\") {\n                var skillCodeParsed = skillCode.split('-') // splits into an array of the discipline and index\n                var discipline = skillCodeParsed[0];\n                var index = skillCodeParsed[1];\n                return _data__WEBPACK_IMPORTED_MODULE_2__[\"disciplines\"][discipline].skills[index].name;\n            } else {\n                return skillCode;\n            }\n        });\n\n        return skillsA;\n    },\n\n    initShortcuts() {\n        const array = equipSkills.getSkills();\n        array.push(\"back\");\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](array);\n    }\n\n}\n\nconst inputShortcuts = {\n    unlockedDisciplines: () => {\n        // get the disciplines object\n        const disciplines = _data__WEBPACK_IMPORTED_MODULE_2__[\"disciplines\"];\n\n        // making the array for input shortcut\n        var array = [\"equipped\"];\n        Object.keys(disciplines).forEach(cur => {\n            const disc = disciplines[cur];\n            if (disc.unlocked == true) { array.push(disc.name) }\n        })\n            array.push(\"back\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](array);\n    },\n\n    skillsInDiscipline: discipline => {\n\n        var skillsArr = [];\n        discipline.skills.forEach(skill => {\n            if (skill.hasOwnProperty(\"name\")) {\n                skillsArr.push(_skills__WEBPACK_IMPORTED_MODULE_7__[\"skills\"][skill.name].name);\n            }\n        })\n        skillsArr.push(\"back\");\n        //console.log(skillsArr);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](skillsArr);\n    },\n\n    showAllDisciplines: disciplines => {\n        var array = [];\n        Object.keys(disciplines).forEach(cur => {\n            const disc = disciplines[cur];\n            if (disc.visible == true) { array.push(disc.name) }\n        })\n        array.push(\"back\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_1__[\"initInputShortcuts\"](array);\n    }\n}\n\nconst getSkillByName = (discipline, name) => {\n    // pass in disciplines obj and name\n\n    // iterate over disciplines until the skill with the desired name is found. Return that skill object\n\n    var skillFound = -1;\n\n    discipline.skills.forEach(skill => {\n\n        //console.log(\"logging skill followed by name\");\n        //console.log(skill);\n        //console.log(name);\n\n        //console.log(skill.name == name);\n\n        if (skill.name == name) {\n            //console.log(\"found skill by name\");\n            skillFound = skill;\n        }\n    });\n\n\n    //console.log(\"logging skillfound\");\n    //console.log(skillFound);\n    return skillFound;\n\n    //return -1; // return -1 if the skill is not found\n};\n\nconst getSkillCodeByName = (name, discipline) => {\n    const disciplineSkills = discipline.skills;\n    for (var i = 0; i < disciplineSkills.length; i++) {\n        if (disciplineSkills[i].name == name) {\n            return disciplineSkills[i].code;\n        }\n    }\n    return -1;\n}\n\n//# sourceURL=webpack:///./src/js/models/learnSkills.js?");

/***/ }),

/***/ "./src/js/models/music.js":
/*!********************************!*\
  !*** ./src/js/models/music.js ***!
  \********************************/
/*! exports provided: musicHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"musicHandler\", function() { return musicHandler; });\n/* harmony import */ var _views_baseView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/baseView */ \"./src/js/views/baseView.js\");\n\n\nconst musicHandler = {\n    currentlyPlaying: \"none\",\n    currentAudio: undefined,\n    \n    basePath: \"../music/\",\n    forest: \"../music/forest.ogg\",\n    find: \"../music/find.ogg\",\n    lobby: \"../music/lobby.ogg\",\n    \n    volume: 0.5,\n    volumeFX: 0.5,\n\n    playMusic: music => {\n            //console.log(musicHandler);\n            //console.log(\"playmusic called\");\n\n            if (music == \"none\") {\n                musicHandler.stopMusic();\n            }\n            else if (music != musicHandler.currentlyPlaying) {\n                // stop previous music\n                if (musicHandler.currentAudio != undefined) {\n                    document.body.removeChild(musicHandler.currentAudio);\n                }\n                \n                // start new music\n                if (music[music.length - 1] == \"$\") {\n                    musicHandler.currentlyPlaying = music;\n                    var audio = new Audio();\n                    const path = musicHandler.basePath + music.replace(\"$\", \"\") + \"start.ogg\";\n                    //console.log(path);\n                    audio.setAttribute('src', path);\n                    audio.setAttribute('hidden', 'true');\n                    audio.volume = musicHandler.volume;\n                    document.body.appendChild(audio);\n                    musicHandler.currentAudio = audio;\n                    \n                    audio.addEventListener('timeupdate', function(){\n                        var buffer = 0.1\n                        if (this.currentTime > this.duration - buffer) {\n                            //console.log(\"moving into full swing\");\n                            const temp = musicHandler.currentAudio;\n\n                            var audio = new Audio();\n                            const path = musicHandler.basePath + music.replace(\"$\", \"\") + \"full.ogg\"\n                            audio.setAttribute('src', path);\n                            // looping\n                            audio.addEventListener('timeupdate', function(){\n                                var buffer = .2\n                                if(this.currentTime > this.duration - buffer){\n                                    this.currentTime = 0\n                                    this.play()\n                                }\n                            })\n                            // ---\n                            audio.setAttribute('hidden', 'true');\n                            audio.volume = musicHandler.volume;\n                            document.body.appendChild(audio);\n                            musicHandler.currentAudio = audio;\n                            audio.play()\n                            document.body.removeChild(temp);\n                        }\n                    });\n                    \n                    audio.play();\n                } else {\n                    musicHandler.currentlyPlaying = music;\n                    var audio = new Audio();\n                    audio.setAttribute('src', musicHandler[music]);\n                    audio.setAttribute('loop', 'true');\n                    audio.setAttribute('hidden', 'true');\n                    audio.volume = musicHandler.volume;\n                    document.body.appendChild(audio);\n                    musicHandler.currentAudio = audio;\n                    audio.play();\n                }\n            } else {\n                musicHandler.currentAudio.play();\n            }\n    },\n\n    pauseMusic: () => {\n        if (musicHandler.currentAudio != undefined) {\n            musicHandler.currentAudio.pause();\n        }\n    },\n\n    stopMusic: () => {\n        if (musicHandler.currentAudio != undefined) {\n            document.body.removeChild(musicHandler.currentAudio);\n            musicHandler.currentAudio = undefined;\n            musicHandler.currentlyPlaying = \"none\"\n        }\n    },\n\n    changeVolume: (volume, type) => {\n        if (volume > 1 || volume < 0) {\n            return false;\n        } else if (type == \"volume\" || type == \"volumeFX\") {\n            if (musicHandler.currentAudio != undefined && type == \"volume\") {\n                musicHandler.currentAudio.volume = volume;\n            };\n            musicHandler[type] = volume;\n            return true;\n        } else {\n            return false;\n        }\n    },\n\n    playFX: (music) => {\n        var fx = new Audio();\n        fx.setAttribute('src', musicHandler[music]);\n        fx.setAttribute('hidden', 'true');\n        fx.volume = musicHandler.volumeFX;\n        document.body.appendChild(fx);\n        fx.addEventListener('ended', fx => {\n            document.body.removeChild(fx.path[0]);\n        });\n        fx.play();\n    }\n}\n\n//# sourceURL=webpack:///./src/js/models/music.js?");

/***/ }),

/***/ "./src/js/models/npc.js":
/*!******************************!*\
  !*** ./src/js/models/npc.js ***!
  \******************************/
/*! exports provided: initNpc, getNpcDetails */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initNpc\", function() { return initNpc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNpcDetails\", function() { return getNpcDetails; });\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _views_statView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../views/statView */ \"./src/js/views/statView.js\");\n/* harmony import */ var _skills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./skills */ \"./src/js/models/skills.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var _baseModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./baseModel */ \"./src/js/models/baseModel.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! path */ \"./node_modules/path-browserify/index.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../index */ \"./src/js/index.js\");\n/* harmony import */ var _enemies__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./enemies */ \"./src/js/models/enemies.js\");\n/* harmony import */ var _items__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./items */ \"./src/js/models/items.js\");\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! querystring */ \"./node_modules/querystring-es3/index.js\");\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(querystring__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _shops__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./shops */ \"./src/js/models/shops.js\");\n/* harmony import */ var _combat__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./combat */ \"./src/js/models/combat.js\");\n/* harmony import */ var _crafting__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./crafting */ \"./src/js/models/crafting.js\");\n/* harmony import */ var _music__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./music */ \"./src/js/models/music.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./settings */ \"./src/js/models/settings.js\");\n/* harmony import */ var _rooms__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./rooms */ \"./src/js/models/rooms.js\");\n/* harmony import */ var _directories_npc_floor0__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../directories/npc/floor0 */ \"./src/directories/npc/floor0.js\");\n/* harmony import */ var _directories_npc_floor1__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../directories/npc/floor1 */ \"./src/directories/npc/floor1.js\");\n// imports go here\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//\n\n// -- NPC IMPORTS -- \\\\\n\n\n//\n\nconst npcs = Object.assign(_directories_npc_floor1__WEBPACK_IMPORTED_MODULE_17__[\"floor1\"], _directories_npc_floor0__WEBPACK_IMPORTED_MODULE_16__[\"floor0\"])\n\n\n// NPC HANDLER\nconst npcHandler = {\n    currentNpc: undefined,\n    currentBranch: undefined,\n    returnFunction: undefined,\n\n    music: undefined,\n\n    initNpc(npc, return_function) {\n        //console.log(npc);\n        //console.log(npcs);\n        this.currentNpc = Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"copy\"])(npcs[npc]); // making a deep copy b/c nested objects\n        //console.log(\"logging current npc\");\n        //console.log(this.currentNpc);\n        this.currentBranch = this.currentNpc;\n        this.returnFunction = return_function;\n        this.runBranch(Object.keys(this.currentBranch));\n    },\n\n    runBranch(responseArr) { // rerun makes it so that on a rerun, options will run but nothing else will\n        const cBranch = this.currentBranch;\n        //console.log(\"CURRENTLY RUNNING ON THE FOLLOWING BRANCH\");\n        //console.log(cBranch);\n        //console.log(\"RESPONSE ARRAY IS AS FOLLOWS\");\n        //console.log(responseArr);\n\n        var stop = false;\n\n        // removing undefined and empty values\n        responseArr.forEach( (item, index) => {\n            if (item == undefined) { responseArr.splice(index, 1) };\n        })\n        //console.log(\"responsearr\");\n        //console.log(responseArr);\n\n        for (var i = 0; i < Object.keys(cBranch).length; i++) {\n            const item = responseArr[i];\n            //console.log(` item is ${item}`);\n            //console.log(npcHandler.currentNpc)\n            //console.log(`logging cbranch[item]`);\n            //console.log(cBranch[item]);\n            switch (item) {\n\n                // -- NOTES REGRADING NPC PROGRAMMING -- \\\\\n                /*\n                 \n                 - 'runbranch' iterates over a branch like a property of an options object\n                 - 'item' is equal to the key currently being ran; Ex. 'action'\n                \n                */\n\n                case \"say3\":\n                case \"say2\":\n                case \"say\": {\n                    if (!stop) {\n                        stop = true; // this stops the code from looping and stuff\n                        //console.log(\"loggin cbranch\");\n                        //console.log(cBranch);\n                        const dialogue = npcHandler.parseDialogue(Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"copy\"])(cBranch[item])); // get whatever must be said\n                        const finishFunction = () => {\n                            var responseArrTemp = responseArr;\n                            delete responseArrTemp[responseArrTemp.indexOf(item)];\n                            this.runBranch(responseArrTemp); // remove \"say\" and then rerun the method. This ensures that other things in..\n                            // ..the branch are only done after the NPC has said whatever it is that they must say\n                        };\n                        if (_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollStyle == \"auto\") {\n                            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](dialogue, \"outside\", finishFunction);\n                        } else {\n                            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](dialogue, finishFunction, true);\n                        }\n                        break;\n                    }\n\n                };\n\n                case \"action8\":\n                case \"action7\":\n                case \"action6\":\n                case \"action5\":\n                case \"action4\":\n                case \"action3\":\n                case \"action2\":\n                case \"action\": {\n                    //(`logging item followed by cBranch.action`);\n                    //console.log(cBranch[item]);\n                    //console.log(cBranch.action);\n                    if (!stop) {\n                        const cBranch = npcHandler.currentBranch;\n                        const cNpc = npcHandler.currentNpc; // for easy access\n                        //console.log(\"STOP IS FALSE. LOGGING ITEM..\")\n                        //console.log(item);\n                        const action = cBranch[item][0]; // testing instead of cBranch.action[0]\n                        switch (action) {\n\n                            case \"save\": {\n                                Object(_settings__WEBPACK_IMPORTED_MODULE_14__[\"saveGame\"])();\n                                break;\n                            }\n\n                            case \"end\": {\n                                npcHandler.runBranch([\"end\"]);\n                                break;\n                            }\n\n                            case \"waypoint\": {\n                                const location = cBranch[item][1] // testing instead of cBranch.action[1];\n                                const newBranch = Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"findProperty\"])(npcHandler.currentNpc, location);\n                                //(\"NEW BRANCH\");\n                                //console.log(newBranch);\n                                npcHandler.currentBranch = newBranch;\n                                npcHandler.runBranch(Object.keys(newBranch));\n                                break;\n                            }\n\n                            case \"shop\": {\n                                const shopName = cBranch[item][1] // testing instead of cBranch.action[1];\n                                var returnFunction = cBranch[item][2] // testing instead of cBranch.action[2];\n                                // we now need to translate the return function\n                                switch (returnFunction[0]) {\n\n                                    case \"end\": {\n                                        returnFunction = () => {\n                                            const newBranch = {\n                                                action: [\"end\"]\n                                            };\n                                            npcHandler.currentBranch = newBranch;\n                                            npcHandler.runBranch(Object.keys(newBranch));\n                                        }\n                                        break;\n                                    }\n\n                                    case \"waypoint\": {\n                                        returnFunction = () => {\n                                            // we'll create an artifical branch and link it to NPC handler\n                                            const newBranch = {\n                                                action: cBranch[item][2] // testing instead of cBranch.action[2]\n                                            };\n                                            npcHandler.currentBranch = newBranch;\n                                            npcHandler.runBranch(Object.keys(newBranch));\n                                        }\n                                    }\n                                };\n\n                                Object(_shops__WEBPACK_IMPORTED_MODULE_10__[\"initShop\"])(shopName, returnFunction);\n                                break;\n\n                            }\n\n                            case \"battle\": {\n                                const enemyDetails = cBranch[item][1][0];\n                               //console.log(enemyDetails);\n                                // index 0: enemy name\n                                // index 1: custom battle arguments\n\n                                const temp = cBranch[item][1][1]; // this won't exist when ffunc is called\n                                _combat__WEBPACK_IMPORTED_MODULE_11__[\"Combat\"].battleProcessing(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player, Object(_enemies__WEBPACK_IMPORTED_MODULE_7__[\"getEnemy\"])(cBranch[item][1][0][0]), () => {  //cBranch.action[1][0]\n                                    // we'll create an artifical branch and link it to NPC handler (for finish function)\n                                    const newBranch = {\n                                        action: temp // testing instead of cBranch.action[1][1]\n                                    };\n                                    npcHandler.currentBranch = newBranch;\n                                    npcHandler.runBranch(Object.keys(newBranch));\n                                }, enemyDetails[1])\n                                break;\n                            }\n\n                            case \"gold\": {\n                                stop = true;\n                                const goldAmount = cBranch[item][1];\n                                //console.log(copy(cBranch));\n                                const func = () => {\n                                    _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.gold += goldAmount;\n                                    Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player);\n                                    //\n                                    var responseArrTemp = [...responseArr];\n                                    delete responseArrTemp[responseArrTemp.indexOf(item)];\n                                    //console.log(responseArrTemp);\n                                    this.runBranch(responseArrTemp); \n                                };\n                                const msg = [[`<br>${goldAmount > 0 ? 'Obtained' : 'Lost'} ${Math.abs(goldAmount)} gold!`, 1]];\n                                if (_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollStyle == \"auto\") {\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](msg, \"oustide\", func);\n                                } else {\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](msg, func, true)\n                                }\n                                break;\n                            }\n\n                            case \"exp\": {\n                                stop = true;\n                                //console.log(copy(cBranch));\n                                const expAmount = cBranch[item][1];\n                                const msg = [[`<br>Obtained ${expAmount} EXP!`, 1]];\n                                const func =  () => {\n                                    _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.exp += expAmount;\n                                    Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player);\n                                    Object(_combat__WEBPACK_IMPORTED_MODULE_11__[\"checkLevel\"])();\n                                    //\n                                    var responseArrTemp = [...responseArr];\n                                    delete responseArrTemp[responseArrTemp.indexOf(item)];\n                                    //console.log(responseArrTemp);\n                                    this.runBranch(responseArrTemp); \n                                };\n\n                                if (_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollStyle == \"auto\") {\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](msg, \"oustide\", func);\n                                } else {\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](msg, func, true);\n                                }\n\n                                break;\n                            }\n\n                            case \"items\": {\n                                stop = true;\n                                const itemName = cBranch[item][1];\n                                const itemAmount = cBranch[item][2];\n                                if (itemAmount > 0) {\n                                    Object(_items__WEBPACK_IMPORTED_MODULE_8__[\"addItem\"])(itemName, itemAmount, itemAmount);\n                                } else {\n                                    Object(_items__WEBPACK_IMPORTED_MODULE_8__[\"removeItem\"])(itemName, itemAmount * -1);\n                                };\n                                Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player);\n                                const func = () => {\n                                    var responseArrTemp = [...responseArr];\n                                    delete responseArrTemp[responseArrTemp.indexOf(item)];\n                                    this.runBranch(responseArrTemp);\n                                };\n                                if (_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollStyle == \"auto\") {\n                                    setTimeout(func, 1000 * _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].messageDelay);\n                                } else {\n                                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"]([\"\"], func, false);\n                                }\n\n                                break;\n                            }\n\n                            case \"flag\": {\n                                const flagName = cBranch[item][1];\n                                const shift = cBranch[item][2];\n                                // set the flag\n                                if (shift == \"true\") {\n                                    _data__WEBPACK_IMPORTED_MODULE_3__[\"flags\"][flagName].complete = true;\n                                } else {\n                                    _data__WEBPACK_IMPORTED_MODULE_3__[\"flags\"][flagName].complete = false;\n                                }\n\n                                break;\n                            }\n\n                            case \"recipe\": {\n                                const recipeName = cBranch[item][1];\n                                Object(_crafting__WEBPACK_IMPORTED_MODULE_12__[\"unlockRecipes\"])(recipeName); // this can take arrays of recipes\n\n                                break;\n                            }\n\n                            case \"music\": {\n                                if (cBranch[item][1] != \"stop\") {\n                                    //console.log(\"branch: play music\")\n                                    const musicName = cBranch[item][1];\n                                    npcHandler.music = musicName;\n                                    _music__WEBPACK_IMPORTED_MODULE_13__[\"musicHandler\"].playMusic(musicName);\n                                } else {\n                                    _music__WEBPACK_IMPORTED_MODULE_13__[\"musicHandler\"].music = undefined;\n                                    _music__WEBPACK_IMPORTED_MODULE_13__[\"musicHandler\"].stopMusic();\n                                };\n                                break;``\n                            }\n\n                            case \"crafting\": {\n                                // action: [\"crafter\", [.. arr of recipes], finishFunction]\n                                // Note that finishFunction needs to be in the form of a branch; e.g [\"end\"], or..\n                                // .. [\"waypoint\", ...], etc. NOT just \"end\"\n                                const details = cBranch[item];\n                                const temp = cBranch[item][2] // wont exist when we call ffunc\n                                Object(_crafting__WEBPACK_IMPORTED_MODULE_12__[\"initCrafting\"])(() => {\n                                    const newBranch = {\n                                        action: temp\n                                    };\n                                    npcHandler.currentBranch = newBranch;\n                                    npcHandler.runBranch(Object.keys(newBranch));\n                                }, cBranch[item][1])\n\n                                break;\n                            }\n\n                            case \"heal\": {\n                                _combat__WEBPACK_IMPORTED_MODULE_11__[\"Combat\"].heal(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.stats);\n                                Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player);\n                                break;\n                            }\n\n                            case \"custom\": {\n                                //console.log(`CUSTOM. ITEM IS ${item}`);\n                                const func = cBranch[item][1];\n                                func();\n                                break;\n                            }\n\n                            case \"teleport\": {\n                                const coords = cBranch[item][1];\n                                Object(_rooms__WEBPACK_IMPORTED_MODULE_15__[\"teleport\"])(coords);\n                                break;\n                            }\n\n                        }\n\n                        //console.log(\"deleting...2);\")\n                        //console.log(cBranch[item]);\n                        delete cBranch[item];\n                        responseArr.splice(responseArr.indexOf(item), 1);\n                        i--; // i beseech the divine\n\n                    }\n\n                    break;\n                };\n\n                case \"end\": {\n                    //console.log(`stop is ${stop}`);\n                    //console.log(\"end\");\n\n                    //console.log(responseArr);\n                    if (!stop && responseArr[0] == \"end\") {\n                        const cBranch = npcHandler.currentBranch;\n                        const cNpc = npcHandler.currentNpc; // for easy access\n                        const returnFunction = npcHandler.returnFunction;\n                        //console.log('printing return function');\n                        //console.log(npcHandler.returnFunction);\n\n                        const dialogue = npcHandler.parseDialogue(Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"copy\"])(cNpc.end));\n                        const finishFunction = () => {\n                            npcHandler.music = undefined;\n                            returnFunction();\n                        }\n                        if (_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollStyle == \"auto\") {\n                            if (dialogue[0][0] == \"<br>\") {\n                                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"\"); // linebreak\n                                finishFunction();\n                            } else { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](dialogue, \"outside\", finishFunction); };\n                        } else {\n                            if (dialogue[0][0] == \"<br>\") {\n                                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"\"); // linebreak\n                                finishFunction();\n                            } else {\n                                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayWaitForInput\"](dialogue, finishFunction, true);\n                            }\n                        }\n                        // say whatever is in \"end\", then exit\n                    }\n                    break;\n                };\n\n                case \"options\": {\n                    if (!stop) {\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"\"); // acts as a linebreak\n                        Object.keys(cBranch.options).forEach((opt, index) => {\n                            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${index + 1} - ${opt}`)\n                        })\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](this.branchResponse);\n                    }\n                    break;\n                };\n\n                case \"conditional\": {\n                    if (!stop) {\n                        const cBranch = npcHandler.currentBranch;\n                        const conditional = cBranch.conditional;\n                        var newBranch = undefined;\n                        var branchFound = false;\n                        const player = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player;\n                        // run forEach over the conditional object\n\n                        //console.log(\"SEARCHING CONDITIONS\");\n\n                        Object.keys(conditional).forEach(key => {\n                            if (!branchFound) {\n                                if (Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"checkConditions\"])([key]) == true) { // take multiple conditions at once functionality needed\n                                    branchFound = true;\n                                    newBranch = conditional[key];\n                                }\n                            }\n\n                        })\n\n                        //console.log(\"BRANCH FOUND\");\n                        //console.log(newBranch);\n\n                       //console.log(`RESULT: ${branchFound}`);\n\n                        if (branchFound) {\n                            npcHandler.currentBranch = newBranch;\n                            npcHandler.runBranch(Object.keys(newBranch));\n                        }\n\n                        // If the value found is false\n                        // Turn each key in the conditional object into an array\n                        // If it is an item, use checkQuantity or w/e\n                        // If it is flag, check the value of the flag in data.js\n                        // If it is level, check player level in data.js\n                        // If the condition is met then set branchToRun to that branch and set found to true\n                        // Then run the branch\n                    }\n\n                    break;\n                }\n\n                case \"interesting_item\": {\n                        const customBranch = {\n                            say: [[\"<br>You notice something interesting on the floor. You decide to pick\" +\n                            \" it up and take it with you.\", 0]],\n                            action: [\"items\", cBranch[item][1][0], cBranch[item][1][1]],\n                            action3: [\"flag\", cBranch[item][0], \"true\"],\n                            action2: [\"end\"]\n                        };\n                        npcHandler.currentBranch = customBranch\n                        npcHandler.runBranch(Object.keys(customBranch));\n                }\n\n                default:\n                //console.log(\"Not an action\");\n            }\n        }\n    },\n\n    branchResponse() {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](npcHandler.branchResponse);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n\n        const currentBranch = npcHandler.currentBranch; // get the branch currently being used\n        const options = Object.keys(currentBranch.options) // get the option responses. Options will be an array\n\n        if (parseInt(input).toString() != \"Nan\" && input != \"\") { // blank inputs dont become \"NaN\"\n            if (options[input - 1] != undefined) {\n                const selection = options[input - 1]; // save the selection to a variable, makes code clean\n                npcHandler.currentBranch = currentBranch.options[selection]; // change current branch \n                npcHandler.runBranch(Object.keys(npcHandler.currentBranch)); // run code on current branch\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Input out of range\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](npcHandler.branchResponse);\n            }\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input.\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](npcHandler.branchResponse);\n        }\n    },\n\n    parseDialogue(dialogue) { // messages are in format [[\"message\", waitmod]] so when parsing the image we need to...\n        //console.log(\"logging dialogue\");\n        //console.log(dialogue);\n\n        dialogue.forEach(sentence => {\n           //console.log(`sentence 0 is ${sentence[0]} sentence is ${sentence}`)\n            sentence[0] = sentence[0].replace(/\\[name\\]/gi, `${npcHandler.currentNpc.name}`);\n            sentence[0] = sentence[0].replace(/\\[player\\]/gi, `${_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player.name}`);\n            sentence[0] = \"<br>\" + sentence[0];\n        })\n\n        return dialogue;\n    },\n\n    end() { // if we need to add it as a return function\n        npcHandler.runBranch([\"end\"]);\n    }\n\n}\n\nconst initNpc = (npc, return_function) => {\n    npcHandler.initNpc(npc, return_function);\n}\n\nconst getNpcDetails = () => {\n    return {\n        currentNpc: npcHandler.currentNpc,\n        currentBranch: npcHandler.currentBranch,\n        returnFunction: npcHandler.returnFunction,\n    \n        music: npcHandler.music,\n    }\n}\n\n//# sourceURL=webpack:///./src/js/models/npc.js?");

/***/ }),

/***/ "./src/js/models/rooms.js":
/*!********************************!*\
  !*** ./src/js/models/rooms.js ***!
  \********************************/
/*! exports provided: floorToZone, getCurrentZone, teleport, zoneExplorer, zones, getBaseOptions, generateMap, generateMiniMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"floorToZone\", function() { return floorToZone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCurrentZone\", function() { return getCurrentZone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"teleport\", function() { return teleport; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zoneExplorer\", function() { return zoneExplorer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zones\", function() { return zones; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBaseOptions\", function() { return getBaseOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateMap\", function() { return generateMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateMiniMap\", function() { return generateMiniMap; });\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var _combat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./combat */ \"./src/js/models/combat.js\");\n/* harmony import */ var _enemies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enemies */ \"./src/js/models/enemies.js\");\n/* harmony import */ var _items__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./items */ \"./src/js/models/items.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../index */ \"./src/js/index.js\");\n/* harmony import */ var _npc__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./npc */ \"./src/js/models/npc.js\");\n/* harmony import */ var _baseModel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./baseModel */ \"./src/js/models/baseModel.js\");\n/* harmony import */ var _learnSkills__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./learnSkills */ \"./src/js/models/learnSkills.js\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./settings */ \"./src/js/models/settings.js\");\n/* harmony import */ var _crafting__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./crafting */ \"./src/js/models/crafting.js\");\n/* harmony import */ var _views_baseView__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../views/baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _initMenu__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./initMenu */ \"./src/js/models/initMenu.js\");\n/* harmony import */ var _directories_zones_floor0__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../directories/zones/floor0 */ \"./src/directories/zones/floor0.js\");\n/* harmony import */ var _directories_zones_floor1__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../directories/zones/floor1 */ \"./src/directories/zones/floor1.js\");\n/* harmony import */ var _music__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./music */ \"./src/js/models/music.js\");\n\n // need messageDelay\n // only need endturn and getequips\n\n\n\n\n\n\n\n\n\n\n\n\n// ZONE IMPORTS\n\n\n\n//\n\nconst floorToZone = {\n    0: 'floor0',\n    1: 'floor1'\n}\n\nconst getCurrentZone = () => {\n    return zoneExplorer.currentZone;\n}\n\nconst teleport = coords => {\n    var trueCoords;\n\n    if (zoneExplorer.currentZone != undefined) {\n        if (typeof(coords) == \"string\") { // this means its a roomcode, find the roomcode\n            const zoneDetails = zoneExplorer.currentZone.zone;\n            for (var y = 0; y < zoneDetails.length; y++) {\n                for (var x = 0; x < zoneDetails[y].length; x++) {\n                    if (zoneDetails[y][x] == coords) {\n                        trueCoords = [y, x]\n                        break;\n                    }\n                }\n            }\n        } else { trueCoords = coords }\n        const zone = zoneExplorer.currentZone.zone\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Teleporting to ${[trueCoords[1], zone.length - trueCoords[0]]}`)\n        zoneExplorer.ambushed = true; // so no ambushing when teleporting\n        zoneExplorer.coordinates = trueCoords\n        \n        zoneExplorer.ambushed = true;\n        zoneExplorer.justEnteredRoom = true;\n    } else {\n        return false;\n    }\n}\n\n\nconst zoneExplorer = {\n    currentZone: undefined,\n    currentRoom: undefined,\n    coordinates: undefined,\n    justEnteredRoom: true,\n    ambushed: false,\n\n    roomLoop: (additionalArgs = {} ) => {\n\n        //console.log(zoneExplorer.coordinates);\n\n        const zone = zoneExplorer.currentZone;\n        const coordinates = zoneExplorer.coordinates;\n        const roomCode = zone.zone[coordinates[0]][coordinates[1]];\n        //console.log(`roomcode is ${roomCode}`);\n\n        // update the player's exploreCache\n        _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.exploreCache.coordinates = [coordinates[0], coordinates[1]];\n        // -----------------\n\n        // getting any additional args\n        var noAmbush = false;\n        if (additionalArgs.noAmbush == true) {zoneExplorer.ambushed = true};\n        // ------------------\n\n        // create custom room\n        const baseRoom = JSON.parse(JSON.stringify(zone[roomCode[0]]));\n        if (roomCode.length > 1) {\n            // if this is the case then we need to get the additional room data\n            const additionalData = baseRoom.specialRooms[roomCode.slice(1)]; // get the additional data\n            Object.keys(additionalData).forEach(data => {\n                baseRoom[data] = additionalData[data]; // overwrite base room data w/ additional data where applicable\n            });\n        };\n        // remove specialRooms from baseRoom\n        delete baseRoom.specialRooms;\n        zoneExplorer.currentRoom = baseRoom;\n        // -----\n        const currentRoom = zoneExplorer.currentRoom;\n        \n        const playerMap = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.maps[zone.name];\n\n        var discoveredPrior = playerMap[coordinates[1]][coordinates[0]] == \"discovered\" ? true : false;\n\n        // add the zone to the player's map\n        if (playerMap[coordinates[1]][coordinates[0]] != \"discovered\") {\n            playerMap[coordinates[1]][coordinates[0]] = \"discovered\";\n            // add \"seen\" to all cardinal directions\n            if (playerMap[coordinates[1] + 1][coordinates[0]] != \"discovered\") {\n                playerMap[coordinates[1] + 1][coordinates[0]] = \"seen\"\n            };\n            if (playerMap[coordinates[1] - 1][coordinates[0]] != \"discovered\") {\n                playerMap[coordinates[1] - 1][coordinates[0]] = \"seen\"\n            };\n            if (playerMap[coordinates[1]][coordinates[0] + 1] != \"discovered\") {\n                playerMap[coordinates[1]][coordinates[0] + 1] = \"seen\"\n            };\n            if (playerMap[coordinates[1]][coordinates[0] - 1] != \"discovered\") {\n                playerMap[coordinates[1]][coordinates[0] - 1] = \"seen\"\n            };\n        };\n\n\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player); // important for minimap (must be after we update player map)\n\n        var procAmbush = false;\n        if (zoneExplorer.ambushed == false && noAmbush == false) { // we want to call this after they're ambushed and dont want it to happen again\n           //console.log(\"ammmmbushed\")\n            zoneExplorer.ambushed = true;\n            const ambushes = currentRoom.ambushes;\n            //console.log(ambushes);\n            const random = Math.floor(Math.random() * 100) + 1; // generate a number between 1 and 100\n            var index = 0;\n            var cumulativeChance = 0;\n            for (index in ambushes) {\n               //console.log(`random is ${random}, prevchance is ${cumulativeChance}, ambush chance is ${ambushes[index][1]}`)\n               //console.log(`currently rolling for ${random[index]}`)\n               var baseChance = ambushes[index][1];\n               if (discoveredPrior) { baseChance = baseChance / 10 };\n                if (random > cumulativeChance && random <= baseChance + cumulativeChance) {\n                    // this means that this ambush was found\n                    procAmbush = true;\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_11__[\"separator\"]}AMBUSH!!`);\n                    const enemy = _enemies__WEBPACK_IMPORTED_MODULE_3__[\"enemies\"][ambushes[index][0]];\n                    const battleDetails = ambushes[index][2];\n                    _combat__WEBPACK_IMPORTED_MODULE_2__[\"Combat\"].battleProcessing(_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player, enemy, zoneExplorer.roomLoop, battleDetails);\n                    break;\n                } else {\n                    cumulativeChance += baseChance;\n                }\n            }\n        };\n\n        var procEvent = false;\n        if (zoneExplorer.justEnteredRoom && !procAmbush) { // if the player has just entered the room\n            var eventsToRun = []; // create an empty array to fill w/ events (onEnter)\n            const enterEvents = zoneExplorer.currentRoom.onEnter;\n            if (enterEvents.length > 0) {\n                enterEvents.forEach(event => {\n                    if (Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"checkConditions\"])(event[1]) == true) { // add all onEnters whose requirements are met to the array\n                        eventsToRun.push(event[0]);\n                    };\n                });\n                const eventRunner = (eventList) => { // create a function that runs all queued events before running room loop\n                    var events = eventList;\n                    Object(_npc__WEBPACK_IMPORTED_MODULE_6__[\"initNpc\"])(events[0], () => { // run event (npc) at the front of the queue\n                        events.shift(); // then remove it from the queue\n                        if (events.length > 0) { // if there are more, run the next\n                            eventRunner(events);\n                        } else {\n                            zoneExplorer.justEnteredRoom = false; // otherwise proceed to room loop\n                            zoneExplorer.roomLoop();\n                        }\n                        \n                    })\n                };\n                if (eventsToRun.length > 0) { procEvent = true; eventRunner(eventsToRun) };\n            }\n        }\n\n\n        // we dont want this to happen at the same time as an ambush\n        if (!procAmbush && !procEvent) {\n            zoneExplorer.roomLoop2(zoneExplorer.justEnteredRoom);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](zoneExplorer.roomResponse);\n        }\n    },\n\n    roomLoop2: (descroom = false) => {\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player);\n\n        const coordinates = zoneExplorer.coordinates;\n        const zone = zoneExplorer.currentZone.zone;\n        const roomCode = zone[coordinates[0]][coordinates[1]];\n        const currentRoom = zoneExplorer.currentRoom;\n        \n        _music__WEBPACK_IMPORTED_MODULE_15__[\"musicHandler\"].playMusic(currentRoom.music);\n\n        if (descroom) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_11__[\"separator\"]}${currentRoom.entrance}`);\n        };\n    \n        // calculate displacement from center;\n        const trueCoordinates = [coordinates[1], zone.length - coordinates[0]];\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<b>Coordinates: [${trueCoordinates}]</b>`)\n        //console.log(\"DISPLAYING BASE OPTIONS\");\n        getBaseOptions().forEach(option => {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](option)\n        });\n\n        var counter = 1; // number of options displayed\n        currentRoom.extraOptions.forEach(option => {\n            // evaluate whether or not it should be shown\n            var showOption = true;\n            if (option.length > 1) {\n\n                showOption = Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"checkConditions\"])(option[1]);\n\n            }\n\n            if (showOption) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](` - ${counter}: ${option[0]}`);\n                counter += 1;\n            }\n        });\n\n        zoneExplorer.justEnteredRoom = false;\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](zoneExplorer.roomResponse);\n    },\n\n    roomResponse: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](zoneExplorer.roomResponse);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n        const currentZone = zoneExplorer.currentZone;\n        const coordinates = zoneExplorer.coordinates;\n        const roomCode =  zoneExplorer.currentZone.zone[coordinates[0]][coordinates[1]];\n        const currentRoom = zoneExplorer.currentRoom;\n\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player);\n\n        const unlocked = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].unlocked;\n\n        //console.log(`search returns ${currentRoom.interacts[parseInt(input - 1)]} parseint is ${parseInt(input - 1)}`)\n\n        switch (true) {\n            \n            case (input == \"ex\"):\n            case (input == \"explore\"): { // if the player wants to explores\n                const explores = currentRoom.explores;\n                if (explores.length > 0) {\n                    const random = Math.floor(Math.random() * 100) + 1; // generate a number between 1 and 100\n                    //console.log(`Random is ${random}`)\n                     var index = 0;\n                     /* for randomisation, we check if the number rolled is between the chance of the previous item and the current item\n                     plus the previous item. So in example array [[\"foo\", 10], [\"do\", 50]], we first check if random is less than or equal\n                     to 10 (10% chance). If not, we check if it is greater than prev. chance (10), less than/equal to and the current\n                     chance (10 + 50 = ) 60. The range is 50, so there is a 50% chance of the second item. So the chance of one of the two\n                     things happening is 60%. This is untrue if the items were to overlap. */\n                     for (index in explores) { \n                         const prevChance = index == 0 ? 0 : explores[index - 1][1];\n                        //console.log(`index is ${index}`);\n                         if (random > prevChance && random <= explores[index][1] + prevChance) { // see above\n                             if (explores[index][0] == \"encounter\") { // if encounter was rolled...\n                                 //console.log(\"Rolled encounter\");\n                                 var index = 0;\n                                 const encounters = currentRoom.encounters;\n                                 const random = Math.floor(Math.random() * 100) + 1; // generate a number between 1 and 100\n                                 var cumulativeChance = 0;\n                                //console.log(`Encounter random is ${random}`)\n                                 for (index in encounters) { \n                                    //console.log(`index is ${index}`);\n                                     const prevChance = index == 0 ? 0 : encounters[index - 1][1];\n                                     cumulativeChance += prevChance;\n                                     if (random > cumulativeChance && random <= encounters[index][1] + cumulativeChance) {\n                                         _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>You survey the area....\");\n                                         _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>An enemy approaches!\");\n                                         const enemy = _enemies__WEBPACK_IMPORTED_MODULE_3__[\"enemies\"][encounters[index][0]];\n                                         const battleDetails = encounters[index][2];\n                                         _combat__WEBPACK_IMPORTED_MODULE_2__[\"Combat\"].battleProcessing(_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player, enemy, zoneExplorer.roomLoop, battleDetails);\n     \n                                         break;\n                                     }\n                                 }\n                             } else if (explores[index][0] == \"find\") {\n                                 //console.log(\"Rolled find\");\n                                 var index = 0;\n                                 const finds = currentRoom.finds;\n                                 const random = Math.floor(Math.random() * 100) + 1; // generate a number between 1 and 100\n                                 var cumulativeChance = 0;\n                                 //console.log(`Find random is ${random}`)\n                                 for (index in finds) { \n                                     const prevChance = index == 0 ? 0 : finds[index - 1][1];\n                                     //console.log(`prev chance is ${prevChance}`)\n                                     cumulativeChance += prevChance;\n                                     //console.log(`cum chance is ${cumulativeChance}`)\n                                     if (random > cumulativeChance && random <= finds[index][1] + cumulativeChance) {\n                                         _music__WEBPACK_IMPORTED_MODULE_15__[\"musicHandler\"].playFX(\"find\");\n                                         _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>You survey the area....\");\n                                         _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>You find something while looking around!\")\n                                         if (finds[index][3] != undefined) {\n                                             Object(_items__WEBPACK_IMPORTED_MODULE_4__[\"addItem\"])(finds[index][0], finds[index][2], finds[index][3]);\n                                         } else { Object(_items__WEBPACK_IMPORTED_MODULE_4__[\"addItem\"])(finds[index][0]); }\n                                         break;\n                                     }\n                                 }\n                                 _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](zoneExplorer.roomResponse);\n                             }\n                         }\n                     }\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br><b>There is nothing to be found.</b>\");\n                    Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player);\n                    zoneExplorer.roomLoop();\n                }\n                break;\n            }\n\n            case (input == \"i\" && unlocked.inventory):\n            case (input == \"inventory\" && unlocked.inventory): {\n                Object(_initMenu__WEBPACK_IMPORTED_MODULE_12__[\"initEquip\"])(zoneExplorer.roomLoop);\n                break;\n            }\n\n            case (input == \"st\" && unlocked.stats):\n            case (input == \"stats\" && unlocked.stats): {\n                Object(_learnSkills__WEBPACK_IMPORTED_MODULE_8__[\"initStats\"])(zoneExplorer.roomLoop);\n                break;\n            }\n\n            case (input == \"set\"):\n            case (input == \"settings\"): {\n                Object(_settings__WEBPACK_IMPORTED_MODULE_9__[\"initSettings\"])(zoneExplorer.roomLoop);\n                break;\n            }\n\n            case (input == \"c\" && unlocked.crafting):\n            case (input == \"crafting\" && unlocked.crafting): {\n                Object(_crafting__WEBPACK_IMPORTED_MODULE_10__[\"initCrafting\"])(zoneExplorer.roomLoop);\n                break;\n            }\n\n            case (currentRoom.interacts[parseInt(input - 1)] != undefined): { // if they try to interact with someone\n                //console.log(`passed check`);\n\n                // create an array of available options\n                var availableOptions = [];\n                for (var x = 0; x < currentRoom.interacts.length; x++) {\n                    var canDo = true;\n                    if (currentRoom.interacts[x].length > 1) {\n                        canDo = Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"checkConditions\"])(currentRoom.interacts[x][1])\n                    };\n                    if (canDo) {\n                        availableOptions.push(currentRoom.interacts[x]);\n                    }\n                }\n\n                // creating another array and checking it allows us to exclude options that the player does not have access to..\n                // ..since they don't meet the conditions.\n\n                //console.log(\"logging available options\");\n                //console.log(availableOptions);\n                if (availableOptions[parseInt(input - 1)] != undefined) {\n                    Object(_npc__WEBPACK_IMPORTED_MODULE_6__[\"initNpc\"])(availableOptions[parseInt(input - 1)][0], zoneExplorer.roomLoop);\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Invalid input\");\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](zoneExplorer.roomResponse);\n                }\n\n                break;\n            }\n            \n            case (input == \"leave\"): {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Leaving area...\");\n\n                // gotta reset room explorer\n                zoneExplorer.currentZone = undefined;\n                zoneExplorer.coordinates = undefined;\n                zoneExplorer.justEnteredRoom = true;\n                _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.exploreCache.zone = undefined;\n                _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.exploreCache.coordinates = [];\n                Object(_index__WEBPACK_IMPORTED_MODULE_5__[\"mainLoop\"])();\n                break;\n            \n            }\n                \n            case (input == \"s\"):\n            case (input == \"south\"): {\n                // if there is explicit ref. to a room then goto it\n                // otherwise if the natural movement of the player leads to a room, goto it\n                // otherwise inform player they cannot go in that direction (sorry player :[)\n                var newCoordinates = undefined;\n                const naturalNewRoom = [coordinates[0] + 1, coordinates[1]]\n                if (currentRoom.south != undefined) {\n                    newCoordinates= zoneExplorer.currentZone.zone.south;\n                } else if (naturalNewRoom != undefined && currentZone.zone[naturalNewRoom[0]][naturalNewRoom[1]] != \"n\") {\n                    newCoordinates= naturalNewRoom;\n                }\n\n                if (newCoordinates != undefined) {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"]([[\"<br>You travel to the south...\", 0.4, true, {}, \"flatsec\"]], \"outside\", () => {\n                        zoneExplorer.coordinates = newCoordinates;\n                        zoneExplorer.justEnteredRoom = true;\n                        zoneExplorer.ambushed = false;\n                        zoneExplorer.roomLoop();\n                    } )\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<b>You can't travel in that direction!</b>\");\n                    zoneExplorer.roomLoop();\n                }\n                break;\n            }\n\n            case (input == \"n\"):\n            case (input == \"north\"): {\n                var newCoordinates = undefined;\n                const naturalNewRoom = [coordinates[0] - 1, coordinates[1]]\n                if (currentRoom.south != undefined) {\n                    newCoordinates= zoneExplorer.currentZone.zone.south;\n                } else if (naturalNewRoom != undefined && currentZone.zone[naturalNewRoom[0]][naturalNewRoom[1]] != \"n\") {\n                    newCoordinates= naturalNewRoom;\n                }\n\n                if (newCoordinates != undefined) {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"]([[\"<br>You travel to the north...\", 0.4, true, {}, \"flatsec\"]], \"outside\", () => {\n                        zoneExplorer.coordinates = newCoordinates;\n                        zoneExplorer.justEnteredRoom = true;\n                        zoneExplorer.ambushed = false;\n                        zoneExplorer.roomLoop();\n                    } )\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<b>You can't travel in that direction!</b>\");\n                    zoneExplorer.roomLoop();\n                }\n                break;\n            }\n\n            case (input == \"w\"):\n            case (input == \"west\"): {\n                var newCoordinates = undefined;\n                const naturalNewRoom = [coordinates[0], coordinates[1] - 1]\n                if (currentRoom.south != undefined) {\n                    newCoordinates= zoneExplorer.currentZone.zone.south;\n                } else if (naturalNewRoom != undefined && currentZone.zone[naturalNewRoom[0]][naturalNewRoom[1]] != \"n\") {\n                    newCoordinates= naturalNewRoom;\n                }\n\n                if (newCoordinates != undefined) {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"]([[\"<br>You travel to the west...\", 0.4, true, {}, \"flatsec\"]], \"outside\", () => {\n                        zoneExplorer.coordinates = newCoordinates;\n                        zoneExplorer.justEnteredRoom = true;\n                        zoneExplorer.ambushed = false;\n                        zoneExplorer.roomLoop();\n                    } )\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<b>You can't travel in that direction!</b>\");\n                    zoneExplorer.roomLoop();\n                }\n                break;\n            }\n\n            case (input == \"e\"):\n            case (input == \"east\"): {\n                var newCoordinates = undefined;\n                const naturalNewRoom = [coordinates[0], coordinates[1] + 1]\n                if (currentRoom.south != undefined) {\n                    newCoordinates= zoneExplorer.currentZone.zone.south;\n                } else if (naturalNewRoom != undefined && currentZone.zone[naturalNewRoom[0]][naturalNewRoom[1]] != \"n\") {\n                    newCoordinates= naturalNewRoom;\n                }\n\n                if (newCoordinates != undefined) {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"]([[\"<br>You travel to the east...\", 0.4, true, {}, \"flatsec\"]], \"outside\", () => {\n                        zoneExplorer.coordinates = newCoordinates;\n                        zoneExplorer.justEnteredRoom = true;\n                        zoneExplorer.ambushed = false;\n                        zoneExplorer.roomLoop();\n                    } )\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<b>You can't travel in that direction!</b>\");\n                    zoneExplorer.roomLoop();\n                }\n                break;\n            }\n            \n            case (input == \"m\"):\n            case (input == \"map\"): {\n                const mapBase = currentZone.zone;\n\n                const mapString = generateMap(mapBase, currentZone, coordinates);\n\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](mapString);\n                zoneExplorer.roomLoop();\n                break;\n            }\n\n            case (input == \"sm\"):\n            case (input == \"show minimap\"): {\n                if (_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplayMode\"].mode == \"minimap\") {\n                    _baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplayMode\"].mode = \"normal\";\n                } else {\n                    _baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplayMode\"].mode = \"minimap\";\n                }\n                \n                Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player);\n                zoneExplorer.roomLoop();\n                break;\n            }\n\n            case (input == \"rep\"):\n            case (input == \"reprint\"): {\n\n                \n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Reprinting options..\");\n\n                Object(_baseModel__WEBPACK_IMPORTED_MODULE_7__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player);\n                zoneExplorer.roomLoop();\n                break;\n            }\n                \n\n            default: {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Invalid input\");\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](zoneExplorer.roomResponse);\n            }\n\n    \n\n        \n    }\n\n}\n}\n\nconst zones = {\n\n    floor0: _directories_zones_floor0__WEBPACK_IMPORTED_MODULE_13__[\"floor0\"],\n    floor1: _directories_zones_floor1__WEBPACK_IMPORTED_MODULE_14__[\"floor1\"]\n\n}\n\nconst getBaseOptions = function() {\n    const unlocked = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].unlocked;\n    const options = [`${_views_baseView__WEBPACK_IMPORTED_MODULE_11__[\"separator\"]} - ex/Explore`, \" - w/west\", \" - e/east\", \" - n/north\",\n                    \" - s/south\"];\n    if (unlocked.inventory) {\n        options.push(\" - i/inventory\");\n    }\n    if (unlocked.stats) {\n        options.push(\" - st/stats\");\n    }\n    if (unlocked.crafting) {\n        options.push(\" - c/crafting\")\n    }\n\n    options.push(\" - m/map\", \" - sm/show minimap\", \" - set/settings\", \" - Leave\");\n\n    return options;\n}\n\nconst generateMap = (mapBase, zoneToMap, playerCoordinates) => {\n    //const mapBase = currentZone.zone;\n    const playerMap = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.maps[zoneToMap.name];\n\n    // initialise map string\n    var mapString = \"\";\n    // for each column...\n    // -- for each row....\n    //console.log(\"plr map\");\n    //console.log(playerMap);\n    for (var y = 0; y < mapBase.length; y++) {\n        //console.log(\"running on column\");\n        for (var x = 0; x < mapBase[y].length; x++) {\n            //console.log(\"running on row\");\n            /*if (mapBase[y][x] == \"n\") {\n                mapString += \"  ▩\";\n            } else {*/\n                if (playerCoordinates[0] == y && playerCoordinates[1] == x) {\n                    mapString += \" \t<span style='color:#00ff99'>▣</span>\";\n                } else if (playerMap[x][y] == \"discovered\") {\n                    // need to get the roomcode of the room we are looking at\n                    const roomCodeTemp = zoneToMap.zone[y][x];\n                    const colour = zoneToMap[roomCodeTemp[0]].colour;\n                    mapString += `<span style=\"color:${colour}\">  ▣</span>`\n                } else if (playerMap[x][y] == \"seen\") {\n                    if (mapBase[y][x] == \"n\") {\n                        mapString += \"  ▩\";\n                    } else {\n                       mapString += \"\t▢\"; \n                    }\n                } else {\n                    mapString += \"\t▥\";\n                }\n        }\n        mapString += '<br>'\n    };\n\n    // if column, row is \"n\", insert a █\n    // if column, row is not, check what the player's map says and display that. If..\n    // ..undefined, display a \"X\" instead\n    // then print map and return to roomLoop\n\n    return mapString;\n}\n\nconst generateMiniMap = (mapBase, zoneToMap, playerCoordinates) => {\n    //const mapBase = currentZone.zone;\n    const playerMap = _data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player.maps[zoneToMap.name];\n\n    // initialise map string\n    var mapString = \"\";\n    // for each column...\n    // -- for each row....\n   //console.log(\"plr map\");\n   //console.log(playerMap);\n    for (var y = 0; y < mapBase.length; y++) {\n       //console.log(\"running on column\");\n        for (var x = 0; x < mapBase[y].length; x++) {\n           //console.log(\"running on row\");\n            /*if (mapBase[y][x] == \"n\") {\n                mapString += \"  ▩\";\n            } else {*/\n                const transX = x + playerCoordinates[1] - 8;\n                const transY = y + playerCoordinates[0] - 8;\n                if (transY < playerMap.length) {\n                    if (playerCoordinates[0] == transY && playerCoordinates[1] == transX) {\n                        mapString += \" \t<span style='color:#00ff99'>▣</span>\";\n                    }\n                    else if (transX < 0 || transY < 0 || transX > 64 || transY > 64) {\n                        mapString += \"\t▥\";\n                    } \n                    else if (playerMap[transX][transY] == \"discovered\") {\n                        // need to get the roomcode of the room we are looking at\n                        const roomCodeTemp = zoneToMap.zone[transY][transX];\n                        const colour = zoneToMap[roomCodeTemp[0]].colour;\n                        mapString += `<span style=\"color:${colour}\">  ▣</span>`\n                    } else if (playerMap[transX][transY] == \"seen\") {\n                        if (zoneToMap.zone[transY][transX] == \"n\") {\n                            mapString += \"  ▩\";\n                        } else {\n                           mapString += \"\t▢\"; \n                        }\n                    } else {\n                        mapString += \"\t▥\";\n                    }\n                } else {\n                    mapString += \"\t▥\";\n                }\n        }\n        mapString += '<br>'\n    };\n\n    // if column, row is \"n\", insert a █\n    // if column, row is not, check what the player's map says and display that. If..\n    // ..undefined, display a \"X\" instead\n    // then print map and return to roomLoop\n\n    return mapString;\n}\n\n//# sourceURL=webpack:///./src/js/models/rooms.js?");

/***/ }),

/***/ "./src/js/models/settings.js":
/*!***********************************!*\
  !*** ./src/js/models/settings.js ***!
  \***********************************/
/*! exports provided: initSettings, loadPlayer, loadSettings, loadDisciplines, loadFlags, overwritePropertiesPlayer, overwriteDisciplines, saveGame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initSettings\", function() { return initSettings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadPlayer\", function() { return loadPlayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadSettings\", function() { return loadSettings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadDisciplines\", function() { return loadDisciplines; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadFlags\", function() { return loadFlags; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"overwritePropertiesPlayer\", function() { return overwritePropertiesPlayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"overwriteDisciplines\", function() { return overwriteDisciplines; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"saveGame\", function() { return saveGame; });\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _views_baseView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../views/baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _baseModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./baseModel */ \"./src/js/models/baseModel.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! .. */ \"./src/js/index.js\");\n// imports\n\n\n\n\n\n\n// init. function\nconst initSettings = returnFunction => {\n    settingsHandler.returnFunction = returnFunction;\n\n    // -- SETTINGS -- \\\\\n\n    settingsHandler.mainLoop();\n}\n\n// object\nconst settingsHandler = {\n    returnFunction: undefined,\n\n    // main loop\n    mainLoop: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Currently in settings. You can do the following things:`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - Change the message delay for battle and outside of battle (input 'md')`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - Change the input shortcut key ('ci')`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - Toggle Sticky input shortcut. ('tsi', currently ${_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].stickyInputShortcut.on == true ? 'enabled' : 'disabled'})`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - Test your current message delay settings ('tc')`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - Toggle between \"wait for input\" and \"auto\" text scrolling ('tsc', currently ${_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollStyle == 'input' ? 'wait for input' : 'auto'})`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - Save or reset your data ('save')`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - Toggle auto save ('tas', currently auto save is ${_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].autoSave == true ? 'enabled' : 'disabled'})`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - Change the scroll limit ('sl')`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br> - See the music credits ('smc')`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Input <b>'b'/'back'</b> to return.`)\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"](_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"presetMenuOptions\"].settingsMain);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.mainLoopResponse);\n    },\n\n    mainLoopResponse: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](settingsHandler.mainLoopResponse);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n        switch (input) {\n\n            case \"message delay\":\n            case \"md\": {\n                settingsHandler.messageDelayLoop();\n                break;\n            }\n\n            case \"change shortcut\":\n            case \"ci\": {\n                settingsHandler.changeShortcutLoop();\n                break;\n            }\n\n            case \"toggle sticky shortcuts\":\n            case \"tsi\": {\n                if (_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].stickyInputShortcut.on == true) {\n                    _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].stickyInputShortcut.on = false;\n                } else { _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].stickyInputShortcut.on = true };\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br><b>Sticky input shortcut ${_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].stickyInputShortcut.on == true ? 'enabled' : 'disabled'}.`);\n                _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].stickyInputShortcut.active = false;\n                settingsHandler.mainLoop();\n                break;\n            }\n\n            case \"test message\":\n            case \"tc\": {\n                settingsHandler.testMessageLoop();\n                break;\n            }\n\n            case \"sa\":\n            case \"save\": {\n                settingsHandler.saveLoop();\n                break;\n            }\n\n            case \"tsc\":\n            case \"toggle scroll\": {\n                if (_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollStyle == \"auto\") {\n                    _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollStyle = \"input\";\n                } else { _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollStyle = \"auto\" };\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br><b>Scrolling style changed to ${_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollStyle}.`);\n                settingsHandler.mainLoop();\n                break;\n            }\n\n            case \"tas\":\n            case \"toggle auto save\": {\n                if (_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].special.canToggleAutosave == true) {\n                    if (_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].autoSave == false) {\n                        _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].autoSave = true;\n                    } else { _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].autoSave = false };\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br><b>Autosave ${_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].autoSave == true ? 'enabled' : 'disabled'}`);\n                }\n                else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<b>You can't do this right now.</b>`);\n                }\n                settingsHandler.mainLoop();\n                break;\n            }\n            \n            case \"smc\":\n            case \"see music credits\": {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br><b>Displaying music credits...</b>\");\n                _views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"musicCredits\"].forEach(credit => {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](credit);\n                });\n                settingsHandler.mainLoop();\n                break;\n            }\n\n            case \"sl\":\n            case \"scroll limit\": {\n                settingsHandler.scrollLimitLoop();\n                break;\n            }\n\n            case \"b\":\n            case \"back\": {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Returning...`);\n                settingsHandler.returnFunction();\n                break;\n            }\n\n            default: {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Invalid input.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"](_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"presetMenuOptions\"].settingsMain);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.mainLoopResponse);\n            }\n        }\n    },\n\n    scrollLimitLoop: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Currently in the scroll limit menu. Type any integer between 50 and 500 to change` +\n        ` the scroll limit to that number. Scroll limit refers to the number of lines that can be stored in the main box` +\n        ` before the oldest ones are deleted. <b>Scroll limit is currently ${_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollLimit}</b>`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.scrollLimitResponse);\n    },\n\n    scrollLimitResponse: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](settingsHandler.scrollLimitResponse);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        var shouldReturn = false;\n\n        if (parseInt(input).toString() != 'NaN') {\n            if (parseInt(input) >= 50 && parseInt(input) <= 500) {\n                _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].scrollLimit = parseInt(input);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`Scroll limit changed to ${parseInt(input)}`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`You are still in the scroll limit menu. Input 'b'/'back' to return.`)\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Input out of range.`);\n            }\n        }\n        \n        else if (input == 'b' || input == 'back') {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('<br>Returning...');\n            shouldReturn = true;\n        }\n\n        else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"]('<br>Invalid input.');\n        }\n\n        if (shouldReturn) {\n            settingsHandler.mainLoop();\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.scrollLimitResponse);\n        }\n\n    },\n\n    saveLoop: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Entering the save menu. Data saved can be loaded if you refresh the page. Saving will overwrite previously saved data. Type 's'/'save' to save, and` +\n        ` 'r'/'reset' to reset your data.`);\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"]([\"save\", \"reset\", \"back\"]);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.saveLoopResponse);\n    },\n\n    saveLoopResponse: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](settingsHandler.saveLoopResponse);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n        switch (input) {\n\n            case \"s\":\n            case \"save\": {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Saved data. Returning...`)\n                savePlayer('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"]);\n                saveSettings('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"]);\n                saveFlags('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"flags\"]);\n                saveDisciplines('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"disciplines\"]);\n                settingsHandler.mainLoop();\n                break;\n            }\n\n            case \"r\":\n            case \"reset\": {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Data reset. Refresh the page to restart.`);\n                localStorage.clear();\n\n\n                settingsHandler.mainLoop();\n                break;\n            }\n\n            case \"b\":\n            case \"back\": {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Returning...`);\n                settingsHandler.mainLoop();\n                break;\n            }\n\n            default: {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Invalid input.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.saveLoopResponse);\n            }\n\n            case true: {\n                Object(_baseModel__WEBPACK_IMPORTED_MODULE_2__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player);\n            }\n\n\n        }\n    },\n\n    testMessageLoop: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Four messages of different length will play in order to show you approximately\n        the speed of the text in the settings you have selected. Please choose whether you would like to test your battle\n        display speed or your display speed outside of battle.`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Please type 'ba'/'battle' to see text speed in battle and 'ou'/'outside' to see text` +\n        ` speed outside of battle.`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Your battle message delay is currently ${_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].battleMessageDelay} seconds.`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Your general message delay is currently ${_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].messageDelay} seconds.`);\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"]([\"battle\", \"outside\", \"back\"]);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.testMessage);\n    },\n\n    testMessage: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](settingsHandler.testMessage);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n        var wantToSee = false;\n        var typeToSee = \"outside\";\n\n        switch (input) {\n            \n            case \"ba\":\n            case \"battle\": {\n                wantToSee = true;\n                typeToSee = \"battle\";\n                break;\n            }\n\n            case \"ou\":\n            case \"outside\": {\n                wantToSee = true;\n                typeToSee = \"outside\"; // technically don't have to do this but doing so for readability\n                break;\n            }\n\n            case \"b\":\n            case \"back\": {\n                wantToSee = false;\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Returning...`);\n                settingsHandler.mainLoop();\n                break;\n            }\n\n            default: {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Invalid input.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.testMessage);\n            }\n\n        }\n\n        if (wantToSee) {\n            const array = [[\"This is a short message. Hi!\", 0],\n                            [\"This message is a little bit longer... Hello there. Lovely weather today.\", 0],\n                            [\"This message is pretty long. Longer than the previous, and the one before it. Lorem ipsum dolor sit amet, consectetur\", 0],\n                            [\"This is the longest message in this test. I hope you enjoy reading this one. Um. Have you seen Vinland Saga? It's a pretty good anime. I'd watch it if I were you. Or don't, I don't really care.\", 0]]\n\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](array, typeToSee, settingsHandler.postTestMessage);\n        \n        }\n    },\n\n    postTestMessage: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Message testing has concluded. Returning...`);\n        settingsHandler.mainLoop();\n    },\n\n    changeShortcutLoop: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Currently changing the input shortcut toggle key. Because most of the keyboard is` + \n        ` required for gameplay, there are a limited number of keys that can be used. Input a key (on your keyboard) to change` + \n        ` input shortcut to that key:`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Your current key is ${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"keysToCode\"][_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].toggleShortcut]}`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"\"); // line break\n\n        setTimeout(() => {\n            Object.keys(_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"keysToCode\"]).forEach(key => {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](` - ${key}`)\n            });\n            //mainView.setInputResponse(setInputShortcutResponse);\n            window.addEventListener('keyup', settingsHandler.changeShortcutResponse)\n        }, 250);\n    },\n\n    changeShortcutResponse: () => {\n        window.removeEventListener('keyup', settingsHandler.changeShortcutResponse)\n\n        const foo = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"](); // just so that the other code w/ getInput runs\n    \n        const correctInputs = [\"ShiftRight\", \"ShiftLeft\", \"ControlLeft\", \"ControlRight\", \"Backquote\", \"AltLeft\", \"AltRight\"];\n        const corresponding = [\"Rshift\", \"Lshift\", \"Rctrl\", \"Lctrl\", \"¬\", \"Altleft\", \"Altright\"];\n    \n        if (correctInputs.includes(event.code)) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Input shortcut toggle changed to <b>${event.code}</b>.`);\n            _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].toggleShortcut = corresponding[correctInputs.indexOf(event.code)];\n    \n            settingsHandler.mainLoop();\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input\");\n    \n            window.addEventListener('keyup', settingsHandler.changeShortcutResponse)\n        }\n    },\n\n    messageDelayLoop: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}There are two types of message delay you can change. Would you like to change` + \n        ` the message delay in battle or outside of battle?`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Type 'ba'/'battle' to change the message delay in battle and 'ou'/'outside'` + \n        ` to change the message delay outside of battle.`);\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Your battle message delay is currently ${_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].battleMessageDelay} seconds.`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Your general message delay is currently ${_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].messageDelay} seconds.`);\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"]([\"battle\", \"outside\", \"back\"])\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.messageDelayResponse);\n    },\n\n    messageDelayResponse: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](settingsHandler.messageDelayResponse);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n        switch (input) {\n            \n            case \"ba\":\n            case \"battle\": {\n                settingsHandler.battleMessageDelayLoop();\n                break;\n            }\n\n            case \"ou\":\n            case \"outside\": {\n                settingsHandler.outsideMessageDelayLoop();\n                break;\n            }\n\n            case \"b\":\n            case \"back\": {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Returning...`);\n                settingsHandler.mainLoop();\n                break;\n            }\n\n            default: {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Invalid input.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"]([\"battle\", \"outside\", \"back\"])\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.messageDelayResponse);\n            }\n            \n        }\n    },\n\n    battleMessageDelayLoop: () => {\n\n        const preset = _views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"presetMessageDelays\"].battle;\n    \n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Currently changing battle message delay loop. You can type any number from 0-3, including` +\n        ` 0 (to make it instant) to change the battle message delay to that value. However, we would recomment you use one of` +\n        ` the premade settings: 's'/'slow' (${preset.slow}s), 'm'/'medium' (${preset.medium}s) or 'f'/'fast' (${preset.fast}s).`);\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.battleMessageDelayResponse);\n    },\n\n    battleMessageDelayResponse: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](settingsHandler.battleMessageDelayResponse);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        \n        const presets = _views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"presetMessageDelays\"].battle;\n\n        switch (true) {\n\n            case (input == 's' || input == 'slow'): {\n                const number = presets.slow;\n                _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].battleMessageDelay = number;\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Changed battle message delay to ${number} seconds.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`You are still in the menu for changing battle message delay. Input 'b'/'back' to return.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.battleMessageDelayResponse);\n                break;\n            }\n\n            case (input == 'm' || input == 'medium'): {\n                const number = presets.medium;\n                _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].battleMessageDelay = number;\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Changed battle message delay to ${number} seconds.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`You are still in the menu for changing battle message delay. Input 'b'/'back' to return.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.battleMessageDelayResponse);\n                break;\n            }\n\n            case (input == 'f' || input == 'fast'): {\n                const number = presets.fast;\n                _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].battleMessageDelay = number;\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Changed battle message delay to ${number} seconds.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`You are still in the menu for changing battle message delay. Input 'b'/'back' to return.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.battleMessageDelayResponse);\n                break;\n            }\n\n            case (parseFloat(input).toString() != 'NaN'): {\n                const number = parseFloat(input);\n                if (number <= 3 && number >= 0) {\n                    _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].battleMessageDelay = number.toFixed(2);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Changed battle message delay to ${number.toFixed(2)} seconds.`);\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>That number is out of range!`);\n                };\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`You are still in the menu for changing battle message delay. Input 'b'/'back' to return.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.battleMessageDelayResponse);\n                break;\n            }\n\n            case (input == 'b' || input == 'back'): {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Returning...`);\n                settingsHandler.messageDelayLoop();\n                break;\n            }\n\n            default: {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Invalid input.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.battleMessageDelayResponse);\n                break;\n            }\n        }\n    },\n\n    outsideMessageDelayLoop: () => {\n\n        const preset = _views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"presetMessageDelays\"].outside;\n    \n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Currently changing outside message delay. You can type any number from 0-3, including` +\n        ` 0 (to make it instant) to change the battle message delay to that value. However, we would recomment you use one of` +\n        ` the premade settings: 's'/'slow' (${preset.slow}s}), 'm'/'medium' (${preset.medium}s) or 'f'/'fast' (${preset.fast}s).`);\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.outsideMessageDelayResponse);\n    },\n\n    outsideMessageDelayResponse: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](settingsHandler.outsideMessageDelayResponse);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        \n        const presets = _views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"presetMessageDelays\"].outside;\n\n        switch (true) {\n\n            case (input == 's' || input == 'slow'): {\n                const number = presets.slow;\n                _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].messageDelay = number;\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Changed message delay to ${number} seconds.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`You are still in the menu for changing general message delay. Input 'b'/'back' to return.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.outsideMessageDelayResponse);\n                break;\n            }\n\n            case (input == 'm' || input == 'medium'): {\n                const number = presets.medium;\n                _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].messageDelay = number;\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Changed message delay to ${number} seconds.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`You are still in the menu for changing general message delay. Input 'b'/'back' to return.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.outsideMessageDelayResponse);\n                break;\n            }\n\n            case (input == 'f' || input == 'fast'): {\n                const number = presets.fast;\n                _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].messageDelay = number;\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Changed message delay to ${number} seconds.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`You are still in the menu for changing general message delay. Input 'b'/'back' to return.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.outsideMessageDelayResponse);\n                break;\n            }\n\n            case (parseFloat(input).toString() != 'NaN'): {\n                const number = parseFloat(input);\n                if (number <= 3 && number >= 0) {\n                    _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].messageDelay = number.toFixed(2);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Changed message delay to ${number.toFixed(2)} seconds.`);\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>That number is out of range!`);\n                };\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`You are still in the menu for changing general message delay. Input 'b'/'back' to return.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.outsideMessageDelayResponse);\n                break;\n            }\n\n            case (input == 'b' || input == 'back'): {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_1__[\"separator\"]}Returning...`);\n                settingsHandler.messageDelayLoop();\n                break;\n            }\n\n            default: {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>Invalid input.`);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](settingsHandler.outsideMessageDelayResponse);\n                break;\n            }\n        }\n    }\n}\n\n// -- SAVE DATA -- \\\\\n\n// saves the data object in data\nconst savePlayer = (key, player) => {\n    localStorage.setItem(key + 'Player', JSON.stringify(player));\n}\n\n// save the settings object in data\nconst saveSettings = (key, settings) => {\n    localStorage.setItem(key + 'Settings', JSON.stringify(settings));\n}\n\n// save the disciplines object in data\nconst saveDisciplines = (key, disciplines) => {\n    localStorage.setItem(key + 'Disciplines', JSON.stringify(disciplines));\n}\n\n// save the flags object in data\nconst saveFlags = (key, flags) => {\n    localStorage.setItem(key + 'Flags', JSON.stringify(flags))\n}\n\n\n\n// -- LOAD DATA -- \\\\\n\n// load the data object in data\nconst loadPlayer = (key, type = \"localStorage\") => {\n    const currentModel = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"]; // getting the current model of player data to compare to saved model\n    var savedModel\n    if (type == \"localStorage\") {\n        savedModel = JSON.parse(localStorage.getItem(key + 'Player')); // getting the saved model\n    }\n    else {\n        savedModel = key;\n    }\n\n    //console.log(\"logging savedmodel followed by currentmodel\");\n    //console.log(savedModel);\n    //console.log(currentModel);\n\n    // we need to iterate over every property in currentModel and see if there is a savedModel equivalent\n    // if there is, we need to change the value in currentModel\n    // for this i will use a recursive function (see below)\n    //console.log(savedModel)\n    //console.log(savedModel);\n    overwritePropertiesPlayer(currentModel, savedModel);\n    //updateDisplay(data.player); // INVENTORY DOES NOT LOAD\n}\n\n\n// load the settings object in data\nconst loadSettings = (key, type = \"localStorage\") => {\n    const currentModel = _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"];\n    var savedModel\n    if (type == \"localStorage\") {\n        savedModel = JSON.parse(localStorage.getItem(key + 'Settings'));\n    }\n    else {\n        savedModel = key;\n    }\n\n\n    overwriteProperties(currentModel, savedModel);\n    //updateDisplay(data.player);\n};\n\n// load the disciplines object in data\nconst loadDisciplines = (key, type = \"localStorage\") => {\n    const currentModel = _data__WEBPACK_IMPORTED_MODULE_3__[\"disciplines\"];\n    var savedModel\n    if (type == \"localStorage\") {\n        savedModel = JSON.parse(localStorage.getItem(key + 'Disciplines'));\n    }\n    else {\n        savedModel = key;\n    }\n\n    overwriteDisciplines(currentModel, savedModel);\n    //updateDisplay(data.player);\n};\n\n// load the flags object in data\nconst loadFlags = (key, type = \"localStorage\") => {\n    const currentModel = _data__WEBPACK_IMPORTED_MODULE_3__[\"flags\"];\n    var savedModel;\n    if (type == \"localStorage\") {\n        savedModel = JSON.parse(localStorage.getItem(key + 'Flags'));\n    }\n    else {\n        savedModel = key;\n    }\n    \n    overwriteProperties(currentModel, savedModel);\n    //updateDisplay(data.player);\n}\n\n\n\n// -- NEEDED SUBROUTINE -- \\\\\nconst overwritePropertiesPlayer = (currentModel, savedModel, stuffToIgnore = []) => {\n    Object.keys(currentModel).forEach(key => {\n        if (savedModel[key] != undefined || [\"weapon\", \"head\", \"body\", \"legs\", \"misc1\", \"misc2\"].includes(key) == true) { // we want to overwrite equips too but they will be...\n            // ...undefined in the saved model\n            //console.log(`comparing following current and saved`);\n            //console.log(currentModel[key]);\n            //console.log(savedModel[key]);\n            // if both things have key and its a nonobject, switch\n            if (!Object(_baseModel__WEBPACK_IMPORTED_MODULE_2__[\"isObject\"])(currentModel[key]) || Array.isArray(currentModel[key])) {\n                //console.log('overwriting property')\n                \n                //console.log(`${key}`)\n                //console.log(`${stuffToIgnore.includes(key)}`)\n                if (stuffToIgnore.includes(key) == false) {\n                    currentModel[key] = savedModel[key];\n                    //console.log(key);\n                };\n            } else {\n                // if both things have key and its an object, run overwriteProperties on that uhh. yeah\n                //console.log('rerunning recursive');\n                var futureStuff;\n                if (key == \"stats\") {\n                    futureStuff = [\"atk\", \"def\", \"health\", \"max_sp\", \"max_mana\", \"max_stamina\",\n                     \"mdef\", \"matk\", \"speed\", \"crit_chance\", \"crit_damage\", \"effectiveness\",\n                    \"resistance\", \"evasion\",];\n                }\n                if (key != \"dataCache\") {\n                    overwritePropertiesPlayer(currentModel[key], savedModel[key], futureStuff);\n                } else {\n                    currentModel[key] = savedModel[key]; // upload the cache object to the current model but don't modify its properties\n                }\n\n                \n            }\n\n        }\n\n        \n    })\n}\n\nconst overwriteProperties = (currentModel, savedModel, stuffToIgnore = []) => {\n    Object.keys(currentModel).forEach(key => {\n        \n        if (savedModel[key] != undefined) {\n            //console.log(`comparing following current and saved`);\n            //console.log(currentModel[key]);\n            //console.log(savedModel[key]);\n            // if both things have key and its a nonobject, switch\n            if (!Object(_baseModel__WEBPACK_IMPORTED_MODULE_2__[\"isObject\"])(currentModel[key]) || Array.isArray(currentModel[key])) {\n                //console.log('overwriting property')\n                \n                //console.log(`${key}`)\n                //console.log(`${stuffToIgnore.includes(key)}`)\n                if (stuffToIgnore.includes(key) == false) {\n                    currentModel[key] = savedModel[key];\n                    //console.log(key);\n                };\n            } else {\n                // if both things have key and its an object, run overwriteProperties on that uhh. yeah\n                //console.log('rerunning recursive');\n                overwriteProperties(currentModel[key], savedModel[key])\n                \n            }\n\n        }\n\n        \n    })\n}\n\n// we only want to overwrite certain values for disciplines so im using a different subroutine\nconst overwriteDisciplines = (currentModel, savedModel) => {\n    //console.log(\"running overwriteDisciplines\")\n    Object.keys(currentModel).forEach(key => {\n        //console.log(`key is ${key}`)\n        \n        if (savedModel[key] != undefined) {\n            //console.log(\"key is not undefined\")\n            //console.log(`comparing following current and saved`);\n            //console.log(currentModel[key]);\n            //console.log(savedModel[key]);\n            // if the property is unlocked, visible or complete change \n            if (key == \"unlocked\" || key == \"visible\" || key == \"complete\") {\n                //console.log(`overwriting property ${key} -- ${savedModel[key]}`)\n                currentModel[key] = savedModel[key];\n            } else if (Object(_baseModel__WEBPACK_IMPORTED_MODULE_2__[\"isObject\"])(currentModel[key])) {\n                // otherwise if its another object run over it\n                //console.log('rerunning recursive');\n                overwriteDisciplines(currentModel[key], savedModel[key])\n                \n            }\n\n        }\n\n        \n    });\n    //console.log(currentModel);\n}\n\n// autosave game every 30 seconds\n\nconst saveLoop = () => {\n    setInterval(() => {\n        if (_data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"].autoSave) {\n\n            savePlayer('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"]);\n            saveSettings('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"]);\n            saveFlags('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"flags\"]);\n            saveDisciplines('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"disciplines\"]);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<span style=\"color: gold\">Data saved</span>`, false);\n\n        }\n    \n    }, 30000);\n}\n\nconst saveGame = () => {\n    savePlayer('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"]);\n    saveSettings('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"settings\"]);\n    saveFlags('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"flags\"]);\n    saveDisciplines('save1', _data__WEBPACK_IMPORTED_MODULE_3__[\"disciplines\"]);\n    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<span style=\"color: gold\">Data saved</span>`, false);\n}\n\nsaveLoop();\n\n//# sourceURL=webpack:///./src/js/models/settings.js?");

/***/ }),

/***/ "./src/js/models/shops.js":
/*!********************************!*\
  !*** ./src/js/models/shops.js ***!
  \********************************/
/*! exports provided: initShop, floorToShop, getShopDetails, resetShop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initShop\", function() { return initShop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"floorToShop\", function() { return floorToShop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getShopDetails\", function() { return getShopDetails; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resetShop\", function() { return resetShop; });\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _views_statView__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../views/statView */ \"./src/js/views/statView.js\");\n/* harmony import */ var _skills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./skills */ \"./src/js/models/skills.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var _views_baseView__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../views/baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _baseModel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./baseModel */ \"./src/js/models/baseModel.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! path */ \"./node_modules/path-browserify/index.js\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../index */ \"./src/js/index.js\");\n/* harmony import */ var _enemies__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./enemies */ \"./src/js/models/enemies.js\");\n/* harmony import */ var _items__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./items */ \"./src/js/models/items.js\");\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! querystring */ \"./node_modules/querystring-es3/index.js\");\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(querystring__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _directories_shops_floor1__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../directories/shops/floor1 */ \"./src/directories/shops/floor1.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// -- SHOP IMPORTS -- \\\\\n\n\nconst initShop = (shop, returnFunction) => {\n    shopHandler.currentShop = shops[shop];\n    shopHandler.returnFunction = returnFunction;\n\n    \n    shopHandler.shopLoop();\n}\n\nconst floorToShop = {\n    1: \"f1_shop\"\n};\n\nconst getShopDetails = () => {\n    return {\n        currentItem: shopHandler.currentItem,\n        currentShop: shopHandler.currentShop,\n        returnFunction: shopHandler.returnFunction,\n        mode: shopHandler.mode,\n        price: shopHandler.price,\n        menuOptions: shopHandler.menuOptions\n    }\n}\n\nconst resetShop = () => {\n    shopHandler.reset();\n}\n\nconst shops = Object.assign(_directories_shops_floor1__WEBPACK_IMPORTED_MODULE_11__[\"floor1\"], )\n\nconst shopHandler = {\n    currentItem: undefined, // WHEN SELLING, THIS IS IN SAME FORMAT AS PL. INVENTORY. WHEN BUYING, IS IN FORMAT SEEN IN SHOP (ex. [\"slime_sword\", 1000])\n    currentShop: undefined,\n    returnFunction: undefined,\n    mode: undefined,\n    price: undefined,\n    menuOptions: undefined, // this is needed for sell mode\n\n    reset() {\n        this.currentItem = undefined;\n        this.currentShop = undefined;\n        this.returnFunction = undefined;\n        this.mode = undefined;\n        this.price = undefined;\n        this.menuOptions = undefined;\n    },\n\n    shopLoop: (showItems = true) => {\n        const currentShop = shopHandler.currentShop;\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Currently shopping at ${currentShop.name}`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Wares available:\");\n        currentShop.items.forEach(ware => {\n            const itemIndex = currentShop.items.findIndex(cur => {\n                return cur[0] == ware[0]\n            })\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${itemIndex + 1} - ${_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][ware[0]].name} - ${ware[1]}G`)\n        });\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Type the name/number of an item to buy it, or type 's'/'sell' to enter sell mode.\");\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Input <b>'b'/'back'</b> to return.\")\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](shopHandler.shopResponse);\n    },\n\n    shopResponse: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](shopHandler.shopResponse);\n\n        const currentShop = shopHandler.currentShop;\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n        // we must at first check if their input was a valid number or a valid item name\n        var itemIndex = (currentShop.items[input - 1] != undefined ? parseInt(input) - 1 : -1); // is it a valid item number?\n        //console.log(`currently, item index is ${itemIndex}`);\n\n        if (itemIndex == -1) { // to prevent us from restting it from the previous check\n            itemIndex = currentShop.items.findIndex(item => {\n                return input == _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][item[0]].name.toLowerCase() // we need to get the display name of the item from the directory\n            }) // is it the name of an item in the shop?\n        }\n\n        //console.log(`item index is now ${itemIndex}`);\n\n        // if they selected an item, we need to begin letting them buy it\n        if (itemIndex != -1) {\n            const item = currentShop.items[itemIndex];\n            //console.log(`item is ${item}`); // for testing purpose\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}${_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][item[0]].name} selected.`);\n            Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"displayDetails\"])(_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][item[0]]);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Type 'b' or 'buy to buy it. Otherwise, type anything else to return.\");\n            shopHandler.currentItem = item;\n            //console.log(`shophandler.currentitem = ${shopHandler.currentItem}`);\n            shopHandler.mode = \"buy\";\n\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"initInputShortcuts\"](['buy']);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](shopHandler.itemMenu)\n        } else if (input == 'sell' || input == 's') {\n            shopHandler.mode = \"sell\";\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Entering sell mode..`);\n            shopHandler.sellLoop()\n        } else if (input == 'back' || input == 'b') {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Returning...`);\n            shopHandler.returnFunction();\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input.\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](shopHandler.shopResponse);\n        }\n\n    },\n\n    sellLoop: (displayinv = true) => {\n        const player = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player;\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Currently in sell mode. Type the name/number of an item in the inventory to see\n        its details and sell it. Type 'b'/'back' to exit sell mode.`);\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Inventory:\");\n        \n        // before iterating over the player's inventory, we will delete all duplicates\n        var invIterable = [];\n        player.inventory.forEach(cur => { // map does not work here\n            if (Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"isReagent\"])(cur)) { invIterable.push(cur) } else {\n                //console.log(`cur is ${cur}, inviterable is ${invIterable}`)\n                if (invIterable.includes(cur)) { } else { invIterable.push(cur) }\n            }\n        })\n        \n        //console.log(invIterable);\n\n        if (displayinv) {\n            invIterable.forEach((cur,index) => {\n                var item;\n                var itemName;\n                if (Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"isReagent\"])(cur)) {\n                    item = _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][cur[0]] // don't have to copy since we aren't changing any values\n                    itemName = cur[0];\n                    //console.log(`ITEMNAME IS ${cur[0]}`)\n                } else if (cur == \"nothing\") {\n                    //pass\n                } else {\n                    item = _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][cur] // see above\n                    itemName = cur;\n                }\n                //console.log(\"PRINTING PLAYER INVENORY\");\n                //console.log(player.inventory);\n                //console.log(player);\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${index + 1} - ${item.name} (x${Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"findAmount\"])(itemName, player.inventory)}) - ${item.sell_value}${item.sell_value == \"unsellable\" ? '' : 'G'}`);\n            })\n        }\n\n        shopHandler.menuOptions = invIterable;\n\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](shopHandler.sellResponse);\n    },\n\n    sellResponse: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](shopHandler.sellResponse);\n\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        const menuOptions = shopHandler.menuOptions;\n\n        var index = -1; // init. variable \n        if (parseInt(input).toString() != \"NaN\") { // if they inputted an integer\n            if (menuOptions.length >= parseInt(input)) { // if they inputted a number in range\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>${_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"getName\"])(menuOptions[parseInt(input - 1)])].name} selected.`);\n                index = input - 1;\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Number out of range.\");\n            }\n        } else {\n            menuOptions.forEach((cur, ind) => { // otherwise check if they inputted the name of an item\n                //console.log(`cur and ind are ${cur} and ${ind}`);\n                if (Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"isReagent\"])(cur)) {\n                    //console.log(items[cur[0]])\n                    if (_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][cur[0]].name.toLowerCase() == input) { index = ind };\n                } else {\n                    //console.log(items[cur]);\n                    if (_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][cur].name.toLowerCase() == input) { index = ind }\n                }\n            });\n            if (index != -1) { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`<br>${_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][menuOptions[parseInt(index)].name]} selected.`); };\n        }\n\n        // if they properly searched for an item, we want to tell them the details of the item and allow them to sell it\n        if (index != -1) {\n            Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"displayDetails\"])(_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"getName\"])(menuOptions[index])]);\n            shopHandler.currentItem = menuOptions[index];\n            if (_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"getName\"])(menuOptions[index])].sell_value != \"unsellable\") {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}If you would like to sell this item, type 's'/'sell'. Otherwise, type anything else to return.`)\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](shopHandler.itemMenu);\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`This item cannot be sold.`);\n                shopHandler.sellLoop();\n            };\n\n        } else if (input == 'b' || input == 'back') {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Returning...`);\n            shopHandler.shopLoop();\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input.\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](shopHandler.sellResponse);\n        }\n    },\n\n    itemMenu: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](shopHandler.itemMenu);\n\n        const currentShop = shopHandler.currentShop;\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n        var choice = \"none\";\n\n        if (input == 'b' || input == 'buy') { // catch both inputs\n            choice = 'buy'\n        } else if (input == 's' || input == 'sell') {\n            choice = 'sell'\n        };\n\n        if (choice == shopHandler.mode) { // if they're buying an item and choice 'buy', visa versa\n            \n            if (choice == 'buy') {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}How many would you like to buy? (Please type a numerical integer value` + \n                `, or type '0' to return)`) // pls 1/2/23 etc\n            } else {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}<br>How many would you like to sell? (Please type a numerical integer value` +\n                `, or type '0' to return. If you want to sell the maximum amount of this item input 'a'/'all'.`);\n            }\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](shopHandler.itemConfirmation); // we will use the same function here as well\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Returning...`);\n            if (shopHandler.mode == \"buy\") {\n                shopHandler.shopLoop();\n            } else {\n                shopHandler.sellLoop();\n            }\n        }\n    },\n\n    itemConfirmation: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](shopHandler.itemConfirmation);\n\n        const player = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player;\n\n        const currentShop = shopHandler.currentShop;\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n\n        var validated = false;\n\n        //console.log(`current item is ${currentShop.currentItem}`);\n\n        //console.log(`parse int is ${parseInt(input)}, type is ${typeof(parseInt(input))}`)\n\n        if (parseInt(input).toString() != \"NaN\" || input == \"a\" || input == \"all\") { // if they input an actual number/ 'a'/'all'\n            if (parseInt(input) > 0 && shopHandler.mode == 'buy') {\n                const amount = parseInt(input);\n                //console.log(`currentshop.currentitem (2) is ${currentShop.currentItem}`)\n                const price = amount * shopHandler.currentItem[1];\n    \n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}buying ${amount} ${_items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][shopHandler.currentItem[0]].name}${amount > 1 ? 's' : ''} will cost` +\n                ` ${price}G. Are you sure? Type 'y' or 'yes' to confirm, or anything else to return.`);\n    \n                shopHandler.price = price;\n    \n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](shopHandler.itemTransaction);\n\n                validated = true;\n            } else if (parseInt(input) > 0 || input == 'a' || input == 'all' && shopHandler.mode == 'sell') {\n                var amount = parseInt(input);\n                // selling all\n                if (input == 'a' || input == 'all') {\n                   //console.log(shopHandler.currentItem);\n                    if (Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"isReagent\"])(shopHandler.currentItem)) {\n                        amount = Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"getQuantity\"])(shopHandler.currentItem[0], player.inventory); \n                    } else {\n                        amount = Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"getQuantity\"])(shopHandler.currentItem, player.inventory); \n                    }\n                };\n                var itemName;\n                var price;\n                //console.log(`CURRENTITEM IS ${shopHandler.currentItem}`);\n                if (Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"isReagent\"])(shopHandler.currentItem)) {\n                    //console.log(itemName = items[shopHandler.currentItem[0]]);\n                    price = amount * _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][shopHandler.currentItem[0]].sell_value;\n                    itemName = _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][shopHandler.currentItem[0]].name;\n                } else {\n                    //console.log(itemName = items[shopHandler.currentItem]);\n                    price = amount * _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][shopHandler.currentItem].sell_value;\n                    itemName = _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][shopHandler.currentItem].name;\n                }\n             \n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}${amount} ${itemName}${amount > 1 ? 's' : ''} will sell for\n                ${price}G. Are you sure? Type 'y' or 'yes' to confirm, or anything else to return.`);\n\n                shopHandler.price = price;\n\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](shopHandler.itemTransaction);\n                \n                validated = true;\n            } else if (parseInt(input) == 0) {\n                _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Returning..`);\n                validated = true;\n                if (shopHandler.mode == \"buy\") {\n                    shopHandler.shopLoop();\n                } else {\n                    shopHandler.sellLoop();\n                }\n            }\n\n        } \n        if (validated == false) {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Invalid input\");\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](shopHandler.itemConfirmation);\n        }\n\n    },\n\n    itemTransaction: () => {\n        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](shopHandler.itemTransaction);\n\n        const currentShop = shopHandler.currentShop;\n        const input = _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"getInput\"]().toLowerCase();\n        const player = _data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player;\n        const price = shopHandler.price;\n\n        //console.log(`input is ${input}`)\n\n        if (input == 'y' || input == 'yes') { // if they chose yes...\n            if (shopHandler.mode == 'buy') { // if they are buying something..\n                if (player.gold >= price) { // if they can afford the item..\n                    player.gold -= price;\n                    const amount = price / shopHandler.currentItem[1]; // we can deduce how many they bought w/ this\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Purchasing...`);\n                    Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"addItem\"])(shopHandler.currentItem[0], amount, amount);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"Returning...\");\n                    shopHandler.shopLoop();\n\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br><b>Too expensive!</b>\");\n                    shopHandler.shopLoop();\n                }\n            } else {\n                //console.log(`currentitem is ${shopHandler.currentItem}`)\n                const item = shopHandler.currentItem;\n                const inventory = player.inventory;\n                if ((Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"isReagent\"])(item) ? Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"findAmount\"])(item[0], inventory) : Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"findAmount\"])(item, inventory)) >=\n                 price / _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"getName\"])(shopHandler.currentItem)].sell_value) {\n                    player.gold += price;\n                    //console.log(`got name ${getName(item)}`)\n                    const amount = price / _items__WEBPACK_IMPORTED_MODULE_9__[\"items\"][Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"getName\"])(shopHandler.currentItem)].sell_value // we can deduce how many they bought w/ this\n                    Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"removeItem\"])(Object(_items__WEBPACK_IMPORTED_MODULE_9__[\"getName\"])(shopHandler.currentItem), amount);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Selling..`);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Returning...\");\n                    shopHandler.sellLoop();\n                } else {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${_views_baseView__WEBPACK_IMPORTED_MODULE_4__[\"separator\"]}Not enough of the item in the inventory!`);\n                    shopHandler.sellLoop();\n                }\n            }\n        } else {\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br>Returning..\");\n            if (shopHandler.mode == \"buy\") {\n                shopHandler.shopLoop();\n            } else {\n                shopHandler.sellLoop();\n            }\n\n        }\n\n        Object(_baseModel__WEBPACK_IMPORTED_MODULE_5__[\"updateDisplay\"])(_data__WEBPACK_IMPORTED_MODULE_3__[\"data\"].player);\n    }\n\n\n}\n\n//# sourceURL=webpack:///./src/js/models/shops.js?");

/***/ }),

/***/ "./src/js/models/skills.js":
/*!*********************************!*\
  !*** ./src/js/models/skills.js ***!
  \*********************************/
/*! exports provided: skills, getSkill, getDamage, buffCount, stackCount, findTimesUsed, useRandom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"skills\", function() { return skills; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSkill\", function() { return getSkill; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDamage\", function() { return getDamage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buffCount\", function() { return buffCount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stackCount\", function() { return stackCount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findTimesUsed\", function() { return findTimesUsed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useRandom\", function() { return useRandom; });\n/* harmony import */ var _views_mainView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../views/mainView */ \"./src/js/views/mainView.js\");\n/* harmony import */ var _combat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./combat */ \"./src/js/models/combat.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data */ \"./src/js/models/data.js\");\n/* harmony import */ var _views_baseView__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../views/baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _baseModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./baseModel */ \"./src/js/models/baseModel.js\");\n/* harmony import */ var _items__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./items */ \"./src/js/models/items.js\");\n/* harmony import */ var _views_statView__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../views/statView */ \"./src/js/views/statView.js\");\n\n // only need endturn and getequips\n // need messageDelay\n\n\n\n\n\nconst skills = {\n    calcDamage(attacker, defendant, offence, defence, offenceElement, defenceElement, offenceMod, defenceMod, damageMod, additionalArgs = {\n        canEvade: true, canCrit: true\n    }) {\n        if (offenceElement == \"weapon\") {\n            offenceElement = skills.getWeaponElement(attacker);\n        }\n        if (defenceElement == \"weapon\") {\n            defenceElement = skills.getWeaponElement(attacker);\n        }\n        const attackerElMod = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcElementBuffs(attacker);\n        const defendantElMod = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcElementBuffs(defendant);\n\n        const offElement = attacker.elemental.offence[offenceElement] + attackerElMod.offence[offenceElement];\n        const defElement = defendant.elemental.defence[defenceElement] + defendantElMod.defence[defenceElement];\n        const offStat = attacker[offence] * (1 + _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(offence, attacker));\n        const defStat = defendant[defence] * (1 + _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(defence, defendant));\n        var crit = Math.random() < (attacker.crit_chance + attacker.crit_chance_mod) ? (attacker.crit_damage + attacker.crit_damage_mod) : 1;\n        var eva = Math.random() < (defendant.evasion + _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"evasion\", defendant)) ? 0 : 1;\n        var miti = (1 - Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"clamp\"])(_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"mitigation\", defendant), 0, 0.8));\n        \n        const canEvade = additionalArgs.canEvade == undefined ? true : additionalArgs.canEvade;\n        const canCrit = additionalArgs.canCrit == undefined ? true : additionalArgs.canCrit;\n\n        if (canEvade == false) {\n            eva = 1;\n        }\n\n        if (canCrit == false) {\n            crit = 1;\n        }\n\n        //console.log(offElement);\n        //console.log(defElement);\n        //console.log(offStat);\n        //console.log(defStat);\n        //console.log(crit);\n        //console.log(eva);\n        //console.log(offStat * offenceMod - defStat * defenceMod);\n\n        const numerator = (( (Math.pow(offStat, 2)) * offenceMod) + 250);\n        const denominator = (defStat * defenceMod + 100);\n\n        var damage = ((numerator / denominator) * (offElement / 100) * (defElement / 100) * crit * eva * miti * damageMod);\n        var damage = Math.round(damage * (Math.random() * 0.1 + 0.9)); // adding the random aspect\n\n        //var damage = Math.round( (offStat * offenceMod - defStat * defenceMod) * offElement * defElement / 10000 * crit * eva * miti * (Math.random() * 0.1 + 0.9));\n        \n        //console.log(damage);\n\n        return {\n            damage: Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"clamp\"])(damage, 0, 99999999),\n            crit: crit !== 1 ? true : false,\n            eva: eva == 0 ? true : false,\n            element: offenceElement,\n            offElement: offElement,\n            defElement: defElement,\n            mitigation: miti,\n            type: (offence == 'atk' ? 'physical' : 'magical')\n        }\n    }, // damage = ((atk * offenceMod) -  (def * defenceMod) * offenceElement * defenceElement * crit)\n\n    prepareAttackMessage(user, target, text, damage, mode = \"unshift\", lineBreak = false) {\n        const damageMsg = `${damage.crit ? '<b>' : ''}<span style=\"color:${_views_baseView__WEBPACK_IMPORTED_MODULE_3__[\"elementColours\"][damage.element]}\">`+\n        `${damage.damage} damage! (${(Math.round(damage.defElement * damage.offElement * damage.mitigation) / 100)}% ${damage.type}) [${damage.element}]</span>${damage.crit ? '</b>' : ''}`\n        //console.log(`damage msg is ${damageMsg}`);\n        const newMsg = `${lineBreak ? \"[]\" : \"\"}${text}${damage.crit ? '[]CRITICAL HIT!!' : ''}${damage.eva ? `[]${target} evaded the attack!` : ''}[]${damageMsg}`.split('[]'); // '[]' is used to split the message so that it can be used with the displaymessagesdelayed function\n        /*var finalMsg = newMsg.map(item => {\n            return [item, 1]\n        });*/\n        //console.log(newMsg);\n        skills.pushMessagesToState(newMsg, true, mode);\n    },\n\n    pushMessagesToState(msgArr, preAttack = true, mode = \"unshift\") {\n        const notation = preAttack ? \"preAtkMsg\" : \"msg\";\n        // unshift in reverse so that the messages are pushed to the front of the array and in the correct order\n        // messages will always have pauseBefore set to true\n        if (mode == \"unshift\") {\n            msgArr.slice().reverse().forEach(msg => {\n                skills.skillStack.stack.unshift( [notation, () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](msg) }, true]);\n            })\n        } else {\n            msgArr.slice().forEach(msg => {\n                skills.skillStack.stack.push( [notation, () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](msg) }, true]);\n            })   \n        }\n    },\n\n    pushBeforeCombatMessage(item) {\n        const skillStack = skills.skillStack.stack;\n        // function incomplete, was never used\n    },\n\n    pushEffect(item, finish = false) {\n        const skillStack = skills.skillStack.stack;\n        skillStack.push(item);\n        if (finish != false) {\n            skills.skillStack.finalAdded = true;\n            skillStack.push(finish);\n            skills.runSkillStack();\n        }\n        // general function so that I have to edit less stuff YAHOO\n    },\n\n    pushToState(skill, damage, user) {\n        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].state[_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].state.length - 1][user].push({\n            skill: skill,\n            damage: damage,\n            user: user\n        })\n    },\n\n    getSkill(name) {\n        //console.log(Object.keys(skills))\n        var skill = -1;\n        Object.keys(skills).forEach(cur => {\n            if (skills[cur].hasOwnProperty(\"name\")) { // since skill has properties that are not skills, like this method\n                //console.log(\"logging skill being checked\");\n                //console.log(skills[cur]);\n                if (skills[cur].name.toLowerCase() == name) {\n                    skill = skills[cur];\n                }\n            }\n        })\n        //console.log(\"logging skill\");\n        //console.log(skill);\n        return skill;\n        \n    },\n\n    finish(skillName, damage, type) { // because two branches need it\n        skills.pushToState(skillName, damage, type);\n        //Combat.endTurn(type);\n    },\n\n    getWeaponElement(user) {\n        var element = \"physical\";\n        if (user.hasOwnProperty(\"equips\")) {\n            if (user.equips.weapon != undefined) {\n                element = _items__WEBPACK_IMPORTED_MODULE_5__[\"items\"][user.equips.weapon].element\n            }\n        }\n        return element;\n    },\n\n    gainActions(type, number, target = \"self\", state = false, finish = false, plr, enemy, showMessage = true) {\n        //  - State denotes whether or not we will add to the state. If true, pass in an array of the arguments for finish...\n        // ...in the order [skillName, damage, type]\n        //  - Finish denotes whether or not upon the completion of this skill we will end the turn. For all skills/items this...\n        // ...should be set to true\n        const trueTarget = skills.getTarget(type, target);\n        var targetObject = trueTarget == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        var addActionsFunc = () => { targetObject.actions += number };\n        var actionsMsgFunc = () => {};\n        if (showMessage) {\n            if (number > 0) {\n                actionsMsgFunc = () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${targetObject.name} gained ${number} actions!`) };\n            } else {\n                actionsMsgFunc = () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${targetObject.name} lost ${Math.abs(number)} actions!`) };\n            };\n        }\n        var finalFunc = false;\n        if (state != false || finish == true) {\n            var finalFunc = () => {\n                if (state != false) {\n                    skills.finish(state[0], state[1], state[2]);\n                }\n                if (finish == true) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].endTurn(type);\n                }\n            };\n        }\n        const effect = [\"effect\", () => {\n            addActionsFunc();\n            actionsMsgFunc();\n        }, showMessage];\n        if (finalFunc != false) {\n            finalFunc = [\"finish\", finalFunc, true];\n        };\n        skills.pushEffect(effect, finalFunc);\n\n\n    },\n\n    gainHealth(type, number, target = \"self\", state = false, finish = false, plr, enemy, showMessage = true) {\n        //  - State denotes whether or not we will add to the state. If true, pass in an array of the arguments for finish...\n        // ...in the order [skillName, damage, type]\n        //  - Finish denotes whether or not upon the completion of this skill we will end the turn. For all skills/items this...\n        // ...should be set to true\n        const trueTarget = skills.getTarget(type, target);\n        var targetObject = trueTarget == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        var addHealthFunc = () => { targetObject.health += number; if (targetObject.health > targetObject.max_health) { targetObject.health = targetObject.max_health} };\n        var healthMsgFunc = () => { };\n        if (showMessage) {\n            if (number > 0) {\n                healthMsgFunc = () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${targetObject.name} gained ${number} HP!`) };\n            } else {\n                healthMsgFunc = () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${targetObject.name} lost ${Math.abs(number)} HP!`) };\n            };\n        }\n        var finalFunc = false;\n        if (state != false || finish == true) {\n            var finalFunc = () => {\n                if (state != false) {\n                    skills.finish(state[0], state[1], state[2]);\n                }\n                if (finish == true) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].endTurn(type);\n                }\n            };\n        }/*\n        skills.skillStack.stack.push(() => {\n            Combat.uploadChanges(plr, enemy);\n        });*/\n        const effect = [\"effect\", () => {\n            addHealthFunc();\n            healthMsgFunc();\n        }, showMessage];\n        if (finalFunc != false) {\n            finalFunc = [\"finish\", finalFunc, true];\n        };\n        skills.pushEffect(effect, finalFunc);\n\n\n    },\n\n    dealDamage(type, number, target = \"self\", state = false, finish = false, plr, enemy) {\n        //  - State denotes whether or not we will add to the state. If true, pass in an array of the arguments for finish...\n        // ...in the order [skillName, damage, type]\n        //  - Finish denotes whether or not upon the completion of this skill we will end the turn. For all skills/items this...\n        // ...should be set to true\n        //console.log(`DEAL DAMAGE CALLED. TYPE IS ${type}`);\n        const trueTarget = skills.getTarget(type, target);\n        var targetObject = trueTarget == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        var dealDamageFunc = () => { targetObject.health -= number; if (targetObject.health > targetObject.max_health) { targetObject.health = targetObject.max_health} };\n        var pauseBefore = false; // cannot show message so will not bother chagning this \n        var finalFunc = false;\n        if (state != false || finish == true) {\n            var finalFunc = () => {\n                //console.log(\"FINAL FUNC CALLED\");\n                //console.log(`state is ${state} and finish is ${finish}`)\n                if (state != false) {\n                    //console.log(\"STATE IS NOT FALSE\");\n                    skills.finish(state[0], state[1], state[2]);\n                }\n                if (finish == true) {\n                    //console.log(\"FINISH IS NOT FALSE\");\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].endTurn(type);\n                }\n            };\n        }/*\n        skills.skillStack.stack.push(() => {\n            Combat.uploadChanges(plr, enemy);\n        });*/\n        const effect = [\"effect\", () => {\n            dealDamageFunc();\n        }, pauseBefore];\n        if (finalFunc != false) {\n            finalFunc = [\"finish\", finalFunc, true];\n        };\n        skills.pushEffect(effect, finalFunc);\n\n\n    },\n\n    gainMana(type, number, target = \"self\", state = false, finish = false, plr, enemy, showMessage = true) {\n        //  - State denotes whether or not we will add to the state. If true, pass in an array of the arguments for finish...\n        // ...in the order [skillName, damage, type]\n        //  - Finish denotes whether or not upon the completion of this skill we will end the turn. For all skills/items this...\n        // ...should be set to true\n        const trueTarget = skills.getTarget(type, target);\n        var targetObject = trueTarget == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        var addManaFunc = () => { targetObject.mana += number; if (targetObject.mana > targetObject.max_mana) { targetObject.mana = targetObject.max_mana} };\n        var manaMsgFunc = () => {}\n        if (showMessage) {\n            if (number > 0) {\n                manaMsgFunc = () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${targetObject.name} gained ${number} MP!`) };\n            } else {\n                manaMsgFunc = () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${targetObject.name} lost ${Math.abs(number)} MP!`) };\n            };\n        }\n        var finalFunc = false;\n        if (state != false || finish == true) {\n            var finalFunc = () => {\n                if (state != false) {\n                    skills.finish(state[0], state[1], state[2]);\n                }\n                \n                if (finish == true) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].endTurn(type);\n                }\n            };\n        }/*\n        skills.skillStack.stack.unshift(() => {\n            Combat.uploadChanges(plr, enemy);\n        });*/\n        const effect = [\"effect\", () => {\n            addManaFunc();\n            manaMsgFunc();\n        }, showMessage];\n        if (finalFunc != false) {\n            finalFunc = [\"finish\", finalFunc, true];\n        };\n        skills.pushEffect(effect, finalFunc);\n\n\n    },\n\n    gainSP(type, number, target = \"self\", state = false, finish = false, plr, enemy, showMessage = true) {\n        //  - State denotes whether or not we will add to the state. If true, pass in an array of the arguments for finish...\n        // ...in the order [skillName, damage, type]\n        //  - Finish denotes whether or not upon the completion of this skill we will end the turn. For all skills/items this...\n        // ...should be set to true\n        const trueTarget = skills.getTarget(type, target);\n        var targetObject = trueTarget == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        var addSPFunc = () => { targetObject.sp += number; if (targetObject.sp > targetObject.max_sp) { targetObject.sp = targetObject.max_sp} };\n        var spMsgFunc = () => {};\n        if (showMessage) {\n            if (number > 0) {\n                spMsgFunc = () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${targetObject.name} gained ${number} SP!`) };\n            } else {\n                spMsgFunc = () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${targetObject.name} lost ${Math.abs(number)} SP!`) };\n            };\n        }\n        var finalFunc = false;\n        if (state != false || finish == true) {\n            var finalFunc = () => {\n                if (state != false) {\n                    skills.finish(state[0], state[1], state[2]);\n                };\n                if (finish == true) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].endTurn(type);\n                }\n            };\n        }/*\n        skills.skillStack.stack.unshift(() => {\n            Combat.uploadChanges(plr, enemy);\n        });*/\n        const effect = [\"effect\", () => {\n            addSPFunc();\n            spMsgFunc();\n        }, showMessage];\n        if (finalFunc != false) {\n            finalFunc = [\"finish\", finalFunc, true];\n        };\n        skills.pushEffect(effect, finalFunc);\n\n\n    },\n\n    gainStamina(type, number, target = \"self\", state = false, finish = false, plr, enemy, showMessage = true) {\n        //  - State denotes whether or not we will add to the state. If true, pass in an array of the arguments for finish...\n        // ...in the order [skillName, damage, type]\n        //  - Finish denotes whether or not upon the completion of this skill we will end the turn. For all skills/items this...\n        // ...should be set to true\n        const trueTarget = skills.getTarget(type, target);\n        var targetObject = trueTarget == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        var addStaminaFunc = () => { targetObject.stamina += number; if (targetObject.stamina > targetObject.max_stamina) { targetObject.stamina = targetObject.max_stamina} };\n        var staminaMsgFunc = () => {};\n        if (showMessage) {\n            if (number > 0) {\n                staminaMsgFunc = () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${targetObject.name} gained ${number} stamina!`) };\n            } else {\n                staminaMsgFunc = () => { _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${targetObject.name} lost ${Math.abs(number)} stamina!`) };\n            };\n        }\n        var finalFunc = false;\n        if (state != false || finish == true) {\n            var finalFunc = () => {\n                if (state != false) {\n                    skills.finish(state[0], state[1], state[2]);\n                };\n                if (finish == true) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].endTurn(type);\n                }\n            };\n        }/*\n        skills.skillStack.stack.unshift(() => {\n            Combat.uploadChanges(plr, enemy);\n        });*/\n        const effect = [\"effect\", () => {\n            addStaminaFunc();\n            staminaMsgFunc();\n        }, showMessage];\n        if (finalFunc != false) {\n            finalFunc = [\"finish\", finalFunc, true];\n        };\n        skills.pushEffect(effect, finalFunc);\n\n\n    },\n\n    pushCustomFunc(type, func, target = \"self\", state = false, finish = false, plr, enemy, pauseBefore = false) {\n        //  - State denotes whether or not we will add to the state. If true, pass in an array of the arguments for finish...\n        // ...in the order [skillName, damage, type]\n        //  - Finish denotes whether or not upon the completion of this skill we will end the turn. For all skills/items this...\n        // ...should be set to true\n\n        var customFunc = func;\n        var finalFunc = false;\n        if (state != false || finish == true) {\n            var finalFunc = () => {\n                if (state != false) {\n                    skills.finish(state[0], state[1], state[2]);\n                }\n                if (finish == true) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].endTurn(type);\n                }\n            };\n        }/*\n        skills.skillStack.stack.unshift(() => {\n            Combat.uploadChanges(plr, enemy);\n        });*/\n        const effect = [\"effect\", () => {\n            customFunc();\n            //Combat.uploadChanges(plr, enemy);\n        }, pauseBefore];\n        if (finalFunc != false) {\n            finalFunc = [\"finish\", finalFunc, true];\n        };\n        skills.pushEffect(effect, finalFunc);\n\n\n    },\n\n    pushWaitForInput(type, state, finish) {\n        var finalFunc = false;\n        if (state != false || finish == true) {\n            var finalFunc = () => {\n                if (state != false) {\n                    skills.finish(state[0], state[1], state[2]);\n                }\n                if (finish == true) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].endTurn(type);\n                }\n            };\n        }\n        const effect = \"waitForInput\";\n        if (finalFunc != false) {\n            finalFunc = [\"finish\", finalFunc, true];\n        };\n        skills.pushEffect(effect, finalFunc);\n    },\n\n    applyBuff(type, buffFunction, target = \"self\", state = false, finish = false, plr, enemy) {\n        //  - State denotes whether or not we will add to the state. If true, pass in an array of the arguments for finish...\n        // ...in the order [skillName, damage, type]\n        //  - Finish denotes whether or not upon the completion of this skill we will end the turn. For all skills/items this...\n        // ...should be set to true\n        const trueTarget = skills.getTarget(type, target);\n        var targetObject = trueTarget == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();      \n        var finalFunc = false;\n\n        if (state != false || finish == true) {\n            var finalFunc = () => {\n                if (state != false) {\n                    skills.finish(state[0], state[1], state[2]);\n                }\n                if (finish == true) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].endTurn(type);\n                }\n            };\n        }/*\n        skills.skillStack.stack.unshift(() => {\n            Combat.uploadChanges(plr, enemy);\n        });*/\n        const effect = [\"effect\", buffFunction, true];\n        if (finalFunc != false) {\n            finalFunc = [\"finish\", finalFunc, true];\n        };\n        skills.pushEffect(effect, finalFunc);\n\n\n    },\n\n    stripBuff(type, stripbuffFunction, target = \"self\", state = false, finish = false, plr, enemy) {\n        //  - State denotes whether or not we will add to the state. If true, pass in an array of the arguments for finish...\n        // ...in the order [skillName, damage, type]\n        //  - Finish denotes whether or not upon the completion of this skill we will end the turn. For all skills/items this...\n        // ...should be set to true\n        const trueTarget = skills.getTarget(type, target);\n        var targetObject = trueTarget == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n        var finalFunc = false;\n        if (state != false || finish == true) {\n            var finalFunc = () => {\n                if (state != false) {\n                    skills.finish(state[0], state[1], state[2]);\n                }\n                if (finish == true) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].endTurn(type);\n                }\n            };\n        }/*\n        skills.skillStack.stack.unshift(() => {\n            Combat.uploadChanges(plr, enemy);\n        });*/\n        const effect = [\"effect\", stripbuffFunction, true];\n        if (finalFunc != false) {\n            finalFunc = [\"finish\", finalFunc, true];\n        };\n        skills.pushEffect(effect, finalFunc);\n\n\n    },\n\n    getTarget(type, target = \"self\") {\n        var trueTarget = type;\n        if (target != \"self\") {\n            if (trueTarget == \"player\") {\n                trueTarget = \"enemy\"\n            } else {\n                trueTarget = \"player\"\n            }\n        }\n        return trueTarget;\n    },\n\n    skillStack: {\n        stack: [],\n        playing: false,\n        finalAdded: false,\n    },\n\n    runSkillStack() {\n        //console.log(\"LOGGING SKILL STACK\");\n        //console.log(skillStack);\n        //console.log(\"RUN STACK CALLED\");\n        const skillStack = skills.skillStack;\n        skillStack.playing = true;\n        const plr = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer();\n        const enemy = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy();\n\n        const loop = () => {\n           //console.log(\"loop called\");\n            if (skillStack.stack.length > 0 && skillStack.playing == true) {\n                // for testing purposes\n                const temp1 = {...skillStack.stack};\n                //console.log(temp1);\n                // ---------------\n                //console.log(\"RECURSIVE CALLED; LOGGING SKILL STACK\");\n                //console.log(copy(skillStack.stack));\n                //console.log(skillStack.stack[0]);\n                if (skillStack.stack[0] == \"waitForInput\") {\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](\"<br><i>Input anything to continue...</i>\");\n                    skillStack.playing = false;\n                    const inputContinue = () => {\n                        _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"removeInputResponse\"](inputContinue);\n                        skillStack.playing = true;\n                        loop();\n                    }\n                    skillStack.stack.splice(0, 1);\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"setInputResponse\"](inputContinue);\n                } else {\n                    const baseWait = _data__WEBPACK_IMPORTED_MODULE_2__[\"settings\"].battleMessageDelay;\n                    const temp = Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"copy\"])(skillStack.stack[0]);\n                    skillStack.stack.splice(0, 1);\n    \n                    if (skillStack.stack.length > 0) { // ensure that the code stops once the stack reaches 0 length...\n                        // ..by putting this before calling a function, which could add things..\n                        // ..to the stack\n                        var waitTime = 1000;\n                        if (skillStack.stack[0][2] == false) { waitTime = 0 }; // if pausebefore of the next function is 0\n                        setTimeout(loop, baseWait * waitTime);  \n                    } else {\n                        skillStack.playing = false;\n                        skillStack.finalAdded = false;\n                        //return true;\n                    }\n    \n                    temp[1](); // must be in this order or we will never reach the end of skill stack\n                    Object(_views_statView__WEBPACK_IMPORTED_MODULE_6__[\"updateStatsCombat\"])(_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayerAdd(_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()));\n                }\n            } else {\n                skillStack.playing = false;\n                if (skillStack.stack.length == 0) {\n                    skillStack.finalAdded = false;\n                }\n                return true;\n            }\n        };\n        loop();\n\n    },\n\n    pushBeforeFinish(item) {\n        const skillStack = skills.skillStack;\n        if (skillStack.finalAdded == true) {\n            skillStack.stack.splice(-2, 0, item);\n        } else {\n            skillStack.stack.push(item);\n        }\n    },\n\n    //** SKILLS */\n    attack: {\n        name: 'attack',\n        description: \"Strike the enemy, dealing moderate physical damage. Attack element is based on the element of the equipped weapon.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1,\n        use: (user, target, type) => {\n            const skill = skills.attack // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} struck the enemy! [Attack]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const stateDamage = {\n                damage: damage,\n                type: [\"attack\"],\n                target: \"opponent\"\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, stateDamage, type], true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    guard: {\n        name: 'guard',\n        description: \"Take a defensive stance, applying <u>Guard</u> [50% migiation, unstrippable] to the user, along with granting them 10 SP. This \" +\n        \" can only be used as the first action of a turn, and will consume up to two actions when used.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const buff = {\n                name: \"guard\",\n                mitigation: 0.5,\n                duration: 1,\n                element: \"physical\",\n                types: [\"buff\"],\n                apply_text: \" is guarding..\",\n                unstrippable: true,\n                max_stacks: 1\n            }\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            // if player is needed to apply buffs, instead of user/target use ** (type == 'player' ? Combat.getPlayer() : user) **\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n\n            const state = [\"guard\", {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\"],\n                    target: \"self\"\n                }\n            }, type];\n            skills.gainActions(type, -1, \"self\", false, false, plr, enemy, false);\n            skills.gainSP(type, 10, \"self\", false, false, plr, enemy);\n            skills.applyBuff(type, func, \"self\", state, true, plr, enemy);\n            /* ^ ternary used to get playerFighter if the player is having the buff applied, since otherwise we are applying the buff\n            to getPlayerAdd which is pointless */\n\n\n        },\n\n        cost: (user, target) => {\n            if (user.actionsTaken > 0) {\n                return \"Cannot be used this turn!\";\n            } else {\n                return true\n            }\n        }\n    },\n\n    // ------------------------------------------------ \\\\\n    // ------------------------------------------------ \\\\\n\n    // ** -- LORE DISCIPLINE (Tutorial) -- ** \\\\\n\n    forgotten_haste: {\n        name: 'forgotten haste',\n        description: `<b>Cost: 20 Mana</b> - The user calls upon powerful magic to recover a fraction of their lost` +\n        ` power. Applies <u>Forgotten Haste</u> [+50% SPD, +25% ATK, 6T duration] to the user.`,\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.forgotten_haste;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainMana(type, -20, \"self\", false, false, plr, enemy, false);\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\"],\n                    target: \"self\"\n                }\n            }, type];\n\n            const buff = {\n                name: \"forgotten haste\",\n                speed: 0.5,\n                atk: 0.25,\n                duration: 6,\n                element: \"light\",\n                types: [\"buff\"],\n                apply_text: \" has unlocked a portion of their lost power!\",\n                max_stacks: 1\n            }\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", state, true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 20) { return true } else { return \"Insufficient Mana!\"};\n        }\n    },\n\n    divine_protection: {\n        name: 'divine protection',\n        description: `<b>Cost: 20 Mana</b> - The user calls upon divine magic to protect them from curses. Applies` +\n        ` <u>Divine Protection</u> [+100 Resistance, 3T duration] to the user.`,\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.divine_protection;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainMana(type, -20, \"self\", false, false, plr, enemy, false);\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\"],\n                    target: \"self\"\n                }\n            }, type];\n\n            const buff = {\n                name: \"divine protection\",\n                resistance: 100,\n                duration: 3,\n                element: \"light\",\n                types: [\"buff\"],\n                apply_text: \" is being protected by divine magic!\",\n                max_stacks: 1\n            }\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", state, true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 20) { return true } else { return \"Insufficient Mana!\"};\n        }\n    },\n\n    guard_crush: {\n        name: 'guard crush',\n        description: \"<b>Cost: 25 Stamina</b> - The user strikes the enemy targeting their defenses rather than their life.\" +\n        \" Deals fair physical damage and applies <u>Guard Crushed</u> [-25% DEF/MDEF/ATK, 6T duration, stacks to 3] to the enemy.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 0.9,\n        def_mod: 1,\n        dmg_mod: 0.95,\n        use: (user, target, type) => {\n            const skill = skills.guard_crush // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} crushes the enemy's defenses! [Guard Crush]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -25, \"self\", false, false, plr, enemy, false);\n\n            const debuff = {\n                name: \"guard crushed\",\n                duration: 6,\n                def: -0.25,\n                mdef: -0.25,\n                atk: -0.25,\n                element: \"physical\",\n                types: [\"debuff\"],\n                apply_text:\"'s guard has been crushed!\",\n                max_stacks: 3\n            };\n            \n            if (damage.eva == false) {\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(debuff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n            }\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\", \"debuff\"],\n                    target: \"opponent\"\n                }\n            }\n            \n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n        cost: (user, target) => {\n            if (user.stamina >= 25) { return true } else { return \"Insufficient Stamina!\" };\n        }\n    },\n\n    smite: {\n        name: 'smite',\n        description: \"<b>Cost: 50 Stamina</b> - The user imbues their weapon with holy power and strikes their enemy. Deals\" +\n        ` high physical light damage.`,\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'light',\n        def_element: 'light',\n        off_mod: 1.2,\n        def_mod: 0.9,\n        dmg_mod: 1.34,\n        use: (user, target, type) => {\n            const skill = skills.smite // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} strikes with holy force! [Smite]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -50, \"self\", false, false, plr, enemy, false);\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\"],\n                    target: \"opponent\"\n                }\n            }\n            \n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n        cost: (user, target) => {\n            if (user.stamina >= 50) { return true } else { return \"Insufficient Stamina!\" };\n        }\n    },\n\n    // ** -- ADVENTURER SKILLS -- ** \\\\\n\n    check: { \n        name: 'check',\n        description: \"Reveals the stats of an enemy upon use.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n            const state = [\"check\", {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"debuff\"],\n                    target: \"opponent\"\n                }\n            }, type];\n            skills.pushMessagesToState([\"Analysing...\"]);\n            skills.pushCustomFunc(type, () => {_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].displayStats(target)}, target, false, false, plr, enemy);\n            skills.pushWaitForInput(type, state, true);\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    boost: {\n        name: 'boost',\n        description: \"<b>Cost: 10 SP</b> - The user focuses their energy into granting them an extra spurt of power. Grants\" +\n        \" two additional actions. Cannot be used more than twice in one turn.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1,\n        use: (user, target, type) => {\n            const skill = skills.boost // need to change for each skill\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n            \n            skills.gainSP(type, -10, \"self\", false, false, plr, enemy, false);\n            skills.pushMessagesToState([`<br>${user.name} is boosting!`], true, \"unshift\");\n            const state = [\"boost\", {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\"],\n                    target: \"self\"\n                }\n            }, type]\n            skills.gainActions(type, 2, \"self\", state, true, plr, enemy, true);\n\n        },\n\n        cost: (user, target) => {\n            const type = user.hasOwnProperty(\"pouch\") ? \"player\" : \"enemy\";\n            if (findTimesUsed(type, \"boost\") < 2) {\n                if (user.sp >= 10) {\n                    return true;\n                } else {\n                    return \"Insufficient SP!\";\n                }\n            } else {\n                return \"This skill has already been used twice this turn!\"\n            }\n\n        }\n    },\n\n    hex: {\n        name: 'hex',\n        description: \"<b>Cost: 7 mana</b> - The user curses the enemy, applying <u>Hexed</u> [-30% Resistance, 3T duration]\" +\n        \" to them. This skill ignores resistance.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'dark',\n        def_element: 'dark',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.hex // need to change for each skill\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainMana(type, -7, \"self\", false, false, plr, enemy, false);\n\n            skills.pushMessagesToState([`${user.name} attempts to curse their enemy! [Hex]`], true, \"push\");\n\n            const stateDamage = {\n                damage: 0,\n                type: [\"debuff\"],\n                target: \"opponent\"\n            };\n            const state = [skill.name, stateDamage, type];\n\n            const buff = {\n                name: \"hexed\",\n                duration: 3,\n                resistance: -30,\n                element: \"dark\",\n                types: [\"debuff\"],\n                apply_text: \" is hexed!\",\n                max_stacks: 1,\n            };\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\", {\n                    ignoreRes: true\n                });\n            };\n            skills.applyBuff(type, func, \"opponent\", state, true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 7) { return true } else { return \"insufficient mana!\"};\n        }\n    },\n\n    dagger_throw: { \n        name: 'dagger throw',\n        description: \"<b>Cost: 5 SP</b> - The user quickly throws a dagger at their enemy, dealing low physical damage and granting\" +\n        \" themselves an extra action.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 1,\n        def_mod: 1.2,\n        dmg_mod: 0.59,\n        use: (user, target, type) => {\n            const skill = skills.dagger_throw // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainSP(type, -5, \"self\", false, false, plr, enemy, false);\n\n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} throws a dagger at their enemy! [Dagger Throw]`, damage);\n\n            const stateDamage = {\n                damage: damage,\n                type: [\"attack\"],\n                target: \"opponent\"\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", false, false, plr, enemy);\n            skills.gainActions(type, 1, \"self\", [skill.name, stateDamage, type], true, plr, enemy, true);\n\n        },\n\n        cost: (user, target) => {\n            if (user.sp >= 5) { return true } else { return \"Insufficient SP!\" };\n        }\n    },\n\n    smokescreen: { \n        name: 'smokescreen',\n        description: \"<b>Cost: 10 mana</b> - The user throws up a smokescreen, making it hard to both hit and be hit by the\" +\n        \" enemy. Applies <u>Smokescreen</u> [+30% evasion, unstrippable, 2T duration] to both the user and their opponent.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.smokescreen // need to change for each skill\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainMana(type, -10, \"self\", false, false, plr, enemy, false);\n\n            const stateDamage = {\n                damage: 0,\n                type: [\"buff\"],\n                target: \"all\"\n            };\n            const state = [skill.name, stateDamage, type];\n\n            const buff = {\n                name: \"smokescreen\",\n                duration: 2,\n                evasion: 0.3,\n                element: \"physical\",\n                types: [\"buff\"],\n                apply_text: \" is shrouded by smoke!\",\n                max_stacks: 1,\n            };\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n\n            const func2 = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy()), \"buffs\");\n            };\n            skills.applyBuff(type, func2, \"self\", state, true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 10) { return true } else { return \"Insufficient mana!\" };\n        }\n    },\n\n    piercing_dagger_throw: { \n        name: 'piercing dagger throw',\n        description: \"<b>Cost: 20 Stamina</b> - The user throws a particularly sharp dagger at their opponent. Deals low\" +\n        \" physical damage that ignores the enemy's defence.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 0.75,\n        def_mod: 0,\n        dmg_mod: 0.89,\n        use: (user, target, type) => {\n            const skill = skills.piercing_dagger_throw // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n        \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} throws a piercing dagger at their enemy! [Piercing Dagger Throw]`, damage);\n            \n            skills.gainStamina(type, -20, \"self\", false, false, plr, enemy, false);\n\n            const stateDamage = {\n                damage: damage,\n                type: [\"attack\"],\n                target: \"opponent\"\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, stateDamage, type], true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.stamina >= 20) { return true } else { return \"Insufficient Stamina!\" };\n        }\n    },\n\n    brutal_swipe: {\n        name: 'brutal swipe',\n        description: \"<b>Cost: 30 Stamina</b> - The user enhances their strength temporarily and attacks, dealing high weapon\" +\n        \" element physical damage.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 0.9,\n        dmg_mod: 1.54,\n        use: (user, target, type) => {\n            const skill = skills.brutal_swipe // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -30, \"self\", false, false, plr, enemy, false);\n\n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} swiped at the enemy brutally! [Brutal Swipe]`, damage);\n            \n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n        },\n\n        cost: (user, target) => {\n            if (user.stamina >= 30) { return true } else {return \"Insufficient Stamina!\"};\n        }\n    },\n\n    crushing_blow: {\n        name: 'crushing blow',\n        description: \"<b>Cost: 30 Stamina</b> - The user enhances their strength temporarily and attacks, dealing very high weapon\" +\n        \" element physical damage.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1.2,\n        def_mod: 1,\n        dmg_mod: 1.89,\n        use: (user, target, type) => {\n            const skill = skills.crushing_blow // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -30, \"self\", false, false, plr, enemy, false);\n\n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} attempted to crush the enemy! [Crushing Blow]`, damage);\n            \n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n        },\n\n        cost: (user, target) => {\n            if (user.stamina >= 30) { return true } else {return \"Insufficient Stamina!\"};\n        }\n    },\n    \n\n    // ------------------------------------------------ \\\\\n    // ------------------------------------------------ \\\\\n\n    // ** -- MAGE DISCIPLINE -- ** \\\\\n\n    fireball: {\n        name: 'fireball',\n        description: `<b>Cost: 10 MP</b> - The user fires a fireball at the enemy, dealing below average magical fire damage. Applies ` +\n        ` <u>Fire Charge</u> to the user, which may fuse with other charges upon casting to create different charges. Charges` +\n        ` can be absorbed or used against the enemy.`,\n        off_stat: 'matk',\n        def_stat: 'mdef',\n        off_element: 'fire',\n        def_element: 'fire',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.8,\n        use: (user, target, type) => {\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const skill = skills.fireball // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.gainMana(type, -10, \"self\", false, false, plr, enemy, false);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} shot a fireball at the enemy! [Fireball]`, damage);\n\n            // find out what charges are applied\n            const earthCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"earth charge\");\n            const iceCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"ice charge\");\n            const waterCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"water charge\");\n\n            switch(1) {\n                case earthCharge: {\n                    skills.pushMessagesToState([\"The earth charge and fire charge coalesced into a magma charge!\"]);\n                    const buff = {\n                        name: \"magma charge\",\n                        duration: 5,\n                        element: \"fire\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with magma energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"earth charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    break;\n                }\n\n                case iceCharge: {\n                    skills.pushMessagesToState([\"The ice charge and fire charge coalesced into a water charge!\"]);\n                    const buff = {\n                        name: \"water charge\",\n                        duration: 5,\n                        element: \"fire\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with water energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"ice charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    break;\n                }\n\n                case waterCharge: {\n                    skills.pushMessagesToState([\"The water charge and fire charge coalesced into a steam charge!\"]);\n                    const buff = {\n                        name: \"steam charge\",\n                        duration: 5,\n                        element: \"fire\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with steam energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"water charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    break;\n                }\n\n                default: {\n                    const buff = {\n                        name: \"fire charge\",\n                        duration: 5,\n                        element: \"fire\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with fire energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                }\n            }\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"buff\", \"attack\"],\n                    target: \"opponent\"\n                }\n            }\n            \n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n            \n        },\n        cost: (user, target) => {\n            if (user.mana >= 10) { return true } else { return \"Insufficient mana!\" };\n        }\n    },\n\n    icebolt: {\n        name: 'icebolt',\n        description: `<b>Cost: 10 MP</b> - The user fires a bolt of ice at the enemy, dealing below average magical water damage. Applies ` +\n        ` <u>Ice Charge</u> to the user, which may fuse with other charges upon casting to create different charges. Charges` +\n        ` can be absorbed or used against the enemy.`,\n        off_stat: 'matk',\n        def_stat: 'mdef',\n        off_element: 'water',\n        def_element: 'water',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.8,\n        use: (user, target, type) => {\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const skill = skills.icebolt // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} Fired a bolt of ice at the enemy! [Icebolt]`, damage);\n            skills.gainMana(type, -10, \"self\", false, false, plr, enemy, false);\n            \n            // find out what charges are applied\n            const fireCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"fire charge\");\n            const earthCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"earth charge\");\n            const magmaCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"magma charge\");\n\n            switch(1) {\n                case fireCharge: {\n                    skills.pushMessagesToState([\"The ice charge and fire charge coalesced into a water charge!\"]);\n                    const buff = {\n                        name: \"water charge\",\n                        duration: 5,\n                        element: \"water\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with water energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"fire charge\");\n                    }\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    break;\n                }\n\n                case earthCharge: {\n                    skills.pushMessagesToState([\"The ice charge and earth charge coalesced into a frozen earth charge!\"]);\n                    const buff = {\n                        name: \"frozen earth charge\",\n                        duration: 5,\n                        element: \"water\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with frozen earth energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"earth charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    break;\n                }\n\n                case magmaCharge: {\n                    skills.pushMessagesToState([\"The ice charge and magma charge coalesced into an obsidian charge!\"]);\n                    const buff = {\n                        name: \"obsidian charge\",\n                        duration: 5,\n                        element: \"water\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with obsidian energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"magma charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    break;\n                }\n\n                default: {\n                    const buff = {\n                        name: \"ice charge\",\n                        duration: 5,\n                        element: \"water\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with ice energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                }\n            }\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"buff\", \"attack\"],\n                    target: \"opponent\"\n                }\n            }\n            \n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n            \n        },\n        cost: (user, target) => {\n            if (user.mana >= 10) { return true } else { return \"Insufficient mana!\" };\n        }\n    },\n\n    lesser_quake: {\n        name: 'lesser quake',\n        description: `<b>Cost: 10 MP</b> - The user causes the earth at the enemy to quake, dealing below average magical earth damage. Applies ` +\n        ` <u>Earth Charge</u> to the user, which may fuse with other charges upon casting to create different charges. Charges` +\n        ` can be absorbed or used against the enemy.`,\n        off_stat: 'matk',\n        def_stat: 'mdef',\n        off_element: 'earth',\n        def_element: 'earth',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.8,\n        use: (user, target, type) => {\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const skill = skills.lesser_quake // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} caused the earth to quake! [Lesser Quake]`, damage);\n\n            skills.gainMana(type, -10, \"self\", false, false, plr, enemy, false);\n        \n            // find out what charges are applied\n            const fireCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"fire charge\");\n            const iceCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"ice charge\");\n            const magmaCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"magma charge\");\n            const waterCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"water charge\");\n\n            switch(1) {\n                case fireCharge: {\n                    skills.pushMessagesToState([\"The earth charge and fire charge coalesced into a magma charge!\"]);\n                    const buff = {\n                        name: \"magma charge\",\n                        duration: 5,\n                        element: \"earth\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with magma energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"fire charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    break;\n                }\n\n                case iceCharge: {\n                    skills.pushMessagesToState([\"The ice charge and earth charge coalesced into a frozen earth charge!\"]);\n                    const buff = {\n                        name: \"frozen earth charge\",\n                        duration: 5,\n                        element: \"water\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with frozen earth energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"ice charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    break;\n                }\n\n                case magmaCharge: {\n                    skills.pushMessagesToState([\"The earth charge and magma charge coalesced into a volcano charge!\"]);\n                    const buff = {\n                        name: \"volcano charge\",\n                        duration: 5,\n                        element: \"earth\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with volcano energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"magma charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    break;\n                }\n\n                case waterCharge: {\n                    skills.pushMessagesToState([\"The water charge and earth charge coalesced into a soil charge!\"]);\n                    const buff = {\n                        name: \"soil charge\",\n                        duration: 5,\n                        element: \"earth\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with soil energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"water charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    break;\n                }\n\n                default: {\n                    const buff = {\n                        name: \"earth charge\",\n                        duration: 5,\n                        element: \"earth\",\n                        types: [\"buff\"],\n                        apply_text: \" is imbued with earth energy!\",\n                        desc: \"Can be absorbed or used against the enemy for special effects.\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                }\n            }\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"buff\", \"attack\"],\n                    target: \"opponent\"\n                }\n            }\n            \n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n            \n        },\n        cost: (user, target) => {\n            if (user.mana >= 10) { return true } else { return \"Insufficient mana!\" };\n        }\n    },\n\n    imbue_energy: {\n        name: 'imbue energy',\n        description: `<b>Cost: 20 stamina</b>. The user absorbs nearby energy into themselves fully. Consumes all elemental` +\n        ` charges applied to the user and causes a positive effect (for the user) for each one. Also grants 5 SP` +\n        ` for each charge absorbed. If at least one charge is absorbed, the user gains an extra action.`,\n        off_stat: 'matk',\n        def_stat: 'mdef',\n        off_element: 'earth',\n        def_element: 'earth',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -20, \"self\", false, false, plr, enemy, false);\n\n            const skill = skills.imbue_energy // need to change for each skill\n            \n            skills.pushMessagesToState([`<br>${user.name} reabsorbed energy into themselves! [Imbue Energy]`], true, \"push\");\n\n            var absorbed = false;\n\n            // find out what charges are applied\n            const fireCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"fire charge\");\n            const iceCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"ice charge\");\n            const earthCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"earth charge\");\n            const volcanoCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"volcano charge\");\n            const soilCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"soil charge\");\n            const obsidianCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"obsidian charge\");\n            const magmaCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"magma charge\");\n            const waterCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"water charge\");\n            const frozenEarthCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"frozen earth charge\");\n            const steamCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"steam charge\");\n\n            if (fireCharge == 1) {\n                    skills.pushMessagesToState([\"Fire charge absorbed!\"], false);\n                    const buff = {\n                        name: \"fire imbued\",\n                        atk: 0.2,\n                        matk: 0.2,\n                        elemental: {\n                            offence: { fire: 20 },\n                            defence: { }\n                        },\n                        duration: 3,\n                        element: \"fire\",\n                        types: [\"buff\"],\n                        apply_text: \" has fire energy within!\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"fire charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                    absorbed = true;\n            }\n\n            if (iceCharge == 1) {\n                    skills.pushMessagesToState([\"Ice charge absorbed!\"], false);\n                    const buff = {\n                        name: \"ice imbued\",\n                        def: 0.25,\n                        mdef: 0.52,\n                        duration: 3,\n                        element: \"water\",\n                        types: [\"buff\"],\n                        apply_text: \" has ice energy within!\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"ice charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                    absorbed = true;\n            }\n\n            if (earthCharge == 1) {\n                    skills.pushMessagesToState([\"earth charge absorbed!\"], false);\n                    const buff = {\n                        name: \"earth imbued\",\n                        mitigation: 0.5,\n                        duration: 3,\n                        element: \"earth\",\n                        types: [\"buff\"],\n                        apply_text: \" has earth energy within!\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"earth charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    skills.gainActions(type, -1, \"self\", false, false, plr, enemy);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                    absorbed = true;\n            }\n\n            if (volcanoCharge == 1) {\n                    skills.pushMessagesToState([\"Volcano charge absorbed!\"], false);\n                    const buff = {\n                        name: \"volcano imbued\",\n                        atk: 0.35,\n                        matk: 0.35,\n                        duration: 2,\n                        element: \"fire\",\n                        types: [\"buff\"],\n                        apply_text: \" has volcano energy within!\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"volcano charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    skills.gainActions(type, 1, \"self\", false, false, plr, enemy);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                    absorbed = true;\n            }\n\n            if (soilCharge == 1) {\n                    skills.pushMessagesToState([\"Soil charge absorbed!\"], false);\n                    const buff = {\n                        name: \"soil imbued\",\n                        def: 0.15,\n                        def: 0.15,\n                        eva: 0.2,\n                        duration: 3,\n                        element: \"earth\",\n                        types: [\"buff\"],\n                        apply_text: \" has soil energy within!\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"soil charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                    absorbed = true;\n            }\n\n            if (obsidianCharge == 1) {\n                    skills.pushMessagesToState([\"Obsidian charge absorbed!\"], false);\n                    const buff = {\n                        name: \"obsidian imbued\",\n                        mitigation: 0.8,\n                        duration: 1,\n                        element: \"earth\",\n                        types: [\"buff\"],\n                        apply_text: \" has obsidian energy within!\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"obsidian charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    skills.gainSP(type, 15, \"self\", false, false, plr, enemy);\n                    skills.gainActions(type, -999, \"self\", false, false, plr, enemy);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                    absorbed = true;\n            }\n\n            if (magmaCharge == 1) {\n                    skills.pushMessagesToState([\"Magma charge absorbed!\"], false);\n                    const buff = {\n                        name: \"magma imbued\",\n                        atk: 0.2,\n                        matk: 0.2,\n                        elemental: {\n                            offence: { fire: 15, earth: 15 },\n                            defence: {}\n                        },\n                        duration: 4,\n                        element: \"earth\",\n                        types: [\"buff\"],\n                        apply_text: \" has magma energy within!\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"magma charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                    absorbed = true;\n            }\n\n            if (waterCharge == 1) {\n                    skills.pushMessagesToState([\"Water charge absorbed!\"], false);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"water charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    const heal = skills.calcDamage(user, user, \"mdef\", \"mdef\", \"none\", \"none\", 0.45, 0, 1.3, { canEvade: false, canCrit: false});\n                    skills.gainHealth(type, heal.damage, \"self\", false, false, plr, enemy);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                    absorbed = true;\n            }\n\n            if (frozenEarthCharge == 1) {\n                    skills.pushMessagesToState([\"Frozen earth charge absorbed!\"], false);\n                    const buff = {\n                        name: \"frozen earth imbued\",\n                        mitigation: 0.2,\n                        def: 0.1,\n                        mdef: 0.1,\n                        duration: 3,\n                        element: \"water\",\n                        types: [\"buff\"],\n                        apply_text: \" has frozen earth energy within!\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    };\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"frozen earth charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                    absorbed = true;\n            }\n\n            if (steamCharge == 1) {\n                    skills.pushMessagesToState([\"Steam charge absorbed!\"], false);\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"steam charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    skills.gainActions(type, 2, \"self\", false, false, plr, enemy);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                    absorbed = true;\n            }\n\n            if (absorbed) {\n                skills.gainActions(type, 1, \"self\", false, false, plr, enemy);\n            }\n\n            const state = [\"imbue energy\", {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\", \"debuff\", \"attack\"],\n                    target: \"self\"\n                }\n            }, type];\n            \n            skills.pushCustomFunc(type, () => {}, \"self\", state, true, plr, enemy);\n            \n            \n        },\n        cost: (user, target) => {\n            if (user.stamina >= 20) { return true } else { return \"Insufficient stamina\" };\n        }\n    },\n\n    enforce_energy: {\n        name: 'enforce energy',\n        description: `<b>Cost: 20 stamina</b>. The user uses nearby elemental energy to strike the opponent. Consumes all ` +\n        `elemental charges and applies a negative effect to and/or damages the enemy for each one. Also grants 5 SP for each` +\n        ` charge consumed. If at least one charge is consumed, also grants an extra action to the user.`,\n        off_stat: 'matk',\n        def_stat: 'mdef',\n        off_element: 'earth',\n        def_element: 'earth',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -20, \"self\", false, false, plr, enemy, false);\n\n            const skill = skills.enforce_energy // need to change for each skill\n            \n            skills.pushMessagesToState([`<br>${user.name} fired elemental energy at the enemy! [Enforce Energy]`], true, \"push\");\n\n            var enforced = false;\n\n            // find out what charges are applied\n            const fireCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"fire charge\");\n            const iceCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"ice charge\");\n            const earthCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"earth charge\");\n            const volcanoCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"volcano charge\");\n            const soilCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"soil charge\");\n            const obsidianCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"obsidian charge\");\n            const magmaCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"magma charge\");\n            const waterCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"water charge\");\n            const frozenEarthCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"frozen earth charge\");\n            const steamCharge = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plr.buffs, \"steam charge\");\n\n            if (fireCharge == 1) {\n                    skills.pushMessagesToState([\"Fire energy enforced!\"], false, \"push\");\n                    const buff = {\n                        name: \"fire enforced\",\n                        elemental: {\n                            offence: { },\n                            defence: { fire: 20 }\n                        },\n                        duration: 3,\n                        element: \"fire\",\n                        types: [\"debuff\"],\n                        apply_text: \" has had fire energy forced upon them!\",\n                        max_stacks: 1,\n                    };\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                    };\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"fire charge\");\n                    };\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    //\n                    const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"fire\", \"fire\", 0.95, 1.05, 0.7, true);\n                    skills.dealDamage(type, damage.damage, \"opponent\", false, false, plr, enemy);\n                    skills.prepareAttackMessage(user, target, \"\", damage, \"push\");\n                    //\n                    skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                    enforced = true;\n            }\n\n            if (iceCharge == 1) {\n                skills.pushMessagesToState([\"Ice energy enforced!\"], false, \"push\");\n                const buff = {\n                    name: \"ice enforced\",\n                    speed: -0.2,\n                    duration: 3,\n                    element: \"water\",\n                    types: [\"debuff\"],\n                    apply_text: \" has had ice energy forced upon them!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"ice charge\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                //\n                const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"water\", \"water\", 0.95, 1.05, 0.7, true);\n                skills.dealDamage(type, damage.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damage, \"push\");\n                //\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n                skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                enforced = true;\n            }\n\n            if (earthCharge == 1) {\n            skills.pushMessagesToState([\"Earth energy enforced!\"], false, \"push\");\n            const buff = {\n                name: \"earth enforced\",\n                atk: -0.2,\n                duration: 3,\n                element: \"earth\",\n                types: [\"debuff\"],\n                apply_text: \" has had earth energy forced upon them!\",\n                max_stacks: 1,\n            };\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n            };\n            const func2 = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"earth charge\");\n            };\n            skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n            //\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"earth\", \"earth\", 0.95, 1.05, 0.7, true);\n            skills.dealDamage(type, damage.damage, \"opponent\", false, false, plr, enemy);\n            skills.prepareAttackMessage(user, target, \"\", damage, \"push\");\n            //\n            skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n            skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n            enforced = true;\n            }\n\n            if (magmaCharge == 1) {\n                skills.pushMessagesToState([\"Magma energy enforced!\"], false, \"push\");\n                const DOTdamage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"earth\", \"earth\", 0.95, 1.05, 0.25, true);\n                const buff = {\n                    name: \"magma enforced\",\n                    elemental: {\n                        offence: {},\n                        defence: { fire: 15, earth: 15 }\n                    },\n                    damage: [\"flat\", DOTdamage.damage],\n                    duration: 3,\n                    element: \"earth\",\n                    types: [\"debuff\"],\n                    apply_text: \" has had magma energy forced upon them!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"magma charge\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                //\n                const damageEarth = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"earth\", \"earth\", 0.95, 1.05, 0.5, true);\n                skills.dealDamage(type, damageEarth.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damageEarth, \"push\");\n                //\n                const damageFire = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"fire\", \"fire\", 0.95, 1.05, 0.5, true);\n                skills.dealDamage(type, damageFire.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damageFire, \"push\");\n                //\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n                skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                enforced = true;\n            }\n\n            if (waterCharge == 1) {\n                skills.pushMessagesToState([\"Water energy enforced!\"], false, \"push\");\n                const buff = {\n                    name: \"water enforced\",\n                    elemental: {\n                        offence: { },\n                        defence: { water: 20 }\n                    },\n                    duration: 3,\n                    element: \"water\",\n                    types: [\"debuff\"],\n                    apply_text: \" has had water energy forced upon them!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"water charge\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                //\n                const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"water\", \"water\", 0.95, 1.05, 0.7, true);\n                skills.dealDamage(type, damage.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damage, \"push\");\n                //\n                const heal = skills.calcDamage(user, target, \"mdef\", \"mdef\", \"none\", \"none\", 1, 0, 0.5, { canCrit: false, canEvade: false });\n                skills.gainHealth(type, heal.damage, \"self\", false, false, plr, enemy);\n                //\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n                skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                enforced = true;\n            }\n\n            if (frozenEarthCharge == 1) {\n                skills.pushMessagesToState([\"Frozen earth energy enforced!\"], false, \"push\");\n                const buff = {\n                    name: \"frozen earth enforced\",\n                    speed: -0.15,\n                    atk: -0.15,\n                    def: -0.15,\n                    resistance: -10,\n                    duration: 3,\n                    element: \"earth\",\n                    types: [\"debuff\"],\n                    apply_text: \" has had frozen earth energy forced upon them!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"frozen earth charge\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                //\n                const damageEarth = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"earth\", \"earth\", 0.95, 1.05, 0.6, true);\n                skills.dealDamage(type, damageEarth.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damageEarth, \"push\");\n                //\n                const damageWater = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"water\", \"water\", 0.95, 1.05, 0.6, true);\n                skills.dealDamage(type, damageWater.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damageWater, \"push\");\n                //\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n                skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                enforced = true;\n            }\n\n            if (volcanoCharge == 1) {\n                skills.pushMessagesToState([\"Volcano energy enforced!\"], false, \"push\");\n                const DOTdamage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"fire\", \"fire\", 0.95, 1.05, 0.9, true);\n                const buff = {\n                    name: \"volcano enforced\",\n                    def: -0.25,\n                    mdef: -0.25,\n                    damage: [\"flat\", DOTdamage.damage],\n                    duration: 2,\n                    element: \"fire\",\n                    types: [\"debuff\"],\n                    apply_text: \" has had volcano energy forced upon them!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"volcano charge\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                //\n                const damageEarth = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"earth\", \"earth\", 0.95, 1.05, 0.8, true);\n                skills.dealDamage(type, damageEarth.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damageEarth, \"push\");\n                //\n                const damageFire = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"fire\", \"fire\", 0.95, 1.05, 0.5, true);\n                skills.dealDamage(type, damageFire.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damageFire, \"push\");\n                //\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n                skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                enforced = true;\n            }\n\n            if (soilCharge == 1) {\n                skills.pushMessagesToState([\"Soil energy enforced!\"], false, \"push\");\n                const buff = {\n                    name: \"soil enforced\",\n                    speed: -0.4,\n                    duration: 3,\n                    element: \"earth\",\n                    types: [\"debuff\"],\n                    apply_text: \" has had soil energy forced upon them!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"soil charge\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                //\n                const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"physical\", \"physical\", 0.95, 1.05, 0.7, true);\n                skills.dealDamage(type, damage.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damage, \"push\");\n                //\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n                skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                enforced = true;\n            }\n\n            if (obsidianCharge == 1) {\n                skills.pushMessagesToState([\"Obsidian energy enforced!\"], false, \"push\");\n                const buff = {\n                    name: \"obsidian enforced\",\n                    speed: -0.3,\n                    atk: -0.3,\n                    def: -0.3,\n                    mitigation: 0.1,\n                    duration: 3,\n                    element: \"earth\",\n                    types: [\"debuff\"],\n                    apply_text: \" has had obsidian energy forced upon them!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"obsidian charge\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                //\n                const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"earth\", \"earth\", 0.95, 1.05, 0.7, true);\n                skills.dealDamage(type, damage.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damage, \"push\");\n                //\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n                skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                enforced = true;\n            }\n\n            if (steamCharge == 1) {\n                skills.pushMessagesToState([\"Steam energy enforced!\"], false, \"push\");\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"steam charge\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                //\n                const damageWater = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"water\", \"water\", 1.1, 1.05, 1.15, true);\n                skills.dealDamage(type, damageWater.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damageWater, \"push\");\n                //\n                const damageFire = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"fire\", \"fire\", 1.1, 1.05, 1.15, true);\n                skills.dealDamage(type, damageFire.damage, \"opponent\", false, false, plr, enemy);\n                skills.prepareAttackMessage(user, target, \"\", damageFire, \"push\");\n                //\n                skills.gainSP(type, 5, \"self\", false, false, plr, enemy);\n                enforced = true;\n            }\n\n            if (enforced) {\n                skills.gainActions(type, 1, \"self\", false, false, plr, enemy);\n            }\n\n            const state = [\"enforce energy\", {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\", \"debuff\", \"attack\"],\n                    target: \"opponent\"\n                }\n            }, type];\n\n            skills.pushCustomFunc(type, () => {}, \"self\", state, true, plr, enemy);\n            \n            \n        },\n        cost: (user, target) => {\n            if (user.stamina >= 20) { return true } else { return \"Insufficient stamina\" };\n        }\n    },\n\n    blood_pact: {\n        name: 'blood pact',\n        description: \"<b>Cost: 20 SP, 15% max health</b> - The user uses converts special energy and their own blood into\" +\n        \" mana, gaining 20% of their mana in exchange for 20 SP and 15% of their max health.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.blood_pact;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.pushMessagesToState([`${user.name} formed a blood pact! [Blood Pact]`]);\n            skills.gainSP(type, -20, \"self\", false, false, plr, enemy, false);\n            skills.gainHealth(type, user.max_health * (-15/100), \"self\", false, false, plr, enemy, true);\n\n            const stateDamage = {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\"],\n                    target: \"self\"\n                }\n            }\n\n            skills.gainMana(type, user.max_mana * (20/100), \"self\", [skill.name, stateDamage, type], true, plr, enemy, true);\n\n        },\n\n        cost: (user, target) => {\n            if (user.sp >= 20) {\n                if (user.health > user.max_health * (15/100)) {\n                    return true;\n                } else {\n                    return \"Insufficient HP!\";\n                }\n            } else {\n                return \"Insufficient SP!\";\n            }\n        }\n    },\n\n    // ------------------------------ \\\\\n    // ------------------------------ \\\\\n\n    // ** -- WARRIOR DISCIPLINE -- ** \\\\\n\n    stalwart_strike: {\n        name: 'stalwart strike',\n        description: `<b>Cost: 35 stamina</b> - The user strikes the enemy while bolstering their defences. Deals low` +\n        ` physical water damage and applies <u>Stalwart</u> [+20% DEF/MDEF, 3T duration]. Also removes one` +\n        ` debuff at random from the user.`,\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'water',\n        def_element: 'water',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.65,\n        use: (user, target, type) => {\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const skill = skills.stalwart_strike // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.gainStamina(type, -35, \"self\", false, false, plr, enemy, false); // COST OF THE SKILL\n\n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} struck the enemy! [Stalwart Strike]`, damage);\n\n            const buffs = JSON.parse(JSON.stringify(user.debuffs));\n            var stripped = false;\n            while (buffs.length > 0 && stripped == false) {\n                var random = Math.round(Math.random() * buffs.length - 1);\n                if (random < 0) { random = 0 };\n                if (buffs[random].hasOwnProperty(\"unstrippable\")) {\n                    buffs.splice(random, 1);\n                } else {\n                    stripped = true;\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().debuffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().debuffs, buffs[random].name);\n                    }\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                }\n            };\n\n            const buff = {\n                name: \"stalwart\",\n                duration: 3,\n                def: 0.2,\n                mdef: 0.2,\n                element: \"physical\",\n                types: [\"buff\"],\n                apply_text: \" is stalwart!\",\n                max_stacks: 1,\n            };\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n\n            const stateDamage = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"buff\", \"attack\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, stateDamage, type], true, plr, enemy);\n\n        },\n        cost: (user, target) => {\n            if (user.stamina >= 35) { return true } else { return \"Insufficient stamina!\" };\n        }\n    },\n\n    debilitate: {\n        name: 'debilitate',\n        description: '<b>Cost: 25 SP</b> - The user strikes the enemy in a way that removes a portion of their power, dealing' +\n        ' low physical thunder damage and removing one random buff from the enemy.',\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'thunder',\n        def_element: 'thunder',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.5,\n        use: (user, target, type) => {\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const skill = skills.debilitate // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.gainSP(type, -25, \"self\", false, false, plr, enemy, false); // COST OF THE SKILL\n\n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} struck the enemy! [Debilitate]`, damage);\n\n            // buff strip\n            if (damage.eva == false) {\n                const buffs = JSON.parse(JSON.stringify(target.buffs));\n                var stripped = false;\n                while (buffs.length > 0 && stripped == false) {\n                    var random = Math.round(Math.random() * buffs.length - 1);\n                    if (buffs[random].hasOwnProperty(\"unstrippable\")) {\n                        buffs.splice(random, 1);\n                    } else {\n                        stripped = true;\n                        const func2 = () => {\n                            _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs, buffs[random].name);\n                        }\n                        skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    }\n                }\n            };\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\", \"debuff\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.sp >= 25) { return true } else { return \"Insufficient SP!\"};\n        }\n    },\n\n    enduring_fortress: {\n        name: 'enduring fortress',\n        description: `<b>Cost: 5 stamina</b> - The user grants a physical form to their endurance, applying the buff` +\n        ` <u>Fortress</u> [+5% DEF/MDEF, 999T duration, stacks to 100], and granting the user an extra acition.` +\n        `This skill can only be used once per turn.`,\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.enduring_fortress;\n\n            const buff = {\n                name: \"fortress\",\n                def: 0.05,\n                mdef: 0.05,\n                duration: 999,\n                element: \"physical\",\n                types: [\"buff\"],\n                apply_text: \"strengthens their resolve!\",\n                max_stacks: 100\n            }\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -5, \"self\", false, false, plr, enemy, false);\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\"],\n                    target: \"self\"\n                }\n            }, type];\n\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n            skills.gainActions(type, 1, \"self\", state, true, plr, enemy, true);\n\n\n\n        },\n\n        cost: (user, target) => {\n            const type = user.hasOwnProperty(\"pouch\") ? \"player\" : \"enemy\" // finding skill 'type'\n            const state = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].state;\n            if (findTimesUsed(type, \"enduring fortress\") == 0) {\n                if (user.stamina >= 5) {\n                    return true;\n                } else {\n                    return \"Insufficient stamina!\";\n                }\n            } else {\n                return \"This skill has been used this turn!\";\n            }\n        }\n    },\n\n    guard_conversion: {\n        name: 'guard conversion',\n        description: `<b>Cost: 10 stamina</b> - The user converts all defensive energy into pure energy. Removes all buffs\" +\n        \" that increase DEF or MDEF from the user. For each one removed, the user gains SP equal to the DEF/MDEF (higher\" +\n        \" one is taken) percentage increase. Then, grants an additional action if at least one buff was removed`,\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.guard_conversion;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -10, \"self\", false, false, plr, enemy, false);\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\"],\n                    target: \"self\"\n                }\n            }, type];\n\n            var totalSPGain = 0;\n\n            var stripped = false;\n            const buffs = Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"copy\"])(user.buffs);\n            while (buffs.length > 0) {\n                var random = Math.round(Math.random() * buffs.length - 1);\n                if (random < 0) { random = 0 };\n                if (buffs[random].hasOwnProperty(\"unstrippable\")) {\n                    buffs.splice(random, 1);\n                } else if (buffs[random].hasOwnProperty(\"def\") || buffs[random].hasOwnProperty(\"mdef\")) {\n                    if (buffs[random][\"def\"] > 0 || buffs[random[\"mdef\"] > 0]) {\n                        var spGain = buffs[random][\"def\"] != undefined ? buffs[random][\"def\"] * 100 : 0;\n                        var mdefBonus = buffs[random][\"mdef\"] != undefined ? buffs[random][\"def\"] * 100 : 0;\n                        if (mdefBonus > spGain) { spGain = mdefBonus };\n                        totalSPGain += spGain\n                        const temp = buffs[random].name; // if standin variable isn't used, function refers to buffs[random], which..\n                        // ..will be empty by the time the function is actually called.\n                        const func2 = () => {\n                            _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, temp);\n                        }\n                        skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                        buffs.splice(random, 1);\n                        stripped = true;\n                    }\n                } else {\n                    buffs.splice(random, 1);\n                }\n            }\n\n            if (stripped) {\n                skills.gainSP(type, totalSPGain, \"self\", false, false, plr, enemy, true);\n                skills.gainActions(type, 1, \"self\", state, true, plr, enemy, true);\n            } else {\n                skills.pushCustomFunc(type, () => {}, \"self\", state, true, plr, enemy);\n            }\n\n        },\n\n        cost: (user, target) => {\n            if (user.stamina >= 10) { return true } else { return \"Insufficient stamina!\"};\n        }\n    },\n\n    sacred_shield: {\n        name: 'sacred shield',\n        description: `<b>Cost: 10 SP</b> - The user condenses special energy such that it takes physical form and uses it` +\n        ` as a shield. Consumes 999 actions (ending user turn) after applying <u>Sacred Shield</u> [+75% DEF/MDEF, 2T duration]` +\n        ` to the user.`,\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.sacred_shield;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainSP(type, -10, \"self\", false, false, plr, enemy, false);\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\"],\n                    target: \"self\"\n                }\n            }, type];\n\n            const buff = {\n                name: \"sacred shield\",\n                def: 0.75,\n                mdef: 0.75,\n                duration: 2,\n                element: \"physical\",\n                types: [\"buff\"],\n                apply_text: \" is protected by sacred energy!\",\n                max_stacks: 1\n            }\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.gainActions(type, -999, \"self\", false, false, plr, enemy, true);\n            skills.applyBuff(type, func, \"self\", state, true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.sp >= 10) { return true } else { return \"Insufficient SP!\"};\n        }\n    },\n\n    sentinel_blow: {\n        name: 'sentinel blow',\n        description: `<b>Cost: 25 stamina</b> - The user strikes in a way that utilises their defensive prowess. Deals` +\n        ` considerable weapon element physical damage. Damage is based on the user's DEF stat.`,\n        off_stat: 'def',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 0.9,\n        def_mod: 1,\n        dmg_mod: 1.25,\n        use: (user, target, type) => {\n            const skill = skills.sentinel_blow // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -25, \"self\", false, false, plr, enemy, false);\n\n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} struck the enemy like a sentinel! [Sentinel Blow]`, damage);\n            \n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n        },\n\n        cost: (user, target) => {\n            if (user.stamina >= 25) {\n                return true;\n            } else {\n                return \"Insufficient stamina!\";\n            }\n        }\n    },\n\n\n\n    // ------------------------------------------- \\\\\n    // ------------------------------------------- \\\\\n\n    // ** -- ROGUE DISCIPLINES -- ** \\\\\n\n    swift_strike: {\n        name: 'swift strike',\n        description: \"<b>Cost: 25 stamina</b> - The user strikes the enemy quickly, dealing below average physical wind damage. Applies\" +\n        \" <u>Swift</u> [+20% SPD, 4T duration] to the user. Also, if <u>Feeble</u> is applied to the enemy, consumes it and\" +\n        \" grants the user mana (5% max mana), and 5 SP. If <u>Stealth</u> is applied to the user and they have at least 5 SP, consumes both\" +\n        \" <u>Stealth</u> and 5 SP in exchange for 2 extra actions.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'wind',\n        def_element: 'wind',\n        off_mod: 1.01,\n        def_mod: 0.99,\n        dmg_mod: 0.78,\n        use: (user, target, type) => {\n            const skill = skills.swift_strike // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} struck the enemy quickly! [Swift Strike]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -25, \"self\", false, false, plr, enemy, false);\n\n            const feebleStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(target.debuffs, \"feeble\");\n            const stealthStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(user.buffs, \"stealth\");\n\n            if (feebleStacks == 1) {\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().debuffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().debuffs, \"feeble\");\n                };\n                skills.stripBuff(type, func2, \"opponent\", false, false, plr, enemy);\n                skills.gainSP(type, 5, \"self\", false, false, plr, enemy, true);\n                skills.gainMana(type, user.max_mana * (5/100), \"self\", false, false, plr, enemy);\n            };\n\n            if (stealthStacks == 1 && user.sp >= 5) {\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"stealth\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                skills.gainSP(type, -5, \"self\", false, false, plr, enemy, true);\n                skills.gainActions(type, 2, \"self\", false, false, plr, enemy, true);\n            };\n\n            const buff = {\n                name: \"swift\",\n                duration: 4,\n                speed: 0.2,\n                element: \"physical\",\n                types: [\"buff\", \"ninja\"],\n                apply_text: \" is swift!\",\n                max_stacks: 1,\n            };\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\", \"buff\", \"mana_gain\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.stamina >= 25) { return true } else { return \"Insufficient stamina!\" };\n        }\n    },\n\n    shinobi_strike: {\n        name: 'shinobi strike',\n        description: \"<b>Cost: 10 mana</b> - The user strikes the enemy before immediately blending into the shadows. Deals\" +\n        \" low weapon element physical damage and applies <u>Stealth</u> [+10% SPD, +10% crit rate, 4T duration] to the user.\" +\n        \" If <u>Weakened</u> is applied to the enemy, consumes it and grants the user stamina (5% max stamina), and 5 SP. If\" +\n        \" <u>Swift</u> is applied to the user and they have at least 5 SP, consumes both <u>Swift</u> and 5 SP to grant\" +\n        \" the player 2 additional actions.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.55,\n        use: (user, target, type) => {\n            const skill = skills.shinobi_strike // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} struck the enemy before blending into the shadows... [Shinobi Strike]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainMana(type, -5, \"self\", false, false, plr, enemy, false);\n\n            const weakenedStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(target.debuffs, \"weakened\");\n            const swiftStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(user.buffs, \"swift\");\n\n            if (weakenedStacks == 1) {\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().debuffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().debuffs, \"weakened\");\n                };\n                skills.stripBuff(type, func2, \"opponent\", false, false, plr, enemy);\n                skills.gainSP(type, 5, \"self\", false, false, plr, enemy, true);\n                skills.gainStamina(type, user.max_stamina * (5/100), \"self\", false, false, plr, enemy);\n            };\n\n            if (swiftStacks == 1 && user.sp >= 5) {\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"swift\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                skills.gainSP(type, -5, \"self\", false, false, plr, enemy, true);\n                skills.gainActions(type, 2, \"self\", false, false, plr, enemy, true);\n            };\n\n            const buff = {\n                name: \"stealth\",\n                duration: 4,\n                speed: 0.1,\n                crit_chance: 0.1,\n                element: \"physical\",\n                types: [\"buff\", \"ninja\"],\n                apply_text: \" has blended into the shadows!\",\n                max_stacks: 1,\n            };\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\", \"buff\", \"stamina_gain\"],\n                    target: \"opponent\"\n                }\n            }\n            \n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 10) { return true } else { return \"Insufficient mana!\" };\n        }\n    },\n\n    crippling_blow: {\n        name: 'crippling blow',\n        description: \"<b>Cost: 15 mana</b> - The user strikes the enemy with a special technique that cripples them somewhat.\" +\n        \" Deals moderate physical weapon element damage and applies <u>Weakened</u> [-20% DEF/MDEF, 4T duration] to the enemy.\" +\n        \" If <u>Stealth</u> is applied to the user, consumes it and applies <u>Footwork</u> [+10% evasion chance, 4T duration] to the user, and grant them 10 SP.\" +\n        \" If <u>Feeble</u> is applied to the enemy, consumes it and applies <u>Dull Soul</u> [-20 resistance, 4T duraton] to the enemy\" +\n        \", and grants the user 10 SP.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.95,\n        use: (user, target, type) => {\n            const skill = skills.crippling_blow // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} strikes the enemy with a special technique! [Crippling Blow]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainMana(type, -15, \"self\", false, false, plr, enemy, false);\n\n            const feebleStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(target.debuffs, \"feeble\");\n            const stealthStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(user.buffs, \"stealth\");\n\n            if (feebleStacks == 1) {\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().debuffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().debuffs, \"feeble\");\n                };\n                skills.stripBuff(type, func2, \"opponent\", false, false, plr, enemy);\n                const buff = {\n                    name: \"dull soul\",\n                    duration: 4,\n                    element: \"physical\",\n                    resistance: -20,\n                    types: [\"buff\", \"ninja\"],\n                    apply_text: \"'s soul has been dulled!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy()), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                skills.gainSP(type, 10, \"self\", false, false, plr, enemy, true);\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n            };\n\n            if (stealthStacks == 1) {\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"stealth\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                const buff = {\n                    name: \"footwork\",\n                    duration: 4,\n                    evasion: 0.1,\n                    element: \"physical\",\n                    types: [\"buff\", \"ninja\"],\n                    apply_text: \" has enhanced footwork!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                };\n                skills.gainSP(type, 10, \"self\", false, false, plr, enemy, true);\n                skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n            };\n\n            const buff = {\n                name: \"weakened\",\n                def: -0.2,\n                mdef: -0.2,\n                duration: 4,\n                element: \"physical\",\n                types: [\"debuff\", \"ninja\"],\n                apply_text: \" is weakened!\",\n                max_stacks: 1,\n            };\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n            };\n            skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\", \"buff\", \"debuff\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 15) { return true } else { return \"Insufficient mana!\" };\n        }\n    },\n\n    enfeebling_blow: {\n        name: 'enfeebling blow',\n        description: \"<b>Cost: 25 stamina</b> - The user strikes with a special technique that worsens the target's offensive\" +\n        \" capabilities. Deals moderate physical damage and applies <u>Feeble</u> [-20% ATK/MATK] to the enemy. If\" +\n        \" <u>Swift</u> is applied to the user, consumes it and applies <u>Sharp Mind</u> [+10% crit chance] to the user, and grants them 10 SP\" +\n        \" If <u>Weakened</u> is applied to the enemy, consumes it and applies <u>Dull Mind</u> [-10% crit chance] to the enemy,\" +\n        \" and grants the user 10 SP.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.95,\n        use: (user, target, type) => {\n            const skill = skills.enfeebling_blow // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} strikes the enemy with a special technique! [Enfeebling Blow]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -25, \"self\", false, false, plr, enemy, false); // skill cost\n\n            const weakenedStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(target.debuffs, \"weakened\");\n            const swiftStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(user.buffs, \"swift\");\n\n            if (weakenedStacks == 1) {\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().debuffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().debuffs, \"weakened\");\n                };\n                skills.stripBuff(type, func2, \"opponent\", false, false, plr, enemy);\n                const buff = {\n                    name: \"dull mind\",\n                    duration: 4,\n                    element: \"physical\",\n                    crit_chance: -0.1,\n                    types: [\"buff\", \"ninja\"],\n                    apply_text: \"'s mind has been dulled!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy()), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                skills.gainSP(type, 10, \"self\", false, false, plr, enemy, true);\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n            };\n\n            if (swiftStacks == 1) {\n                const func2 = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, \"swift\");\n                };\n                skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                const buff = {\n                    name: \"sharp mind\",\n                    duration: 4,\n                    crit_chance: 0.1,\n                    element: \"physical\",\n                    types: [\"buff\", \"ninja\"],\n                    apply_text: \"'s mind is sharp!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                };\n                skills.gainSP(type, 10, \"self\", false, false, plr, enemy, true);\n                skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n            };\n\n            const buff = {\n                name: \"feeble\",\n                atk: -0.2,\n                matk: -0.2,\n                duration: 4,\n                element: \"physical\",\n                types: [\"debuff\", \"ninja\"],\n                apply_text: \" is feeble!\",\n                max_stacks: 1,\n            };\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n            };\n            skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\", \"buff\", \"debuff\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.stamina >= 25) { return true } else { return \"Insufficient stamina!\" };\n        }\n    },\n\n    imbue_infliction: {\n        name: 'imbue infliction',\n        description: \"<b>Cost: 20 Stamina</b>- The user focuses all their strength into one point, fusing all buffs from the\" +\n        \" <b><u>NINJA</b></u> discipline into one buff (this will not interfere with the stacking limits of these buffs from\"+ \n        \" their origin skills). Up to three of these fusion buffs can be applied at one time. If this occurs, also grants\"+ \n        \" the user an additional action.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1,\n        use: (user, target, type) => {\n            const skill = skills.imbue_infliction // need to change for each skill\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -20, \"self\" ,false, false, plr, enemy, false);\n\n            skills.pushMessagesToState([`${user.name} is focusing their energy.. [Imbue Infliction]`])\n        \n\n            var imbued = false;\n\n            const plrBuffs = JSON.parse(JSON.stringify(user.buffs));\n            var buffName = \"\";\n            if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plrBuffs, \"imbued infliction I\") == 0) {\n                buffName = \"imbued infliction I\";\n            } else if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plrBuffs, \"imbued infliction II\") == 0) {\n                buffName = \"imbued infliction II\";\n            } else {\n                buffName = \"imbued infliction III\";\n            }\n            const buffToApply = {\n                name: buffName,\n                element: \"physical\",\n                types: [\"buff\", \"ninja\"],\n                apply_text: \" has focused their energy!\",\n                max_stacks: 1,\n                duration: 0\n            };\n            const statsToGet = [\"atk\", \"matk\", \"def\", \"mdef\", \"speed\", \"crit_chance\", \"crit_damage\", \"resistance\", \"effectiveness\",\n            \"evasion\"];\n            for (var i = 0; i < plrBuffs.length; i++) {\n                if (plrBuffs[i].types.indexOf(\"ninja\") != -1) {\n                    imbued = true;\n                    const buff = plrBuffs[i];\n                    if (buff.duration > buffToApply.duration) {\n                        buffToApply.duration = buff.duration;\n                    } \n                    Object.keys(plrBuffs[i]).forEach(property => {\n                        if (statsToGet.indexOf(property) != -1) {\n                            if (buffToApply.hasOwnProperty(property)) {\n                                buffToApply[property] += buff[property];\n                            } else { buffToApply[property] = buff[property] }\n                        }\n                    });\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs, buff.name);\n                    }\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                }\n            };\n\n            const state = [\"imbue infliction\", {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\"],\n                    target: \"self\"\n                }\n            }, type]\n\n            if (imbued) {\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buffToApply, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                };\n                skills.gainActions(type, 1, \"self\", false, false, plr, enemy, true);\n                skills.applyBuff(type, func, \"self\", state, true, plr, enemy);\n            } else {\n                skills.pushMessagesToState([\"No buffs to fuse!\"], false, \"push\");\n                skills.pushCustomFunc(type, () => {}, \"self\", state, true, plr, enemy);\n            };\n\n\n\n        },\n\n        cost: (user, target) => {\n            if (user.stamina >= 20) {\n                if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(user.buffs, \"imbued infliction I\") == 0 || _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(user.buffs, \"imbued infliction II\") == 0 || _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(user.buffs, \"imbued infliction III\") == 0) {\n                    return true\n                } else {\n                    return \"Imbue limit reached!\"\n                }\n            } else { return \"Insufficient Stamina!\" }\n        }\n    },\n\n    enforce_infliction: {\n        name: 'enforce infliction',\n        description: \"<b>Cost: 20 Stamina</b>- The user focuses all of the enemie's ailments into one point, fusing all debuffs from the\" +\n        \" <b><u>NINJA</b></u> discipline into one buff (this will not interfere with the stacking limits of these debuffs from\"+ \n        \" their origin skills). Up to three of these fusion debuffs can be applied at one time. If this occurs, also grants\"+ \n        \" the user an additional action.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1,\n        use: (user, target, type) => {\n            const skill = skills.enforce_infliction // need to change for each skill\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -20, \"self\" ,false, false, plr, enemy, false);\n\n            skills.pushMessagesToState([`${user.name} is focusing inflictions applied to the enemy! [Enforce Infliction]`])\n        \n\n            var enforced = false;\n\n            const plrBuffs = JSON.parse(JSON.stringify(target.debuffs));\n            var buffName = \"\";\n            if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plrBuffs, \"enforced infliction I\") == 0) {\n                buffName = \"enforced infliction I\";\n            } else if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(plrBuffs, \"enforced infliction II\") == 0) {\n                buffName = \"enforced infliction II\";\n            } else {\n                buffName = \"enforced infliction III\";\n            }\n            const buffToApply = {\n                name: buffName,\n                element: \"physical\",\n                types: [\"buff\", \"ninja\"],\n                apply_text: \" has been afflicted with 'Enforced infliction!'\",\n                max_stacks: 1,\n                duration: 0\n            };\n            const statsToGet = [\"atk\", \"matk\", \"def\", \"mdef\", \"speed\", \"crit_chance\", \"crit_damage\", \"resistance\", \"effectiveness\",\n            \"evasion\"];\n            for (var i = 0; i < plrBuffs.length; i++) {\n                if (plrBuffs[i].types.indexOf(\"ninja\") != -1) {\n                    enforced = true;\n                    const buff = plrBuffs[i];\n                    if (buff.duration > buffToApply.duration) {\n                        buffToApply.duration = buff.duration;\n                    } \n                    Object.keys(plrBuffs[i]).forEach(property => {\n                        if (statsToGet.indexOf(property) != -1) {\n                            if (buffToApply.hasOwnProperty(property)) {\n                                buffToApply[property] += buff[property];\n                            } else { buffToApply[property] = buff[property] }\n                        }\n                    });\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().debuffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().debuffs, buff.name);\n                    }\n                    skills.stripBuff(type, func2, \"opponent\", false, false, plr, enemy);\n                }\n            };\n\n            const state = [\"enforce infliction\", {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"debuff\"],\n                    target: \"opponent\"\n                }\n            }, type]\n\n            if (enforced) {\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buffToApply, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\", { ignoreRes: true});\n                };\n                skills.gainActions(type, 1, \"self\", false, false, plr, enemy, true);\n                skills.applyBuff(type, func, \"self\", state, true, plr, enemy);\n            } else {\n                skills.pushMessagesToState([\"No debuffs to fuse!\"], false, \"push\");\n                skills.pushCustomFunc(type, () => {}, \"self\", state, true, plr, enemy);\n            };\n\n\n\n        },\n\n        cost: (user, target) => {\n            if (user.stamina >= 20) {\n                if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(target.debuffs, \"enforced infliction I\") == 0 || _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(target.debuffs, \"enforced infliction II\") == 0 || _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(target.debuffs, \"enforced infliction III\") == 0) {\n                    return true\n                } else {\n                    return \"Enforce limit reached!\"\n                }\n            } else { return \"Insufficient Stamina!\" }\n        }\n    },\n\n    shadow_strike: {\n        name: 'shadow strike',\n        description: \"<b>Cost: 50 stamina</b> - The user strikes the enemy from an indetectable angle, dealing high \" +\n        \" physical dark damage and causing the following effects:\" +\n        \"<br>If <u>Swift</u> is applied to the user, grants the user some mana (10% max mana), 10 SP and an additional action.\" +\n        \"<br>If <u>Stealth</u> is applied to the user, grants the user some stamina (10% max stamina), 10 SP and an additional action\" +\n        \"<br>If <u>Feeble</u> is applied to the enemy, applies <u>Emboldened</u> [+25% DEF/MDEF, 4T duration] to the user, then grants 10 SP and an additional action.\" +\n        \"<br>If <u>Weakened</u> is applied to the enemy, applies <u>Strengthened</u> [+25% ATK/MATK, 4T duration] to the user, then grants 10 SP and an additional action.\" +\n        \"<br>Otherwise, grants the user two additional actions.\" ,\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'dark',\n        def_element: 'dark',\n        off_mod: 1.1,\n        def_mod: 0.9,\n        dmg_mod: 1.6,\n        use: (user, target, type) => {\n            const skill = skills.shadow_strike // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -50, \"self\", false, false, plr, enemy, false);\n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} emerged from shadows and struck the enemy! [Shadow Strike]`, damage);\n            \n            var effectProc = false;\n\n            const swiftStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(user.buffs, \"swift\");\n            const stealthStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(user.buffs, \"stealth\");\n            const feebleStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(target.debuffs, \"feeble\");\n            const weakenedStacks = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].checkStacks(target.debuffs, \"weakened\");\n\n            if (swiftStacks == 1) {\n                effectProc = true;\n                skills.gainMana(type, user.max_mana / 10, \"self\", false, false, plr, enemy, true);\n                skills.gainSP(type, 10, \"self\", false, false, plr, enemy, true);\n                skills.gainActions(type, 1, \"self\", false, false, plr, enemy, true);\n            }\n            if (stealthStacks == 1) {\n                effectProc = true;\n                skills.gainStamina(type, user.max_stamina / 10, \"self\", false, false, plr, enemy, true);\n                skills.gainSP(type, 10, \"self\", false, false, plr, enemy, true);\n                skills.gainActions(type, 1, \"self\", false, false, plr, enemy, true);\n            }\n            if (feebleStacks == 1) {\n                effectProc = true;\n                const buff = {\n                    name: \"emboldened\",\n                    def: 0.25,\n                    mdef: 0.25,\n                    element: \"physical\",\n                    types: [\"buff\", \"ninja\"],\n                    apply_text: \" is emboldened!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                };\n                skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                skills.gainSP(type, 10, \"self\", false, false, plr, enemy, true);\n                skills.gainActions(type, 1, \"self\", false, false, plr, enemy, true);\n            }\n            if (weakenedStacks == 1) {\n                effectProc = true;\n                const buff = {\n                    name: \"strengthened\",\n                    atk: 0.25,\n                    matk: 0.25,\n                    duration: 4,\n                    element: \"physical\",\n                    types: [\"buff\", \"ninja\"],\n                    apply_text: \" is strengthened!\",\n                    max_stacks: 1,\n                };\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                };\n                skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n                skills.gainSP(type, 10, \"self\", false, false, plr, enemy, true);\n                skills.gainActions(type, 1, \"self\", false, false, plr, enemy, true);\n            }\n\n            if (!effectProc) {\n                skills.gainActions(type, 2, \"self\", false, false, plr, enemy, true);\n            }\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\", \"buff\", \"stamina_gain\", \"mana_gain\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n        },\n\n        cost: (user, target) => {\n            if (user.stamina >= 50) {\n                return true;\n            } else {\n                return \"Insufficient mana!\"\n            }\n        }\n    },\n\n\n    // ------------------------------------------------------------------- \\\\\n    // ------------------------------------------------------------------- \\\\\n\n    // REWORKED\n    //\n    // REWORKED\n    splash: {\n        name: 'splash',\n        description: 'The user splashes at the enemy with high-pressure liquid, dealing low physical water damage.',\n        off_stat: 'matk',\n        def_stat: 'mdef',\n        off_element: 'water',\n        def_element: 'water',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.8,\n        use: (user, target, type) => {\n            const skill = skills.splash // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} splashed the enemy! [Splash]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    monster_soul: {\n        name: 'monster soul',\n        description: \"The user's monster soul allows them to constantly regenerate special energy. Applies <u>Monster Soul</u>,\" +\n        \" an unstrippable 5 SP regen buff that does not fade with time. Also grants the user an additional action.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.monster_soul;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\", \"soul\"],\n                    target: \"self\"\n                }\n            }, type];\n\n            const buff = {\n                name: \"monster soul\",\n                duration: 999,\n                element: \"none\",\n                types: [\"buff\"],\n                fade: false,\n                unstrippable: true,\n                onTick: (type, user, plr, enemy) => {\n                    skills.pushMessagesToState([\"<br>The afflicted's monster soul radiates energy!\"], true, \"push\");\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy, true);\n                },\n                apply_text: \"'s monster soul radiates energy!\",\n                max_stacks: 1,\n                desc: \"The soul of a monster resides within this creature. Grants continuous SP regen.\"\n            }\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n            skills.gainActions(type, 1, \"self\", state, true, plr, enemy, true);\n\n        },\n\n        cost: (user, target) => {\n            return true\n        }\n    },\n\n    wolven_soul: {\n        name: 'wolven soul',\n        description: \"The user's monster soul allows them to constantly regenerate special energy. Applies <u>Wolven Soul</u>,\" +\n        \" an unstrippable 5 SP regen buff that does not fade with time, and grants actions to the afflicted depending on\" +\n        \" how low their health is. Use of this skill grants an additional action.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.wolven_soul;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\", \"soul\"],\n                    target: \"self\"\n                }\n            }, type];\n\n            const buff = {\n                name: \"wolven soul\",\n                duration: 999,\n                element: \"none\",\n                types: [\"buff\"],\n                fade: false,\n                unstrippable: true,\n                onTick: (type, user, plr, enemy) => {\n                    skills.pushMessagesToState([\"<br>The afflicted's wolven soul radiates energy!\"], true, \"push\");\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy, true);\n                    if (user.health / user.max_health < 0.2) {\n                        skills.gainActions(type, 2, \"self\", false, false, plr, enemy, true);\n                    }\n                    else if (user.health / user.max_health < 0.5) {\n                        skills.gainActions(type, 1, \"self\", false, false, plr, enemy, true);\n                    };\n                },\n                apply_text: \"'s wolven soul radiates energy!\",\n                max_stacks: 1,\n                desc: \"The soul of a wolf resides within this creature. Grants continuous SP regen, and strengthens the creature\"+\n                \" as their situation grows dire.\"\n            }\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n            skills.gainActions(type, 1, \"self\", state, true, plr, enemy, true);\n\n        },\n\n        cost: (user, target) => {\n            return true\n        }\n    },\n\n    kindred_soul: {\n        name: 'kindred soul',\n        description: \"The user's kindred soul allows them to constantly regenerate health. Applies <u>Kindred Soul</u>,\" +\n        \" an unstrippable 3% HP regen buff that does not fade with time. Use of this skill grants an additional action.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.kindred_soul;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\", \"soul\"],\n                    target: \"self\"\n                }\n            }, type];\n\n            const buff = {\n                name: \"kindred soul\",\n                duration: 999,\n                element: \"earth\",\n                types: [\"buff\"],\n                fade: false,\n                unstrippable: true,\n                onTick: (type, target, plr, enemy) => {\n                   //console.log(target);\n                    skills.pushMessagesToState([\"<br>The afflicted's kindred soul radiates energy!\"], true, \"push\");\n                    skills.gainHealth(type, Math.round(user.max_health * (3/100)), \"self\", false, false, plr, enemy, true);\n                },\n                apply_text: \"'s kindred soul radiates energy!\",\n                max_stacks: 1,\n                desc: \"A kindred soul resides within this creature. Grants continuous HP regen.\"\n            }\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n            skills.gainActions(type, 1, \"self\", state, true, plr, enemy, true);\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    anima_soul: {\n        name: 'anima soul',\n        description: \"The user's kindred soul allows them to constantly regenerate health and energy. Applies <u>Anima Soul</u>,\" +\n        \" an unstrippable 5% HP regen/5 SP regen buff that does not fade with time. Use of this skill grants an additional action.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.anima_soul;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\", \"soul\"],\n                    target: \"self\"\n                }\n            }, type];\n\n            const buff = {\n                name: \"anima soul\",\n                duration: 999,\n                element: \"earth\",\n                types: [\"buff\"],\n                fade: false,\n                unstrippable: true,\n                onTick: (type, target, plr, enemy) => {\n                   //console.log(target);\n                    skills.pushMessagesToState([\"<br>The afflicted's anima soul radiates energy!\"], true, \"push\");\n                    skills.gainHealth(type, Math.round(user.max_health * (5/100)), \"self\", false, false, plr, enemy, true);\n                    skills.gainSP(type, 5, \"self\", false, false, plr, enemy, true);\n                },\n                apply_text: \"'s anima soul radiates energy!\",\n                max_stacks: 1,\n                desc: \"An anima soul resides within this creature. Grants continuous HP and SP regen.\"\n            }\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n            skills.gainActions(type, 1, \"self\", state, true, plr, enemy, true);\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    rend: {\n        name: 'rend',\n        description: '<b>Cost: 20 stamina</b> -  The user slashes at the enemy viciously, dealing moderate physical damage and possibly (50%) applying <u>Bleed</u>'\n        + \" [-10% ATK, 5% HP DOT, 3T duration] to the enemy.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1.1,\n        use: (user, target, type) => {\n            const skill = skills.rend // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} claws at the enemy viciously! [Rend]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -20, \"self\", false, false, plr, enemy, false);\n\n            const buff = {\n                name: \"bleed\",\n                atk: -0.1,\n                duration: 3,\n                element: \"physical\",\n                types: [\"debuff\"],\n                apply_text: \" is bleeding!\",\n                max_stacks: 1,\n                damage: [\"percentile\", 5]\n            }\n            \n            if (damage.eva == false) {\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n            }\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\", \"debuff\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n        cost: (user, target) => {\n            if (user.stamina >= 20) { return true } else { return \"Insufficient stamina!\" };\n        }\n    },\n\n    /*\n    brutal_swipe: {\n        name: 'brutal swipe',\n        description: \"<b>Cost: 30 Stamina</b> - The user enhances their strength temporarily and attacks, dealing high weapon\" +\n        \" element damage.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 0.9,\n        dmg_mod: 1.54,\n        use: (user, target, type) => {\n            const skill = skills.brutal_swipe // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -30, \"self\", false, false, plr, enemy, false);\n\n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} swiped at the enemy brutally!`, damage);\n            \n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\"],\n                    target: \"opponent\"\n                }\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n        },\n\n        cost: (user, target) => {\n            if (user.stamina >= 30) { return true } else {return \"Insufficient Stamina!\"};\n        }\n    },\n    */\n\n    constrict: {\n        name: 'contstrict',\n        description: \"<b>Cost: 40 stamina</b> - The user uses vines to constrict the opponent. Deals moderate physical earth damage\" +\n        \" and applies <u>Constricted</u> [-10% SPD/ATK/MATK, 4T duration, 5% HP DOT, stacks to 3] to the enemy.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'earth',\n        def_element: 'earth',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1.12,\n        use: (user, target, type) => {\n            const skill = skills.constrict // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} attempts to constrict the enemy with vines! [Constrict]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -40, \"self\", false, false, plr, enemy, false);\n\n            const debuff = {\n                name: \"constricted\",\n                duration: 4,\n                matk: -0.1,\n                atk: -0.1,\n                speed: -0.1,\n                element: \"earth\",\n                types: [\"debuff\"],\n                damage: [\"percentile\", 5],\n                apply_text:\" is constricted!\",\n                max_stacks: 3\n            };\n            \n            if (damage.eva == false) {\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(debuff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n            }\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\", \"debuff\"],\n                    target: \"opponent\"\n                }\n            }\n            \n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n        cost: (user, target) => {\n            if (user.stamina >= 40) { return true } else { return \"Insufficient stamina!\" };\n        }\n    },\n\n    nature_healing: {\n        name: 'nature healing',\n        description: \"<b>Cost: 25 MP</b> - The user employs simple healing magic to recover from damage. Heals the user\" +\n        \" slightly based on their MDEF.\",\n        off_stat: 'mdef',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0.7,\n        def_mod: 0,\n        dmg_mod: 1.2,\n        use: (user, target, type) => {\n            const skill = skills.nature_healing // need to change for each skill\n            const damage = skills.calcDamage(user, user, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod, {\n                canCrit: false, canEvade: false\n            });\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.pushMessagesToState([`${user.name} enveloped themselves in healing magic! [Nature Healing]`], true, \"unshift\");\n            \n            skills.gainMana(type, -25, \"self\", false, false, plr, enemy, false);\n\n            const state = [skill.name, {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"heal\"],\n                    target: \"self\"\n                }\n            }, type]\n\n            skills.gainHealth(type, damage.damage, \"self\", state, true, plr, enemy, true);\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 25) { return true } else { return \"Insufficient Mana!\" };\n        }\n    },\n\n    lesser_anima_healing: {\n        name: 'lesser anima healing',\n        description: \"<b>Cost: 15 MP</b> - The user employs fairly powerful healing magic to recover from damage. Heals the user\" +\n        \" slightly based on their MDEF, and applies <u>Lower Anima</u> [+20% ATK/DEF/MATK/MDEF, stacks to 3, 3T duration] to the user.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0.62,\n        def_mod: 0,\n        dmg_mod: 1,\n        use: (user, target, type) => {\n            const skill = skills.lesser_anima_healing // need to change for each skill\n            const damage = skills.calcDamage(user, user, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod, {\n                canCrit: false, canEvade: false\n            });\n            \n            skills.pushMessagesToState([`${user.name} enveloped themselves in healing magic! [Lesser Anima Healing]`], true, \"unshift\");\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const buff = {\n                name: \"lower anima\",\n                duration: 3,\n                def: 0.2,\n                mdef: 0.2,\n                matk: 0.2,\n                mdef: 0.2,\n                element: \"earth\",\n                types: [\"buff\"],\n                apply_text: \" is blessed by healing magic!\",\n                max_stacks: 2,\n            };\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n\n            const state = [skill.name, {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"heal\"],\n                    target: \"self\"\n                }\n            }, type]\n\n            skills.gainHealth(type, damage.damage, \"self\", state, true, plr, enemy, true);\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    forest_curse: {\n        name: 'forest curse',\n        description: \"<b>Cost: 40 Stamina</b> - \" +\n        \"The user turns the mystic energy of the forest against their enemy and uses it to strike them while\" +\n        \" afflicting them with several curses. Deals moderate magical dark damage and attemps to apply <u>Forest Curse</u>\" +\n        \" [-10% ATK/MATK/DEF/MDEF/SPD, stacks to 10, 5T duration] five times at a 25% chance each attempt. This skill cannot miss.\",\n        off_stat: 'matk',\n        def_stat: 'mdef',\n        off_element: 'dark',\n        def_element: 'dark',\n        off_mod: 1.093,\n        def_mod: 1.02,\n        dmg_mod: 0.98,\n        use: (user, target, type) => {\n            const skill = skills.forest_curse // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod, {\n                canEvade: false\n            });\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} afflicts the enemy with the curse of the forest! [Forest Curse]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const debuff = {\n                name: \"forest curse\",\n                duration: 5,\n                matk: -0.1,\n                atk: -0.1,\n                speed: -0.1,\n                def: -0.1,\n                mdef: -0.1,\n                element: \"dark\",\n                types: [\"debuff\"],\n                apply_text:\" has been cursed by the forest!\",\n                max_stacks: 10\n            };\n            \n            if (damage.eva == false) {\n                for (var i = 0; i < 5; i++) {\n                    const func = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(debuff, 25, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                    };\n                    skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n                }\n\n            }\n\n            const stateDamage = {\n                damage: damage,\n                type: [\"attack\", \"debuff\"],\n                target: \"opponent\"\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, stateDamage, type], true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    anima_bark: {\n        name: 'anima bark',\n        description: \"The user enforces their body with mystical energy, applying <u>Anima Bark</u> [+30% DEF/MDEF, -10 all\"+\n        \" elemental defences, unstrippable and does not fade with time, 999T duraton] to themselves. Also grants an\" +\n        \" additional action.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.anima_bark;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    target: \"self\",\n                    type: [\"buff\"]\n                }\n            }, type];\n\n            const buff = {\n                name: \"anima bark\",\n                def: 0.3,\n                mdef: 0.3,\n                duration: 999,\n                fade: false,\n                unstrippable: true,\n                element: \"earth\",\n                elemental: {\n                    offence: {},\n                    defence: { fire: -10, earth: -10, water: -10, wind: -10, tunder: -10, light: -10, dark: -10, physical: -10}\n                },\n                types: [\"buff\"],\n                apply_text: \"'s bark is reinforced mystically!'\",\n                max_stacks: 1\n            }\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.gainActions(type, 1, \"self\", false, false, plr, enemy, true);\n            skills.applyBuff(type, func, \"self\", state, true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    greater_anima_bark: {\n        name: 'greater anima bark',\n        description: \"The user enforces their body with mystical energy, applying <u>Greater Anima Bark</u> [+65% DEF/MDEF, -15 all\"+\n        \" elemental defences, unstrippable and does not fade with time, 999T duraton] to themselves. Also grants an\" +\n        \" additional action.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.greater_anima_bark;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    target: \"self\",\n                    type: [\"buff\"]\n                }\n            }, type];\n\n            const buff = {\n                name: \"greater anima bark\",\n                def: 0.65,\n                mdef: 0.65,\n                duration: 999,\n                fade: false,\n                unstrippable: true,\n                element: \"earth\",\n                elemental: {\n                    offence: {},\n                    defence: { fire: -15, earth: -15, water: -15, wind: -15, tunder: -15, light: -15, dark: -15, physical: -15}\n                },\n                types: [\"buff\"],\n                apply_text: \"'s bark is reinforced mystically!'\",\n                max_stacks: 1\n            }\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.gainActions(type, 1, \"self\", false, false, plr, enemy, true);\n            skills.applyBuff(type, func, \"self\", state, true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    absolute_purge: {\n        name: 'absolute purge',\n        description: \"<b>Cost: 10 mana</b> - The user attempts to purge all power from the enemy, removing all strippable\" +\n        \" buffs from them.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.absolute_purge;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainMana(type, -10, \"self\", false, false, plr, enemy, false);\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"debuff\"],\n                    target: \"opponent\"\n                }\n            }, type];\n\n            const buffs = JSON.parse(JSON.stringify(target.buffs)); // generating a copy to remove buffs from\n            while (buffs.length > 0) {\n                var random = Math.round(Math.random() * buffs.length) - 1;\n                if (random < 0) { random = 0 } // dont want negative index\n                if (buffs[random].hasOwnProperty(\"unstrippable\")) {\n                    buffs.splice(random, 1);\n                } else {\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs, buffs[random].name);\n                    }\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    buffs.splice(random, 1);\n                }\n            }\n\n            skills.pushCustomFunc(type, () => { }, \"self\", state, true, plr, enemy);\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 10) { return true } else { return false }\n        }\n    },\n\n    absolute_cleanse: {\n        name: 'absolute cleanse',\n        description: \"<b>Cost: 10 mana</b> - The user attempts to purge all weaknesses from themselves, removing from\" +\n        \" themselves all strippable debuffs.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.absolute_cleanse;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainMana(type, -10, \"self\", false, false, plr, enemy, false);\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"debuff\"],\n                    target: \"opponent\"\n                }\n            }, type];\n\n            const buffs = JSON.parse(JSON.stringify(user.debuffs)); // generating a copy to remove buffs from\n            while (buffs.length > 0) {\n                var random = Math.round(Math.random() * buffs.length) - 1;\n                if (random < 0) { random = 0 } // dont want negative index\n                if (buffs[random].hasOwnProperty(\"unstrippable\")) {\n                    buffs.splice(random, 1);\n                } else {\n                    const func2 = () => {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff(type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().debuffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().debuffs, buffs[random].name);\n                    }\n                    skills.stripBuff(type, func2, \"self\", false, false, plr, enemy);\n                    buffs.splice(random, 1);\n                }\n            };\n\n            skills.pushCustomFunc(type, () => { }, \"self\", state, true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 10) { return true } else { return false }\n        }\n    },\n\n    forest_rupture: {\n        name: 'forest rupture',\n        description: \"The user calls upon the forest to destroy the enemy, dealing very high physical earth damage.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'earth',\n        def_element: 'earth',\n        off_mod: 1.12,\n        def_mod: 0.87,\n        dmg_mod: 1.9,\n        use: (user, target, type) => {\n            const skill = skills.forest_rupture // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} called upon the forest to destroy their enemy! [Forest Rupture]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const stateDamage = {\n                damage: damage,\n                type: [\"attack\"],\n                target: \"opponent\"\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, stateDamage, type], true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    poison_claws: {\n        name: 'poison claws',\n        description: \"<b>Cost: 12 mana</b> - The user creates a wound with sharp poisonous claws. The poison seeps into the enemy, applying\" +\n        \" <u>Viridian Toxin</u> [-15% SPD, 5% HP DOT, 3T duration, stacks to 3]\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1.1,\n        use: (user, target, type) => {\n            const skill = skills.poison_claws // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} lashes out with poisonous claws! [Poison Claws]`, damage);\n            \n\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const stateDamage = {\n                damage: damage,\n                type: [\"attack\"],\n                target: \"opponent\"\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", false, false, true, plr, enemy);\n\n            const buff = {\n                name: \"viridian toxin\",\n                speed: -0.15,\n                duration: 3,\n                element: \"earth\",\n                types: [\"debuff\"],\n                apply_text: \" is envenomed!\",\n                max_stacks: 3,\n                damage: [\"percentile\", 5]\n            }\n\n            if (damage.eva == false) {\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                skills.applyBuff(type, func, \"opponent\", [skill.name, stateDamage, type], true, plr, enemy);\n            }\n\n        },\n        cost: (user, target) => {\n            if (user.mana >= 12) { return true } else { return \"Insufficient mana!\" };\n        }\n    },\n\n    deep_envenom: {\n        name: 'deep_envenom',\n        description: \"<b>Cost: 7 mana</b> - The user uses a special liquid to enhance the potency of venoms in the body of the\" +\n        \" target. Deals moderate physical damage and applies an additional stack of any DOT debuffs the enemy has applied\" +\n        \" (where possible) and extends their duration by 3 turns (buff copy application has base 999% apply chance). Also\" +\n        \" applies <u>Prepared</u> [+25% ATK, 3T duration] to the user.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.7,\n        use: (user, target, type) => {\n            const skill = skills.deep_envenom // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} attempts to deeply envenom their enemy! [Deep Envenom]`, damage);\n            \n\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const stateDamage = {\n                damage: damage,\n                type: [\"attack\", \"debuff\"],\n                target: \"opponent\"\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", false, false, true, plr, enemy);\n\n            if (damage.eva == false) {\n                const buffs = target.debuffs;\n                buffs.forEach(buff => {\n                    if (buff.hasOwnProperty(\"damage\")) {\n                        if (buff.damage[1] > 0) {\n                            // then extend duration by 3 and apply a new stack\n                            const customFunc = () => { buff.duration += 3; };\n                            skills.pushMessagesToState([`Debuff ${buff.name} extended by 3 turns!`], false, \"push\");\n                            skills.pushCustomFunc(type, customFunc, \"opponent\", false, false, plr, enemy, false);\n\n                            const buffCopy = Object(_baseModel__WEBPACK_IMPORTED_MODULE_4__[\"copy\"])(buff);\n                            const func = () => {\n                                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buffCopy, 999, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                            };\n                            skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n                        }\n                    }\n                })\n            }\n\n            const buff = {\n                name: \"prepared\",\n                duration: 3,\n                atk: 0.25,\n                element: \"physical\",\n                types: [\"buff\"],\n                apply_text: \" is prepared!\",\n                max_stacks: 1,\n            };\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n\n            skills.pushCustomFunc(type, () => {}, \"self\", [skill.name, stateDamage, type], true, plr, enemy, false);\n\n        },\n        \n        cost: (user, target) => {\n            if (user.mana >= 7) { return true } else { return \"Insufficient mana!\" };\n        }\n    },\n\n    killing_blow: {\n        name: 'killing blow',\n        description: \"Having completed preparations, the user strikes to finish their target. Deals very high physical damage.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 1.01,\n        def_mod: 0.83,\n        dmg_mod: 2.56,\n        use: (user, target, type) => {\n            const skill = skills.killing_blow // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} attempts to finish off their enemy! [Killing Blow]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const stateDamage = {\n                damage: damage,\n                type: [\"attack\"],\n                target: \"opponent\"\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, stateDamage, type], true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    malice: {\n        name: 'malice',\n        description: \"<b>Cost: 50 Stamina</b> - The user transforms their malice into a curse that afflicts the enemy.\" +\n        \" Deals low magical dark damage and inflicts <u>Malice</u> [-200% ATK/DEF/MATK/MDEF/SPEED, 20T duration] upon the enemy.\",\n        off_stat: 'matk',\n        def_stat: 'mdef',\n        off_element: 'dark',\n        def_element: 'dark',\n        off_mod: 0.9,\n        def_mod: 1,\n        dmg_mod: 0.423,\n        use: (user, target, type) => {\n            const skill = skills.malice // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} curses the enemy with their malice! [Malice]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -50, \"self\", false, false, plr, enemy, false);\n\n            const debuff = {\n                name: \"malice\",\n                duration: 20,\n                atk: -2,\n                def: -2,\n                mdef: -2,\n                matk: -2,\n                mdef: -2,\n                speed: -2,\n                element: \"dark\",\n                elemental: {\n                    offence: {},\n                    defence: {\n                        all: 100\n                    }\n                },\n                types: [\"debuff\"],\n                apply_text:\" is afflicted with a crushing despair...\",\n                max_stacks: 1\n            };\n            \n            if (damage.eva == false) {\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(debuff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n            }\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\", \"debuff\"],\n                    target: \"opponent\"\n                }\n            }\n            \n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n        cost: (user, target) => {\n            if (user.stamina >= 50) { return true } else { return \"Insufficient Stamina!\" };\n        }\n    },\n\n    empoison: {\n        name: 'empoison',\n        description: \"<b>Cost: 10 Stamina</b> - The user uses a small bomb to infect the target with a slow-acting, but potent poison. Deals very low physical damage and applies <u>Empoisoned</u> [1% HP DOT, 50T duration, unstrippable] to the enemy. Cannot crit or be evaded.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 0.25,\n        def_mod: 1.15,\n        dmg_mod: 0.5,\n        use: (user, target, type) => {\n            const skill = skills.empoison // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod, { canEvade: false, canCrit: false});\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} empoisons the enemy! [Empoison]`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -10, \"self\", false, false, plr, enemy, false);\n\n            const buff = {\n                name: \"empoisoned\",\n                duration: 50,\n                element: \"physical\",\n                types: [\"debuff\"],\n                apply_text: \" is empoisoned!\",\n                damage: [\"percentile\", 1],\n                max_stacks: 1,\n                unstrippable: true\n            };\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\", { ignoreRes: true });\n            };\n            skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n\n            const damageState = {\n                damage: damage,\n                additionalInfo: {\n                    type: [\"attack\", \"debuff\"],\n                    target: \"opponent\"\n                }\n            }\n            \n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, damageState, type], true, plr, enemy);\n\n        },\n        cost: (user, target) => {\n            if (user.stamina >= 10) { return true } else { return \"Insufficient Stamina!\" };\n        }\n    },\n\n    soul_drain: {\n        name: 'soul drain',\n        description: \"The user attempts to drain their enemy of all willpower. Removes all SP from the target and gives it all to the user.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.soul_drain // need to change for each skill\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.pushMessagesToState([`${user.name} drains the soul of the enemy!`], true, \"unshift\");\n\n            const state = [\n                skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"special\"],\n                    target: \"opponent\" \n                }\n            }, type];\n\n\n            const spAmount = target.sp;\n            skills.gainSP(type, spAmount * -1, \"opponent\", false, false, plr, enemy, true);\n            skills.gainSP(type, spAmount, \"self\", state, true, plr, enemy, true);\n\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n    halycon_enchantment: {\n        name: 'halycon enchantment',\n        description: `<b>Cost: 10 Mana</b> - The user enchants themselves strongly with defensive magic, applying <u>Halycon Enchantment</u> [-20 all defence, +25% DEF/MDEF, 3T duration] to themselves.`,\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.halycon_enchantment;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainMana(type, -10, \"self\", false, false, plr, enemy, false);\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\"],\n                    target: \"self\"\n                }\n            }, type];\n\n            const buff = {\n                name: \"halycon enchantment\",\n                def: 0.25,\n                mdef: 0.25,\n                elemental:  { offence: {}, defence: { all: -20 } },\n                duration: 4,\n                element: \"light\",\n                types: [\"buff\"],\n                apply_text: \" is protected by a halycon enchantment!\",\n                max_stacks: 1\n            }\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", state, true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 10) { return true } else { return \"Insufficient Mana!\"};\n        }\n    },\n\n    final_haste: {\n        name: 'final haste',\n        description: `The user grants themselves a final burst of energy. Applies <u>Final Haste</u> [+1 action at the start of every turn, unstrippable and does not fade with time] to the user.`,\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const skill = skills.final_haste;\n\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const state = [skill.name, {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"buff\"],\n                    target: \"self\"\n                }\n            }, type];\n\n            const buff = {\n                name: \"final haste\",\n                duration: 999,\n                element: \"physical\",\n                types: [\"buff\"],\n                apply_text: \" is suddenly bursting with energy!\",\n                unstrippable: true,\n                fade: false,\n                max_stacks: 1,\n                onTick: (type, user, plr, enemy) => {\n                    skills.pushMessagesToState([\"<br>[Final Haste]\"], true, \"push\");\n                    skills.gainActions(type, 1, \"self\", false, false, plr, enemy, true);\n                },\n            }\n            const func = () => {\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", state, true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 10) { return true } else { return \"Insufficient Mana!\"};\n        }\n    },\n\n    invoke_cataclysm: { // don't know if works, haven't tested. Skill for wanderer\n        name: 'invoke cataclsym',\n        description: \"<b>Cost: 40 Stamina</b> - \" +\n        \"The user calls upon the power of the Demon sword, Cataclysm to strike their enemies. Deals one hit of high\" +\n        \" physical fire damage and one hit of high magical dark damage before applying <u>Catalysis</u> [-50% DEF/MDEF, 3T\" +\n        \" duration] to the enemy.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'dark',\n        def_element: 'dark',\n        off_mod: 1.123,\n        def_mod: 1.06,\n        dmg_mod: 1.78,\n        use: (user, target, type) => {\n            const skill = skills.invoke_cataclysm // need to change for each skill\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} calls upon the power of Cataclysm!`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            skills.prepareAttackMessage(user.name, target.name, ``, damage);\n            skills.dealDamage(type, damage.damage, false, false, plr, enemy);\n            const damage2 = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, \"fire\", \"fire\", skill.off_mod, skill.def_mod, skill.dmg_mod);\n            skills.prepareAttackMessage(user.name, target.name, ``, damage);\n            skills.dealDamage(type, damage2.damage, \"opponent\", false, false, plr, enemy);\n\n            const debuff = {\n                name: \"catalysis\",\n                duration: 3,\n                def: -0.5,\n                mdef: -0.5,\n                element: \"dark\",\n                types: [\"debuff\"],\n                apply_text:\" has been afflicted by the power of Cataclysm!\",\n                max_stacks: 1\n            };\n            \n            if (damage.eva == false || damage2.eva == false) {\n                const func = () => {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(debuff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                };\n                skills.applyBuff(type, func, \"opponent\", false, false, plr, enemy);\n\n            }\n\n            const stateDamage = {\n                damage: damage,\n                type: [\"attack\", \"debuff\"],\n                target: \"opponent\"\n            }\n\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n    \n    // NOT REWORKED\n    //\n    // NOT REWORKED\n\n    guard_break: {\n        name: 'guard break',\n        description: '<b>Cost: 35 stamina</b> - The user strikes the enemy with a blunt edge, dealing low physical weapon' \n        + ' element damage but possibly with a 75% chance to apply <u>Guard Broken</u> [-10% DEF, 5T duration, stacks to 3].',\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1,\n        use: (user, target, type) => {\n            user.stamina = user.stamina - 35; // COST OF USING THE SKILL\n            const skill = skills.guard_break // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            const message = skills.prepareAttackMessage(user.name, target.name, `<Br>${user.name} struck the enemy with a blunt edge!`, damage);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                target.health -= damage.damage;\n                \n                const buff = {\n                    name: \"guard broken\",\n                    def: -0.1,\n                    duration: 5,\n                    element: \"physical\",\n                    types: [\"debuff\"],\n                    apply_text: \"'s guard has been broken!\",\n                    max_stacks: 3,\n                    elemental: {\n                        offence: {\n\n                        },\n                        defence: {\n                            \n                        }\n                    }\n                }\n                // if player is needed to apply buffs, instead of user/target use ** (type == 'player' ? Combat.getPlayer() : user) **\n                if (damage.eva == false) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 75, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                }\n                \n                \n                /* ^ ternary used to get playerFighter if the player is having the buff applied, since otherwise we are applying the buff\n                to getPlayerAdd which is pointless */\n                \n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n               \n                skills.finish(\"guard_break\", damage, type);\n               \n            })\n        },\n        cost: (user, target) => {\n            if (user.stamina >= 35) { return true } else { return \"Insufficient stamina!\" };\n        }\n    },\n\n    rush_attack: {\n        name: 'rush attack',\n        description: '<b>Cost: 10 stamina</b> - The user strikes the enemy several times, dealing 3 hits of low physical weapon element damage.',\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.5,\n        use: (user, target, type) => {\n            const skill = skills.rush_attack // need to change for each skill\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            skills.gainStamina(type, -10, \"self\", false, false, plr, enemy, false);\n\n            skills.pushMessagesToState([`${user.name} lashed out at their enemy!<br>`], true, \"unshift\");\n\n            const stateDamage = {\n                damage: [],\n                type: [\"attack\", \"multihit\"],\n                target: \"opponent\"\n            }\n\n            for (var i = 0; i < 3; i++) {\n                const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n                skills.prepareAttackMessage(user, target, \"\", damage, \"push\", false);\n                skills.dealDamage(type, damage.damage, \"opponent\", false, false, plr, enemy);\n                stateDamage.damage.push(damage);\n                \n            }\n\n            skills.pushCustomFunc(type, () => {}, \"self\", [skill.name, stateDamage, type], true, plr, enemy);\n\n        },\n        cost: (user, target) => {\n            if (user.stamina >= 10) { return true } else { return \"Insufficient stamina!\" };\n        }\n    },\n\n    health_potion: {\n        name: 'health potion',\n        description: \"Drink a health potion, recovering 20% of one's health.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            user.mana -= 30; // cost of using the skill\n            const skill = skills.attack // need to change for each skill\n            const damage = {\n                crit: false,\n                eva: false,\n                damage: Math.round(user.health / 4) * -1\n            }\n            const message = [[`${user.name} Drank a health potion!`, 1],[`recovered ${damage.damage} HP!`, 1]]\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                user.health -= damage.damage;\n                if (user.health > user.max_health) { user.health = user.max_health};\n\n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n        \n                skills.finish(\"health_potion\", damage, type);\n            })\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 30) { return true } else {return 'Insufficient mana!'};\n        }\n    },\n\n    camoflague: {\n        name: 'camoflague',\n        description: \"<b>Cost: 12 mana</b> - The user envelops themselves in a camoflague that makes them hard to see and react to. Applies\" +\n        \" <u>Camoflague</u> [+30% evasion, +70% resistance, +30% SPD, 2T duration].\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            user.mana -= 12;\n            const damage = {\n                damage: 0,\n                crit: false,\n                eva: false\n            }\n            const message = [[`<br>${user.name} camoflagues themselves.`, 1]];\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                target.health -= damage.damage;\n\n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n\n                const buff = {\n                    name: \"camoflague\",\n                    evasion: 0.3,\n                    resistance: 70,\n                    speed: 0.3,\n                    duration: 2,\n                    element: \"physical\",\n                    types: [\"buff\"],\n                    apply_text: \" is camoflagued!\",\n                    max_stacks: 1\n                }\n                // if player is needed to apply buffs, instead of user/target use ** (type == 'player' ? Combat.getPlayer() : user) **\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                /* ^ ternary used to get playerFighter if the player is having the buff applied, since otherwise we are applying the buff\n                to getPlayerAdd which is pointless */\n\n\n                skills.finish(\"camoflague\", damage, type);\n\n            })\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 12) { return true } else { return \"Insufficient mana!\"}\n        }\n    },\n\n    engulf: {\n        name: 'engulf',\n        description: \"<b>Cost: 10 mana</b> - Absorb the enemy's power. Deals low physical damage and removes all buffs from the enemy. For each buff\"+\n        \" removed, applies <u>Empowered</u> [+10% ATK/DEF/MATK/MDEF/SPD, 2T duration] to the user.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.5,\n        use: (user, target, type) => {\n            const skill = skills.engulf // need to change for each skill\n            user.mana -= 10;\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            const message = skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} engulfs the enemy!`, damage);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                target.health -= damage.damage;\n\n                const buff = {\n                    name: \"empowered\",\n                    atk: 0.1,\n                    matk: 0.1,\n                    mdef: 0.1,\n                    def: 0.1,\n                    speed: 0.1,\n                    duration: 2,\n                    element: \"dark\",\n                    types: [\"buff\"],\n                    apply_text: \" is empowered!\",\n                    max_stacks: 99,\n                }\n\n                // buff strip\n                if (damage.eva == false) {\n                    const buffs = JSON.parse(JSON.stringify(target.buffs)); // generating a copy to remove buffs from\n                    while (buffs.length > 0) {\n                        var random = Math.round(Math.random() * buffs.length) - 1;\n                        if (random < 0) { random = 0 } // dont want negative index\n                        if (buffs[random].hasOwnProperty(\"unstrippable\")) {\n                            buffs.splice(random, 1);\n                        } else {\n                            _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff((type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs), buffs[random].name);\n                            _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? user : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy()), \"buffs\");\n                            buffs.splice(random, 1);\n                        }\n                    }\n                }\n\n\n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n        \n                skills.finish(\"engulf\", damage, type);\n            })\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 10) { return true } else { return \"Insufficient SP!\"};\n        }\n    },\n\n    dark_pact: {\n        name: 'dark pact',\n        description: \"<b>Cost: 18 mana</b> - The user calls upon their pact with the dark forest to strengthen them. At the cost of\" +\n        \" 5% HP, applies three stacks each of standard ATK/MATK/SPEED buff with increased duration [+10% ATK/MATK/SPEED, 5+3T duration] to the user.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            //user.hp -= Math.round(user.max_health / 10);\n            const damage = {\n                damage: user.max_health / 20,\n                crit: false,\n                eva: false,\n                note: \"self-inflicted damage\"\n            }\n            const message = [[`<br>${user.name} forms a covenant with darkness..`, 1],\n                            [`<br>${user.name} took damage! (${user.max_health / 20})`]];\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                user.health -= damage.damage;\n\n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n\n                const buff = {...commonBuffs.matkup};\n                buff.duration = 6;\n                const buff2 = {...commonBuffs.atkup};\n                buff2.duration = 6;\n                const buff3 = {...commonBuffs.spdup};\n                buff3.duration = 6;\n\n\n                // if player is needed to apply buffs, instead of user/target use ** (type == 'player' ? Combat.getPlayer() : user) **\n                for (var i = 0; i < 3; i++) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff2, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff3, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                }\n\n                /* ^ ternary used to get playerFighter if the player is having the buff applied, since otherwise we are applying the buff\n                to getPlayerAdd which is pointless */\n\n\n                skills.finish(\"dark_pact\", damage, type);\n\n            })\n\n        },\n\n        cost: (user, target) => {\n            if (user.health > user.max_health / 20 && user.mana >= 18) { return true } else { return \"Insufficient health/mana!\"}\n        }\n    },\n\n    dark_howl: {\n        name: 'dark howl',\n        description: \"<b>Cost: 15 mana</b> - The user lets out a howl imbued with malevolent magic. Deals low magical dark damage and has a 40% chance each to apply\" +\n        \" <u>Fear</u> [-100% evasion, -20% SPD, -10% ATK/DEF/MATK/MDEF], <u>Dark Curse</u> [+70% dark defence], and <u>Elemental Weaken</u>\" +\n        \" [-10% all elemental offences]. Each debuff lasts 2 turns and stacks twice.\",\n        off_stat: 'matk',\n        def_stat: 'mdef',\n        off_element: 'dark',\n        def_element: 'dark',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 0.6,\n        use: (user, target, type) => {\n            user.mana = user.mana - 15; // COST OF USING THE SKILL\n            const skill = skills.dark_howl// need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            const message = skills.prepareAttackMessage(user.name, target.name, `<Br>${user.name} lets out a dark howl!`, damage);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                target.health -= damage.damage;\n                \n                const debuff = {\n                    name: \"fear\",\n                    duration: 2,\n                    def: -0.1,\n                    mdef: -0.1,\n                    matk: -0.1,\n                    atk: -0.1,\n                    speed: -0.2,\n                    evasion: -1,\n                    element: \"dark\",\n                    types: [\"debuff\"],\n                    apply_text:\" is rapt with fear!\",\n                    max_stacks: 2\n                }\n\n                const debuff2 = {\n                    name: \"dark curse\",\n                    element: \"dark\",\n                    types: [\"debuff\"],\n                    apply_text:\" is cursed by darkness!\",\n                    elemental: {\n                        defence: {\n                            dark: 70\n                        },\n                        offence: {}\n                    },\n                    duration: 2,\n                    max_stacks: 2\n                }\n\n                const debuff3 = {\n                    name: \"elemental weaken\",\n                    element: \"dark\",\n                    types: [\"debuff\"],\n                    apply_text:\"'s elemental strength has decreased!'\",\n                    elemental: {\n                        defence: {},\n                        offence: {\n                            physical: -10,\n                            fire: -10,\n                            water: -10,\n                            earth: -10,\n                            wind: -10,\n                            thunder: -10,\n                            dark: -10,\n                            light: -10\n                        }\n                    },\n                    duration: 2,\n                    max_stacks: 2\n                }\n\n                // if player is needed to apply buffs, instead of user/target use ** (type == 'player' ? Combat.getPlayer() : user) **\n                if (damage.eva == false) {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(debuff, 40, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(debuff2, 40, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(debuff3, 40, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                }\n                /* ^ ternary used to get playerFighter if the player is having the buff applied, since otherwise we are applying the buff\n                to getPlayerAdd which is pointless */\n                \n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n               \n                skills.finish(\"dark_howl\", damage, type);\n               \n            })\n        },\n        cost: (user, target) => {\n            if (user.mana >= 15) { return true } else { return \"Insufficient mana!\" };\n        }\n    },\n\n    nox_curse: {\n        name: 'nox curse',\n        description: \"<b>Cost: 20 mana</b> - The user curses the opponent, dealing moderate dark magical damage and removing all debuffs. For each debuff\" +\n        \" previously applied, applies a stack of <u>Nox Curse</u> to the enemy [15% HP DOT, 2T duration, stacks to 99].\" +\n        \" <u>Nox Curse</u> has a base 300% apply chance. This skill's effects will proc even if the skill misses.\",\n        off_stat: 'matk',\n        def_stat: 'mdef',\n        off_element: 'dark',\n        def_element: 'dark',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1.15,\n        use: (user, target, type) => {\n            user.mana = user.mana - 10; // COST OF USING THE SKILL\n            const skill = skills.nox_curse // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            const message = skills.prepareAttackMessage(user.name, target.name, `<Br>${user.name} curses the opponent!`, damage);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                target.health -= damage.damage;\n                \n                const debuff = {\n                    name: \"nox curse\",\n                    duration: 2,\n                    damage: [\"percentile\", 15],\n                    element: \"dark\",\n                    types: [\"debuff\"],\n                    apply_text:\" is cursed by the shadows...\",\n                    max_stacks: 99\n                }\n\n                const debuffs = JSON.parse(JSON.stringify(target.debuffs)); // generating a copy to remove buffs from\n                while (debuffs.length > 0) {\n                    var random = Math.round(Math.random() * debuffs.length) - 1;\n                    if (random < 0) { random = 0 } // dont want negative index\n                    if (debuffs[random].hasOwnProperty(\"unstrippable\")) {\n                        debuffs.splice(random, 1);\n                    } else {\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff((type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().debuffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().debuffs), debuffs[random].name);\n                        _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(debuff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy()), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                        debuffs.splice(random, 1);\n                    }\n                }\n                \n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n               \n                skills.finish(\"nox curse\", damage, type);\n               \n            })\n        },\n        cost: (user, target) => {\n            if (user.mana >= 20) { return true } else { return \"Insufficient mana!\" };\n        }\n    },\n // ---\n\n    boar_rush: {\n        name: 'boar rush',\n        description: 'The user rushes at the enemy and strikes them powerfully. Deals notable physical damage and applies' +\n        ' <u>Boar Rush</u> [+10% SPD, 4T duration, stacks to 3] to the user.',\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1.2,\n        use: (user, target, type) => {\n            const skill = skills.boar_rush // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            const message = skills.prepareAttackMessage(user.name, target.name, `<Br>${user.name} rushed at the enemy!`, damage);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                target.health -= damage.damage;\n\n                const buff = {\n                    name: \"boar rush\",\n                    duration: 4,\n                    speed: 0.1,\n                    element: \"physical\",\n                    types: [\"buff\"],\n                    apply_text:\"'s speed increased!\",\n                    max_stacks: 3\n                }\n\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? user : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy()), \"buffs\");\n\n                if (type == 'player') {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().sp += 5;\n                    if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().sp > _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().max_sp) { _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().sp > _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().max_sp };\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${user.name} gained 5 SP!`)\n                } else {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().sp += 5;\n                    if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().sp > _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().max_sp) { _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().sp > _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().max_sp };\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${user.name} gained 5 SP!`) \n                }\n                \n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n            \n                skills.finish(\"boar_rush\", damage, type);\n            \n            })\n        },\n        cost: (user, target) => {\n            { return true }\n        }\n    },\n\n    boar_strike: {\n        name: 'boar strike',\n        description: 'The user strikes the enemy with their axe. Deals above average physical damage and applies <u>Boar Strike</u>' +\n        ' [+10% ATK, 4T duration, stacks to 3] to the user.',\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1.4,\n        use: (user, target, type) => {\n            const skill = skills.boar_strike // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            const message = skills.prepareAttackMessage(user.name, target.name, `<Br>${user.name} crashed their axe into the enemy!`, damage);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                target.health -= damage.damage;\n\n                const buff = {\n                    name: \"boar strike\",\n                    duration: 4,\n                    atk: 0.1,\n                    element: \"physical\",\n                    types: [\"buff\"],\n                    apply_text:\"'s attack increased!\",\n                    max_stacks: 3\n                }\n\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? user : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy()), \"buffs\");\n\n                if (type == 'player') {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().sp += 5;\n                    if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().sp > _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().max_sp) { _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().sp > _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().max_sp };\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${user.name} gained 5 SP!`)\n                } else {\n                    _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().sp += 5;\n                    if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().sp > _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().max_sp) { _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().sp > _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().max_sp };\n                    _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessage\"](`${user.name} gained 5 SP!`) \n                }\n                \n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n            \n                skills.finish(\"boar_strike\", damage, type);\n            \n            })\n        },\n        cost: (user, target) => {\n            { return true }\n        }\n    },\n    \n    flare_impact: {\n        name: 'flare impact',\n        description: '<b>Cost: 20 SP</b> - The user ignites their axe and smashes the enemy, dealing high physical fire damage' +\n        ' and applying <u>Burning</u> [3% HP DOT, 5T duration] to the enemy.',\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'fire',\n        def_element: 'fire',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 2.1,\n        use: (user, target, type) => {\n            user.sp = user.sp - 20; // COST OF USING THE SKILL\n            const skill = skills.flare_impact // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            const message = skills.prepareAttackMessage(user.name, target.name, `<Br>${user.name} ignited their axe and smashed the enemy!`, damage);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                target.health -= damage.damage;\n                \n                const buff = {\n                    name: \"burning\",\n                    duration: 5,\n                    element: \"fire\",\n                    types: [\"debuff\"],\n                    apply_text: \" is burning!\",\n                    damage: [\"percentile\", 3],\n                    max_stacks: 1,\n                }\n                // if player is needed to apply buffs, instead of user/target use ** (type == 'player' ? Combat.getPlayer() : user) **\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy() : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer()), \"debuffs\");\n                \n                \n                /* ^ ternary used to get playerFighter if the player is having the buff applied, since otherwise we are applying the buff\n                to getPlayerAdd which is pointless */\n                \n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n               \n                skills.finish(\"flare_impact\", damage, type);\n               \n            })\n        },\n        cost: (user, target) => {\n            if (user.sp >= 20) { return true } else { return \"Insufficient mana!\" };\n        }\n    },\n\n    ignis_destroyer: {\n        name: 'ignis destroyer',\n        description: 'The user strikes the enemy with a great fireball and a flaming axe simulatenously, dealing massive fire' +\n        ' physical damage.',\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'fire',\n        def_element: 'fire',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 3.2,\n        use: (user, target, type) => {\n            const skill = skills.ignis_destroyer // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod, false);\n            const message = skills.prepareAttackMessage(user.name, target.name, `<Br>${user.name} attempts to obliterate the enemy with flames!`, damage);\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                target.health -= damage.damage;\n\n                \n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n               \n                skills.finish(\"ignis_destroyer\", damage, type);\n               \n            })\n        },\n        cost: (user, target) => { return true }\n    },\n\n    boar_haste: {\n        name: 'boar haste',\n        description: 'The user enchants their speed with powerful magic, applying <u>Boar Haste</u> [+50% SPD, unstrippable, 999T duration] ' +\n        ' to themselves.',\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const damage = {\n                damage: 0,\n                crit: false,\n                eva: false\n            }\n            const message = [[`<br>${user.name} enchants themselves with powerful magic!`, 1]];\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                target.health -= damage.damage;\n\n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n\n                const buff = {\n                    name: \"boar haste\",\n                    speed: 0.5,\n                    element: \"physical\",\n                    types: [\"buff\"],\n                    apply_text: \"'s speed increased greatly!\",\n                    max_stacks: 1,\n                    unstrippable: true,\n                    duration: 999\n                }\n                // if player is needed to apply buffs, instead of user/target use ** (type == 'player' ? Combat.getPlayer() : user) **\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].applyBuff(buff, 100, (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), (type == 'player' ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer() : user), \"buffs\");\n                /* ^ ternary used to get playerFighter if the player is having the buff applied, since otherwise we are applying the buff\n                to getPlayerAdd which is pointless */\n\n\n                skills.finish(\"camoflague\", damage, type);\n\n            })\n\n        },\n\n        cost: (user, target) => {\n            if (user.mana >= 12) { return true } else { return \"Insufficient mana!\"}\n        }\n    },\n\n    true_cleanse: {\n        name: 'true cleanse',\n        description: '<b>Cost: 10 SP</b> - The user cleanses their spirit completely. Removes all buffs and debuffs from the user.',\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'none',\n        def_element: 'none',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            user.sp = user.sp - 10;\n            const damage = {\n                damage: 0,\n                crit: false,\n                eva: false\n            }\n            const message = [[`<br>${user.name} cleanses themselves completely.`, 1]];\n            _views_mainView__WEBPACK_IMPORTED_MODULE_0__[\"displayMessagesDelayed\"](message, \"battle\", () => {\n                target.health -= damage.damage;\n\n                var buffs;\n                var debuffs;\n                if (type == 'player') {\n                    buffs = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs;\n                    debuffs = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().debuffs;\n                } else {\n                    buffs = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs;\n                    debuffs = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().debuffs;\n                }\n                for (var i = 0; i < buffs.length; i++) {\n                    const buff = buffs[i];\n                    if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff((type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().buffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().buffs), buff.name) == true) {\n                        i--;\n                    }\n                }\n                for (var i = 0; i < debuffs.length; i++) {\n                    const buff = debuffs[i];\n                    if (_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].stripBuff((type == \"player\" ? _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer().debuffs : _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy().debuffs), buff.name) == true) {\n                        i--;\n                    }\n                }\n                const plr = type == \"enemy\" ? target : user;\n                const enemy = type == \"enemy\" ? user : target;\n                _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].uploadChanges(plr, enemy); // this funtion is needed because we are attacking a copy of playerFighter when we use skills.\n\n                skills.finish(\"true_cleanse\", damage, type);\n\n            })\n\n        },\n\n        cost: (user, target) => { if (user.sp >= 10) { return true } else { return \"Insufficient SP!\"} }\n    },\n\n    \n    \n\n}\n\n\n// -- COMMON BUFFS/DEBUFFS -- \\\\\nconst commonBuffs = {\n    defdown: {\n        name: \"DEF down\",\n        def: -0.1,\n        duration: 5,\n        element: \"none\",\n        types: [\"debuff\"],\n        apply_text: \"'s defence was decreased!\",\n        max_stacks: 5,\n    },\n    \n    defup: {\n        name: \"DEF up\",\n        def: 0.1,\n        duration: 5,\n        element: \"none\",\n        types: [\"buff\"],\n        apply_text: \"'s defence was increased!\",\n        max_stacks: 5,\n    },\n    \n    mdefdown: {\n        name: \"MDEF down\",\n        mdef: -0.1,\n        duration: 5,\n        types: [\"debuff\"],\n        apply_text: \"'s magical defence was decreased!\",\n        max_stacks: 5\n    },\n    \n    mdefup: {\n        name: \"MDEF up\",\n        mdef: 0.1,\n        duration: 5,\n        apply_text: \"'s magical defence was increased!\",\n        max_stacks: 5\n    },\n\n    atkup: {\n        name: \"ATK up\",\n        atk: 0.1,\n        duration: 5,\n        types: [\"buff\"],\n        apply_text: \"'s attack was increased!\",\n        max_stacks: 5\n    },\n\n    matkup: {\n        name: \"MATK up\",\n        matk: 0.1,\n        duration: 5,\n        types: [\"buff\"],\n        apply_text: \"'s magical attack was increased!\",\n        max_stacks: 5\n    },\n\n    spdup: {\n        name: \"SPEED up\",\n        speed: 0.1,\n        duration: 5,\n        element: \"none\",\n        types: [\"buff\"],\n        apply_text: \"'s speed was increased!\",\n        max_stacks: 5\n    },\n\n\n}\n\n\n// ~~~MODE UTILITIES~~~ //\n\n// Pass in state[turn][player/enemy]\nconst getSkill = (actions, skillName) => {\n    var counter = 0;\n    actions.forEach(action => {\n        if (action.skill == skillName) { counter++ };\n    })\n    return counter;\n}\n\n// Pass in state[turn][player/enemy]\n// Returns an array of all the damage dealt that turn by selected user\nconst getDamage = actions => {\n    var counter = [];\n    actions.forEach(action => {\n        counter.push(action.damage.damage);\n    })\n    return counter;\n}\n\nconst buffCount = buffs => {\n    var buffsCopy = JSON.parse(JSON.stringify(buffs));\n    //console.log(\"PRINTING BUFFS COPY\");\n    //console.log(buffsCopy);\n    //console.log(buffs);\n    var counter = 0;\n    for (var y = 0; y < buffsCopy.length; y++) {\n        if (y < 0) { y = 0 };\n        if (buffsCopy.length == 0) { break };\n        //console.log(`Y IS ${y}`)\n        //console.log(buffsCopy.length);\n        var buffName = buffsCopy[y].name; // get name of buff\n        counter += 1 // increment counter\n        for (var x = 0; x < buffsCopy.length; x++) { // remove all other instances of that buff so they are not counted\n            //console.log(`buffscopy[x].name = ${buffsCopy[x].name}, bfuffanem ${buffName}`)\n            if (buffsCopy[x].name == buffName) {\n                buffsCopy.splice(x, 1)\n                x -= 1; // so we don't miss any buffs\n                y -= 1;\n            }\n        }\n    }\n    return counter;\n}   \n\nconst stackCount = buffs => { // like above (counts buff count) but counts all stacks. Sorry i am lazy :(\n    var buffsCopy = JSON.parse(JSON.stringify(buffs));\n    var counter = 0;\n    buffsCopy.forEach(buff => {\n        var buffName = buff.name;\n        counter += buff.stacks; \n        for (var x = 0; x < buffsCopy.length; x++) {\n            //console.log(`buffscopy[x].name = ${buffsCopy[x].name}, bfuffanem ${buffName}`)\n            if (buffsCopy[x].name == buffName) {\n                buffsCopy.splice(x, 1)\n                x -= 1 // so we only count one stack\n                break;\n            }\n        }\n    })\n    return counter;\n}\n\nconst findTimesUsed = (type, skillName) => {\n    //console.log(`find times used called`);\n    const state = _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].state;\n    var counter = 0;\n    //console.log(state);\n    //console.log(state[Combat.turn - 1][type])\n    state[_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].turn - 1][type].forEach(cur => {\n        //console.log(`cur name is ${cur.skill}`)\n        if (cur.skill == skillName) {\n            counter += 1;\n        }\n    });\n    return counter;\n}\n\n\n// Use a random skill\nconst useRandom = (enemy, skillsAvailable) => {\n    var canUse = false;\n    while (canUse == false) {\n        //console.log(\"USE RANDOM LOOP RUNNING\");\n        var random = Math.floor(Math.random() * skillsAvailable.length);\n        if (skills[skillsAvailable[random]].cost(enemy) == true) {\n            canUse = true;\n            skills[skillsAvailable[random]].use(_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getEnemy(), _combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getPlayer(), \"enemy\");\n        }\n    } \n}\n\n\n\n// EXTRA STUFF\n/*\n\nBUFF APPLY SCRIPT\n\n            const buff = {\n                name: \"lower anima\",\n                duration: 3,\n                def: 0.2,\n                mdef: 0.2,\n                matk: 0.2,\n                mdef: 0.2,\n                element: \"earth\",\n                types: [\"buff\"],\n                apply_text: \" is blessed by healing magic!\",\n                max_stacks: 2,\n            };\n            const func = () => {\n                Combat.applyBuff(buff, 100, (type == 'player' ? Combat.getPlayer() : user), (type == 'player' ? Combat.getPlayer() : user), \"buffs\");\n            };\n            skills.applyBuff(type, func, \"self\", false, false, plr, enemy);\n\n------------------------------------\n\nATTACK SKILL\n    attack: {\n        name: 'attack',\n        description: \"Strike the enemy, dealing moderate physical damage. Attack element is based on the element of the equipped weapon.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'weapon',\n        def_element: 'weapon',\n        off_mod: 1,\n        def_mod: 1,\n        dmg_mod: 1,\n        use: (user, target, type) => {\n            const skill = skills.attack // need to change for each skill\n            const damage = skills.calcDamage(user, target, skill.off_stat, skill.def_stat, skill.off_element, skill.def_element, skill.off_mod, skill.def_mod, skill.dmg_mod);\n            \n            skills.prepareAttackMessage(user.name, target.name, `<br>${user.name} struck the enemy!`, damage);\n            \n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n\n            const stateDamage = {\n                damage: damage,\n                type: [\"attack\"],\n                target: \"opponent\"\n            }\n\n            skills.dealDamage(type, damage.damage, \"opponent\", [skill.name, stateDamage, type], true, plr, enemy);\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n\n\n-----------------------------------------------------------\n\nOLD ANALYSE\n--\n    check: { \n        name: 'check',\n        description: \"Reveals the stats of an enemy upon use.\",\n        off_stat: 'atk',\n        def_stat: 'def',\n        off_element: 'physical',\n        def_element: 'physical',\n        off_mod: 0,\n        def_mod: 0,\n        dmg_mod: 0,\n        use: (user, target, type) => {\n            const plr = type == \"enemy\" ? target : user;\n            const enemy = type == \"enemy\" ? user : target;\n            const state = [\"guard\", {\n                damage: 0,\n                additionalInfo: {\n                    type: [\"debuff\"],\n                    target: \"opponent\"\n                }\n            }, type];\n            if (Combat.checkStacks(target.debuffs, \"analysed\") > 0) {\n                skills.pushMessagesToState([\"Analysing...\"]);\n                skills.pushCustomFunc(type, () => {Combat.displayStats(target)}, target, false, false, plr, enemy);\n                skills.pushWaitForInput(type, state, true);\n            } else {\n                skills.pushMessagesToState([`<br>${user.name} attempts to analyse the enemy... [Check]`]);\n\n                const buff = {\n                        name: \"analysed\",\n                        duration: 2,\n                        element: \"physical\",\n                        types: [\"debuff\"],\n                        apply_text: \" has been analysed!\",\n                        max_stacks: 1,\n                        desc: \"Allows for analysis of an enemy.\"\n                };\n\n                const func = () => {\n                    Combat.applyBuff(buff, 150, (type == 'player' ? Combat.getPlayer() : user), (type == 'player' ? Combat.getEnemy() : Combat.getPlayer()), \"debuffs\");\n                }\n                skills.applyBuff(type, func, target, state, true, plr, enemy);\n                \n            }\n\n        },\n\n        cost: (user, target) => {\n            return true;\n        }\n    },\n*/\n\n\n//# sourceURL=webpack:///./src/js/models/skills.js?");

/***/ }),

/***/ "./src/js/views/baseView.js":
/*!**********************************!*\
  !*** ./src/js/views/baseView.js ***!
  \**********************************/
/*! exports provided: elements, presetMenuOptions, elementColours, separator, presetMessageDelays, keysToCode, tutorialMessages, musicCredits, inputSeparator, resizeText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elements\", function() { return elements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"presetMenuOptions\", function() { return presetMenuOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elementColours\", function() { return elementColours; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"separator\", function() { return separator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"presetMessageDelays\", function() { return presetMessageDelays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keysToCode\", function() { return keysToCode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tutorialMessages\", function() { return tutorialMessages; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"musicCredits\", function() { return musicCredits; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"inputSeparator\", function() { return inputSeparator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resizeText\", function() { return resizeText; });\n/* harmony import */ var _models_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/data */ \"./src/js/models/data.js\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ \"./src/js/index.js\");\n//import * as miscView from './miscView';\n//import * as statView from './statView';\n//import { Combat } from '../models/combat';\n//import { items } from '../models/items';\n\n\n\n\nconst elements = {\n    mainBox: document.querySelector('.main'),\n    main: document.querySelector('.mainText'),\n    input: document.querySelector('.main-input'),\n    form: document.querySelector('.form-input'),\n    mainStats: document.querySelector('#mainstats'),\n    elementalStats: document.querySelector('#elemstats'),\n    playerStats: document.querySelector('#playerstats'),\n    inventory: document.querySelector('#inventory'),\n    minimap: document.querySelector('#minimapview'),\n    miscView: document.querySelector('#miscview'),\n};\n\nconst presetMenuOptions = { // for input shortcut\n    statMenu: ['skills', 'sp', 'back'],\n    settingsHelp: ['gamestart', 'explore', 'shop' ,'equip', 'stats', 'crafting', 'settings', 'combat', 'combat-complex','back'],\n    settingsMain: ['message delay', 'change shortcut', 'toggle sticky shortcut', \"test message\",'toggle scroll', 'save', 'toggle auto save', 'see music credits', 'back'],\n    allocateSP: ['health', 'mana', 'atk', 'def', 'matk', 'mdef', 'speed', 'back']\n};\n\n\nconst elementColours = {\n    none: \"#FFFFFF\",\n    physical: \"#737373\",\n    fire: \"#FF2D00\",\n    water: \"#000FFF\",\n    earth: \"#7F2C00\",\n    thunder: \"#DAAB00\",\n    dark: \"#2A003D\",\n    light: \"#E8CC3E\",\n    wind: \"#8BF020\"\n    \n};\n\nconst separator = `<br> --------------------------------<br><br>`;\n\nconst presetMessageDelays = {\n    battle: {\n        slow: 0.8,\n        medium: 0.6,\n        fast: 0.4,\n    },\n\n    outside: {\n        slow: 0.8,\n        medium: 0.6,\n        fast: 0.4,\n    }\n};\n\nconst keysToCode = {\n    Rshift: \"ShiftRight\",\n    Lshift: \"ShiftLeft\",\n    Lctrl: \"ControlLeft\",\n    Rctrl: \"ControlRight\",\n    Altleft: \"AltLeft\",\n    Altright: \"AltRight\",\n    \"¬\": \"Backquote\"\n    // need to find a way to represent the key that makes this '¬' symbol\n}\n\nconst tutorialMessages = {\n    gameIntroPartOne: [\n        `<br><b>IMPORTANT!!! This game is currently undergoing testing. Please join the discord noted later or message the creator (iuc#1105) if you have any feedback or questions.</b>`,\n        `<b>Please do not play this game on mobile.</b>`,\n        `<br>(There is currently an issue with the looping of some music tracks. I don't currently have a solution for this but will update if I find one, sorry about this)`,\n        `<br><b>You may want to make use of <u>Super Commands</u> to enhance your experience. They can do things like resize the text, change the music volume and more.` +\n        ` To see how, use the help module by inputting 'help' or 'sc-help'.</b>`,\n        `${separator}Welcome to Tower RPG (TRPG!) This is an entirely text-based game focused around combat.`,\n        `<br>The game is centered around Floors. The goal of the game is to defeat the boss of each floor in order to advance to the next.` +\n        ` To do so, you will find yourself exploring, fighting and getting stronger on each floor.`,\n        `<br>If you enjoy the game or are interested in its progress, please join the discord: <b>https://discord.com/invite/w73Z44z</b>. (see at any time by inputting 'sc-discord')` +\n        ` It's where I will post updates regarding the game, ask for help testing it, where you can talk with others about it and do various other things.`,\n        `<br>Anyways, I hope you enjoy Tower RPG!`\n    ],\n\n    gameIntroPartTwo: [\n    `${separator}There is a tutorial for this game that will teach you the basics.`,\n    `<br>If you haven't played this game before, it is <b>STRONGLY RECOMMENEDED</b> that you play through the tutorial.` +\n    ` It is a short series of events wherein you follow somebody from TRPG history. Gold, EXP, etc.` +\n    ` obtained in the tutorial will not carry over to your account, but you will receive a small reward when you complete the tutorial.`,\n    `<br>Also, because of the nature of the tutorial, it cannot be replayed or played after starting the game without resetting` +\n    ` your data. Please take this into consideration.`,\n    `<br>Would you like to play through the tutorial?`,\n    `<br> - yes`,\n    ` - no`\n    ],\n\n    inventory_1: [`${separator}Here, you can equip and unequip items. The instructions should explain most things.`,\n    `<br>While you're here, I'll briefly explain about the pouch.`,\n    `<br>While exploring, you can use items like health potions and mana potions to keep yourself alive. But your` +\n    ` inventory is inaccessible during combat.`,\n    `<br>To use items during battle, you need to move them from your inventory to your <b>pouch</b>. Items in your pouch can` +\n    ` be used in combat (at the cost of an action) by inputting 'p' or 'pouch' during battle.`,\n    `<br>Your pouch can hold up to 3 different items, and different items have different 'Pouch Limits'. For example,` +\n    ` you can have up to 5 Health Potions in your pouch, but no more than 3 Stamina Vials.`,\n    `<br>Equip the Wooden Sword you should have crafted, then add the Health Potion you should've crafted to your pouch.` +\n    ` Then, proceed to the north.`],\n\n    stats_1: [`${separator}Here, you can equip and unequip skills, and also allocate and reset your SP` +\n    ` (stat points, not the SP used in battle!)`,\n    `<br>You can also allocate and reset Stat Points which you earn upon levelling up to increase specific stats further.` +\n    ` But this is simple enough, so I'll let you figure it out on your own.`,\n    `<br>If you get confused or lost, just use the Help Module (input 'help' or 'sc-help)`],\n\n    crafting_1: [`${separator}Welcome to the crafing menu! Here, you can use items you own (along with gold, usually)` +\n    ` to craft items.`,\n    `<br>There isn't much to be said here. Just know that each floor has it's own set of recipes, but you also have` +\n    ` \"personal recipes\", which you can use wherever you are. These have to be unlocked, though, so you won't have any` +\n    ` right now.`,\n    `<br>Once you've crafted the Health Potion and Wooden Sword, navigate to the inventory, where you'll learn how to ` +\n    `equip them.`],\n\n    battle_1: [`${separator}Your first battle! Don't panic, this should be an easy ride. Just remember the` +\n    ` following things:`,\n    `<br><u>You will probably find it very helpful to use Input Shortcut when battling.</u>`,\n    `<br><b>Skills</b> will display all the skills you have access to and their effects. You will always be able to attack and guard.`,\n    `<br><b>Status</b> will display all buffs and debuffs applied to your character, and <b>Enemy</b> will do the same` +\n    ` for your opponent.`,\n    `<br><b>Flee</b> will end a fight immediately, but it will be your loss and you will return to the main menu. Don't be` +\n    ` a pussy!`,\n    `<br>Don't worry if there are some things that you don't understand, more will be explained throughout the tutorial. ` +\n    `But if you ever do need help, you can open the help module by inputting 'sc-help' or 'help'. Now show this slime who's boss!`],\n    \n    battle_2: [`${separator}OK! You should've gotten the hang of it by now, so I won't keep you for too long.`,\n    `<br>Just note your \"actions\" that will be noted when you start the fight. As you might expect, they are consumed in using items` +\n    ` and skills. Once you run out of them, your turn will end.`,\n    `<br>You often will only have one action, but you can gain more using skills - like the 'Boost' skill. For now, you can` +\n    ` 'Guard' to gain SP, and then 'Boost' on subsequent turns to deal a burst of high damage!`,\n    `<br>One more thing-- your 'Speed' stat can help you gain extra actions. If your speed is twice your opponent's or more,` +\n    ` you will start the turn with two actions, instead of one.`,\n    `<br>Use the 'Check' skill to see the opponent's stats. There'll be a lot of info, but for now, just focus on the` +\n    ` <b>speed</b> stat of the enemy and any <b>observations</b> you can make. You might be able to find something that` +\n    ` will give you a massive advantage in this fight..`,\n    `<br>Finally, turn your atttention to your <b>Stamina</b>, <b>Mana</b> and <b>SP</b>.`,\n    `<br>They are all resources for using skills, but all function a little differently:`,\n    `<br><b>Mana</b> doesn't regenerate at all. <b>Stamina</b> does regenerate (1/10 at the end of each of your turns).` +\n    ` <b>SP</b> (Special Points) don't regenerate, and unlike the other two, which refill whenever you're healed, you always start a fight with` +\n    ` 0 SP.`],\n\n    battle_3: [`${separator}It looks like you're in a hurry this time, so I won't keep you for long. There are just a few more` +\n    ` things you need to know.`,\n    `<br>You'll notice the two stats <b>effectiveness</b> and <b>resistance</b> that you have. They're used for resisting and` +\n    ` applying debuffs.`,\n    `<br>When someone tries to apply a debuff on you, the percentage chance of that happening is <u>reduced</u> by your` +\n    ` <u>resistance</u>, and <u>increased</u> by their effectiveness. This goes both ways, of course.`,\n    `<br>So if a debuff has a 50% chance of applying and you have 50 resistance and they have 0 effectiveness, you will` +\n    ` always <u>Resist</u> the debuff. But if they have 50 effectiveness and you have 0 resistance, the debuff will always` +\n    ` be applied.`,\n    `<br>100 resistance at this level is enough to easily resist almost all debuffs. Keep that in mind!`,\n    `<br>By the way, you should now have a 'tp stone' in your inventory. You can use this while you're exploring (not in the main menu) to return to this spot. Don't worry about having to navigate here again if you are defeated.`,\n    `<br>If you get stuck, try looking around for items or crafting more health potions to use in battle.`,\n    `<br>I hope you have some pouch items at the ready. Save Lucia no matter what!`],\n\n    battle_4: [\n    `<br>${separator}We're almost there! I'll just ask you to turn your attention to your <b>Elemental Stats.</b>.`,\n    `<br>Elemental offence is a percentage applied to damage dealt of that element. Elemental defence is a percentage applied` +\n    ` to damage taken of that element.`,\n    `<br>So if you have 200 fire offence, your fire attacks will deal 2x (200%) damage. If you have 200 fire defence, fire` +\n    ` attacks aimed at you will deal 2x (200%) damage. The most straightforward way to alter these is with equippable items.`,    \n    `<br>You've now learned the basics of TRPG. Congratulations, and thanks for playing the tutorial!`,\n    `<br>What is coming up now is a fight against a fearsome foe. If you'd like to stop here, you will notice that the` +\n    ` \"ascend\" option will be unlocked in the main menu; this is usually used to fight the floor boss, but in this case,` +\n    ` it'll just end the demo.`,\n    `<br>But if you want to prove yourself and see Lore and Lucia's story through to the end, you'll have to beat this boss!`,\n    `<br>Be aware though, you might not beat it first try. Or second...`,\n    `<br>I invite you to see what you can do! You can 'ascend' whenever you're ready. Good luck!`],\n\n    tutorial_end: [`${separator}Congratulations on clearing the tutorial!`,\n    `<br>There isn't much for me to tell you now. You will find that in your adventures, you will have a lot less guidance. But I believe in you!`,\n    `<br>One thing you won't have seen in this tutorial is the 'shop' function; in the main menu, you can access a shop selling certain items.` +\n    ` The shop is different for each floor.`,\n    `<br>You will probably find things that will be incredibly useful for your adventures there, so be sure to check it out!`,\n    `<br>I hope you enjoy tower RPG! I'll give you a little reward for cleaing the demo, and another small reward if you reached the true ending.`,\n    `<br>This page will now refresh...`]\n\n}\n\nconst musicCredits = [\n    'Main menu theme - Brave Frontier OST - Main Menu',\n    'Forest theme - \"RPG Maker Music - (FOREST) - On A Quest For Mushrooms\" (https://www.youtube.com/watch?v=Et57WaDFlKk)',\n    'Battle theme 1 - RPG Maker MV - Battle 1',\n    '\"Intimidating enemy\" theme - Xenoblade Chronicles Definitive Edition - An Obstacle in Our Path',\n    '\"Mechanical Rhythm\" - Xenoblade Chronicles Definitive Edition - Mechanical Rhythm',\n    '\"Creator\" - Brave Frontier OST - Creator'\n]\n\nconst inputSeparator = \"<br>━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\";\n\nconst resizeText = (type, size) => {\n    switch (type) {\n        case \"main\":\n            elements.main.style.fontSize = size;\n            break;\n\n        case \"stat\":\n            elements.mainStats.style.fontSize = size;\n            elements.elementalStats.style.fontSize = size;\n            break;\n\n        case \"misc\":\n            elements.miscView.style.fontSize = size;\n            break;\n\n        default:\n            console.log(\"invalid input for resizing text\");\n\n    }\n}\n\n//# sourceURL=webpack:///./src/js/views/baseView.js?");

/***/ }),

/***/ "./src/js/views/mainView.js":
/*!**********************************!*\
  !*** ./src/js/views/mainView.js ***!
  \**********************************/
/*! exports provided: initInputHandler, displayMessage, displayWaitForInput, displayMessagesDelayed, getInput, setInputResponse, removeInputResponse, initInputShortcuts */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initInputHandler\", function() { return initInputHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"displayMessage\", function() { return displayMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"displayWaitForInput\", function() { return displayWaitForInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"displayMessagesDelayed\", function() { return displayMessagesDelayed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getInput\", function() { return getInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setInputResponse\", function() { return setInputResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeInputResponse\", function() { return removeInputResponse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initInputShortcuts\", function() { return initInputShortcuts; });\n/* harmony import */ var _baseView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _models_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/data */ \"./src/js/models/data.js\");\n/* harmony import */ var _models_baseModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/baseModel */ \"./src/js/models/baseModel.js\");\n/* harmony import */ var _models_music__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/music */ \"./src/js/models/music.js\");\n/* harmony import */ var _models_helpModule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/helpModule */ \"./src/js/models/helpModule.js\");\n/* harmony import */ var _models_rooms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/rooms */ \"./src/js/models/rooms.js\");\n/* harmony import */ var _models_equipMode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/equipMode */ \"./src/js/models/equipMode.js\");\n/* harmony import */ var _models_shops__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../models/shops */ \"./src/js/models/shops.js\");\n/* harmony import */ var _models_learnSkills__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../models/learnSkills */ \"./src/js/models/learnSkills.js\");\n/* harmony import */ var _models_crafting__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../models/crafting */ \"./src/js/models/crafting.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst initInputHandler = () => {\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].form.addEventListener('submit', inputHandler.response);\n};\n\nconst displayMessage = (msg, forceScroll = true, additionalArgs = {}) => {\n    const forQueue = [msg, 0, forceScroll];\n    if (additionalArgs.unshift == true) {\n        messageQueue.queue.unshift(forQueue)\n    } else {\n        messageQueue.queue.push(forQueue)\n    }\n    messageQueue.runQueue();\n};\n\nfunction instantMessage(msg) { // displays a message without the use of messagequeue\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].main.insertAdjacentHTML('beforeend', `${msg}<br>`);\n    scrollMain();\n}\n\nconst displayWaitForInput = (message, finishFunction, formattedForDMDelayed = false) => {\n    for (var i = 0; i < message.length; i++) {\n        const msg = message[i];\n        //console.log(\"logging msg\");\n        //console.log(msg);\n        var additionalArgs;\n        if (msg[3] == undefined) {\n            additionalArgs = {};\n        } else { additionalArgs = msg[3] };\n        if (!formattedForDMDelayed) {\n            messageQueue.queue.push([msg + ' <b>⇨</b>', \"input\", true, additionalArgs]);\n        } else {\n            messageQueue.queue.push([msg[0] + ' <b>⇨</b>', \"input\", true, additionalArgs]);\n        }\n    };\n    messageQueue.queue.push([\"finishFunction\", finishFunction]);\n    messageQueue.runQueue();\n\n    /*\n    var i = 0;\n    const recursive = () => {\n       //console.log(message[i]);\n        var msg = message[i];\n        if (formattedForDMDelayed) { msg = message[i][0] };\n        mainView.displayMessage(msg + \" <i>(Press enter to continue...)</i>\");\n        i++;\n        if (message[i] != undefined) {\n            mainView.setInputResponse(recursive);\n        } else {\n            mainView.setInputResponse(finishFunction);\n        };\n    };\n    recursive();\n    */\n}\n\nconst displayMessagesDelayed = (msgArr, msgType, finishFunction) => {\n    var i = 0;\n    // MSG LAYOUT\n    // [text, delay, scrollMain, additionalArgs, flatsec/flat/calc]\n    const baseWait = (msgType == \"battle\" ? _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].battleMessageDelay : _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].messageDelay);\n    msgArr.forEach(msg => {\n        if (msg[4] == \"flatsec\") {\n            // just leave msg as it is\n        }\n        else if (msg[4] == \"flat\") {\n            msg[1] = msg[1] * baseWait;\n        }\n        else {\n            const words = msg[0].split(' ').length;\n            //console.log(words);\n            const time = (words / 4);\n            msg[1] = time * baseWait;\n        }\n        if (msg[4] != undefined) { msg.splice(4, 1) } // don't want that element in queue\n        if (msg[3] == undefined) { msg[3] = {} } // setting add. args\n        if (msg[2] == undefined) { msg[2] = true }; // setting scrollMain\n        messageQueue.queue.push(msg);\n    });\n    messageQueue.queue.push([\"finishFunction\", finishFunction]);\n    messageQueue.runQueue();\n    //console.log(`BASE WAIT IS ${baseWait}`)\n    /*\n    const loop = () => {\n        if (i < msgArr.length) {\n            displayMessage(msgArr[i][0]);\n            scrollMain();\n            i++;\n            if (i < msgArr.length) {\n                setTimeout(loop, baseWait * 1000 * msgArr[i-1][1]); // we increase i by 1 so not doing i-1 would get the delay..\n                // ..of the next thing\n            } else { setTimeout(finishFunction, baseWait * 1000 * msgArr[i-1][1]) } // DOESNT WORK W/ LEN 1 ARRAYS\n        } else {\n            finishFunction.call();\n        }\n    };\n    loop();\n    */\n}\n\nconst messageQueue = {\n    queue: [],\n    playing: false,\n    runQueue() {\n        if (!this.playing) {\n            this.playing = true;\n            // create a loop that:\n            const queueLoop = () => {\n\n                if (this.playing) {\n                    //console.log(copy(this.queue));\n\n                    const currentMsg = Object(_models_baseModel__WEBPACK_IMPORTED_MODULE_2__[\"copy\"])(this.queue[0]);\n                    //console.log(`currentmsg`);\n                    //console.log(currentMsg);\n                    if (currentMsg[0] == \"finishFunction\") {\n                        currentMsg[1].call();\n                        this.queue.shift();\n                        if (this.queue.length > 0) {\n                            queueLoop();\n                        } else {\n                            this.playing = false;\n                        }\n                    } else if (currentMsg != undefined) {\n                        // -- HANDLING THE MESSAGE -- \\\\\n                        _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].main.insertAdjacentHTML('beforeend', `${currentMsg[0]}<br>`); // displays the first message of the queue\n                        if (currentMsg[2] == true) { scrollMain() }; // if force scroll is enabled for the message\n        \n                        //\n                        this.queue.shift(); // removes the first message of the queue\n                        //console.log(this.queue.length);\n                        if (this.queue.length > 0) {\n    \n                            if (currentMsg[1] == 0) {\n                                queueLoop(); // if not, run the loop again after waiting the allotted time\n                            }\n                            else if (currentMsg[1] == \"input\") {\n                                const invokeLoop = () => {\n                                    removeInputResponse(invokeLoop, false);\n                                    queueLoop();\n                                };\n                                setInputResponse(invokeLoop);\n                                this.playing = true;\n                            }\n                            else {\n                                setTimeout( queueLoop , currentMsg[1] * 1000);\n                            }\n                        } else {\n                            this.playing = false; // if the queue is empty, stops it\n                        }\n                    } else {\n                        this.playing = false;\n                    }\n                }\n\n            };\n            queueLoop();\n        }\n    }\n\n};\n\nconst getInput = (clear = true) => {\n    const temp = _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].input.value; // getting what they put into the box\n   //console.log(`TEMP IS ${temp}`)\n    const tempShortcuts = inputShortcut.inputShortcuts\n    if (clear) {\n        _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].input.value = \"\";\n    }\n\n   //console.log(`input is ${temp}`);\n\n    if (inputShortcut.on) {\n        //console.log(`input shortcut is on`);\n        if (parseInt(temp).toString() != \"Nan\") { // if they inputted a number\n            if (inputShortcut.inputShortcuts[parseInt(temp)] != undefined) { // if the number corresponds to something in shortcuts \n                inputShortcut.inputShortcuts = {}; // need to reset regardless\n                inputShortcut.on = false;\n                return tempShortcuts[parseInt(temp)];\n            }\n        }\n\n    }\n\n    //console.log(`temp is`);\n\n    inputShortcut.inputShortcuts = {};\n    inputShortcut.special = {};\n    inputShortcut.on = false;\n\n    return temp; // if any of that is false, just return temp\n};\n\nconst setInputResponse = callback => {\n    inputHandler.callback = callback;\n    \n    //elements.form.addEventListener('submit', in);\n}\n\nconst removeInputResponse = (callback = \"nothing\", displaySeparator = true) => { // 'callback' arg. no longer needed\n    inputHandler.callback = undefined;\n    if (displaySeparator) {\n        displayMessage(_baseView__WEBPACK_IMPORTED_MODULE_0__[\"inputSeparator\"]); // if removeinputresponse is called it means that the input is changing, sowe can add this..\n        // there are very few cases where we need to do otherwise\n    }\n};\n\nconst inputHandler = {\n    callback: undefined,\n    response: () => {\n        const input = _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].input.value; // can't use getInput() as that would clear the form\n        if (!/[~`!#$%\\^&*+=\\\\[\\]\\\\;,/{}|\\\\\":<>\\?]/g.test(input)) {\n            const scCheck = input.toLowerCase().split('-');\n            if (scCheck[0] == \"sc\") {\n                var validCommand = false;\n                if (scCheck.length == 3) {\n                    if (scCheck[2].slice(-2) == \"px\" && isNaN(scCheck[2].slice(0, -2)) == false) {\n                        const styleToChange = \"fontSize\";\n                        const newStyle = scCheck[2];\n                        if (scCheck[1] == \"main\") {\n                            _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].main.style[styleToChange] = newStyle;\n                            _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].mainTextSize = scCheck[2];\n                            scrollMain();\n                            validCommand = true;\n                        }  \n                        else if (scCheck[1] == \"stat\") {\n                            _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].mainStats.style[styleToChange] = newStyle\n                            _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].elementalStats.style[styleToChange] = newStyle;\n                            _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].statsTextSize = scCheck[2];\n                            scrollMain();\n                            validCommand = true;\n                        }\n                        else if (scCheck[1] == \"misc\") {\n                            _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].miscView.style[styleToChange] = newStyle;\n                            _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].miscTextSize = scCheck[2];\n                            scrollMain();\n                            validCommand = true;\n                        }\n                    } else if (isNaN(scCheck[2]) == false && parseFloat(scCheck[2]) <= 1 && parseFloat(scCheck[2]) >= 0) {\n                        if (scCheck[1] == \"volume\") {\n                            _models_music__WEBPACK_IMPORTED_MODULE_3__[\"musicHandler\"].changeVolume(scCheck[2], \"volume\");\n                            _models_music__WEBPACK_IMPORTED_MODULE_3__[\"musicHandler\"].changeVolume(scCheck[2], \"volumeFX\");\n                            instantMessage(`<br><span style=\"color:#33cccc\">Volume changed</span>`);\n                            validCommand = true;\n                        }\n                        else if (scCheck[1] == \"music\") {\n                            _models_music__WEBPACK_IMPORTED_MODULE_3__[\"musicHandler\"].changeVolume(scCheck[2], \"volume\");\n                            instantMessage(`<br><span style=\"color:#33cccc\">Music volume changed</span>`);\n                            validCommand = true;\n                        }\n                        else if (scCheck[1] == \"fx\") {\n                            _models_music__WEBPACK_IMPORTED_MODULE_3__[\"musicHandler\"].changeVolume(scCheck[2], \"volumeFX\");\n                            instantMessage(`<br><span style=\"color:#33cccc\">FX volume changed</span>`);\n                            validCommand = true;\n                        }\n                    }\n                    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].input.value = \"\";\n                } else if (scCheck.length == 2) {\n                    if (scCheck[1] == \"reset\") {\n                        _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].main.style.fontSize = \"17px\";\n                        _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].mainStats.style.fontSize = \"17px\";\n                        _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].elementalStats.style.fontSize = \"17px\";\n                        _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].playerStats.style.fontSize = \"17px\";\n                        _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].inventory.style.fontSize = \"17px\";\n                        scrollMain();\n                        validCommand = true;\n                    }\n                    else if (scCheck[1] == \"inputshortcut\") {\n                        instantMessage(`<br><span style=\"color:#33cccc\">Input shortcut is currently set to\n                         <b>${_models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].toggleShortcut}</b>. Don't like this key? You can change the key input shortcut\n                         is assigned to in settings.</span>`);\n                         validCommand = true;\n                    }\n                    else if (scCheck[1] == \"help\") {\n                        Object(_models_helpModule__WEBPACK_IMPORTED_MODULE_4__[\"addHelp\"])();\n                        instantMessage(`<br><span style=\"color:#33cccc\">Showing help module. Is it offscreen?\n                         If so, input 'sc-helpreset' to reset its position.</span>`);\n                        validCommand = true;\n                    }\n                    else if (scCheck[1] == \"helpreset\") {\n                        Object(_models_helpModule__WEBPACK_IMPORTED_MODULE_4__[\"centerHelp\"])();\n                        validCommand = true;\n                    }\n                    else if (scCheck[1] == \"minimap\") {\n                        if (Object(_models_rooms__WEBPACK_IMPORTED_MODULE_5__[\"getCurrentZone\"])() != undefined) {\n                            if (_models_baseModel__WEBPACK_IMPORTED_MODULE_2__[\"updateDisplayMode\"].mode == \"minimap\") {\n                                _models_baseModel__WEBPACK_IMPORTED_MODULE_2__[\"updateDisplayMode\"].mode = \"normal\";\n                            } else {\n                                _models_baseModel__WEBPACK_IMPORTED_MODULE_2__[\"updateDisplayMode\"].mode = \"minimap\";\n                            };\n                        } else {\n                            instantMessage(`<br><span style=\"color:#33cccc\">You aren't currently exploring!</span>`)\n                        }\n                        validCommand = true;\n                        Object(_models_baseModel__WEBPACK_IMPORTED_MODULE_2__[\"updateDisplay\"])(_models_data__WEBPACK_IMPORTED_MODULE_1__[\"data\"].player);\n                    }\n                    else if (scCheck[1] == \"clear\") {\n                        _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].main.textContent = \"\";\n                        validCommand = true;\n                    }\n                    else if (scCheck[1] == \"discord\") {\n                        instantMessage(`<br><span style=\"color:#33cccc\">Discord invite link: https://discord.com/invite/w73Z44z</span>`);\n                        validCommand = true;\n                    }\n                    else if (scCheck[1] == \"return\") {\n                        console.log(_models_crafting__WEBPACK_IMPORTED_MODULE_9__[\"getCraftingDetails\"].returnFunction);\n                        console.log(_models_equipMode__WEBPACK_IMPORTED_MODULE_6__[\"equipMenu\"].returnFunction);\n                        console.log(_models_shops__WEBPACK_IMPORTED_MODULE_7__[\"getShopDetails\"].returnFunction);\n                        console.log(_models_learnSkills__WEBPACK_IMPORTED_MODULE_8__[\"statMenu\"].returnFunction);\n                        if (Object(_models_crafting__WEBPACK_IMPORTED_MODULE_9__[\"getCraftingDetails\"])().returnFunction != undefined) {\n                            instantMessage(`<br><span style=\"color:#33cccc\">Returning...</span>`);\n                            Object(_models_crafting__WEBPACK_IMPORTED_MODULE_9__[\"getCraftingDetails\"])().returnFunction();\n                            Object(_models_crafting__WEBPACK_IMPORTED_MODULE_9__[\"resetCrafting\"])();\n                        }\n                        else if (_models_equipMode__WEBPACK_IMPORTED_MODULE_6__[\"equipMenu\"].returnFunction != undefined) {\n                            instantMessage(`<br><span style=\"color:#33cccc\">Returning...</span>`);\n                            _models_equipMode__WEBPACK_IMPORTED_MODULE_6__[\"equipMenu\"].returnFunction();\n                            _models_equipMode__WEBPACK_IMPORTED_MODULE_6__[\"equipMenu\"].reset();\n                        }\n                        else if (Object(_models_shops__WEBPACK_IMPORTED_MODULE_7__[\"getShopDetails\"])().returnFunction != undefined) {\n                            instantMessage(`<br><span style=\"color:#33cccc\">Returning...</span>`);\n                            Object(_models_shops__WEBPACK_IMPORTED_MODULE_7__[\"getShopDetails\"])().returnFunction();\n                            shopHandler.reset();\n                        }\n                        else if (_models_learnSkills__WEBPACK_IMPORTED_MODULE_8__[\"statMenu\"].returnFunction != undefined) {\n                            instantMessage(`<br><span style=\"color:#33cccc\">Returning...</span>`);\n                            _models_learnSkills__WEBPACK_IMPORTED_MODULE_8__[\"statMenu\"].returnFunction();\n                            _models_learnSkills__WEBPACK_IMPORTED_MODULE_8__[\"statMenu\"].reset();\n                        }\n                        else {\n                            instantMessage(`<br><span style=\"color:#33cccc\">This super command can't be used right now.</span>`);\n                        }\n                        validCommand = true;\n                    }\n                    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].input.value = \"\";\n                }\n                if (!validCommand) {\n                    instantMessage(`<br><span style=\"color:#33cccc\">Did you try and input a super command? Input 'sc-help' for assistance.</span>`)\n                    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].input.value = \"\";\n                }\n            }\n\n            else if (input == \"help\") {\n                Object(_models_helpModule__WEBPACK_IMPORTED_MODULE_4__[\"addHelp\"])();\n                instantMessage(`<br><span style=\"color:#33cccc\">Showing help module. Is it offscreen?\n                 If so, input 'sc-helpreset' to reset its position.</span>`);\n                _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].input.value = \"\";\n            }\n\n            else if (input == \"skip\") {\n                if (messageQueue.playing) {\n                    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].input.value = \"\";\n\n                    messageQueue.playing = false;\n\n                    // RESEARCH WHY THIS WORKS\n                    var id = window.setTimeout(function() {}, 0);\n\n                    while (id--) {\n                        window.clearTimeout(id); // will do nothing if no timeout with id is present\n                    }\n\n                    //console.log(messageQueue.queue);\n                    for ( var i = messageQueue.queue.length - 1; i != -1; i-- ) {\n\n                        //console.log(\"logging messagequeue\");\n                        //console.log(messageQueue.queue[i][0]);\n                        //console.log(copy(messageQueue.queue));\n                        if (messageQueue.queue[i][0] != \"finishFunction\") {\n                            //console.log(messageQueue[i])\n                            if (!messageQueue.queue[i][3].hasOwnProperty(\"unskippable\")) {\n                            //console.log(\"removed\");\n                            messageQueue.queue.splice(i, 1);\n                           }\n                        }\n                    }\n                    displayMessage('<span style=\"color:#2DFF34\"><br>Skipped.</span>', true, { unshift: true });\n                    //messageQueue.runQueue();\n                }\n            }\n    \n            else if (inputHandler.callback != undefined) {\n                inputHandler.callback();\n            }\n        } else {\n            displayMessage(\"<br>Please don't include any special characters in your inputs!\");\n            _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].input.value = \"\";\n        }\n    }\n};\n\nconst scrollMain = () => {\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].mainBox.scrollTop = _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].mainBox.scrollHeight;\n\n    // ensuring the main box is cleared if it's getting too big\n    const text = _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].main.innerHTML;\n    var textArray = text.split('<br>');\n    if (textArray.length > _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].scrollLimit) {\n        //console.log(textArray);\n        textArray = textArray.filter(el => {\n            const returnValue = el.includes(\"form\");\n            return !returnValue;\n        });\n        //console.log(\"fitlererd\");\n        //console.log(textArray);\n        textArray.splice(1, textArray.length - _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].scrollLimit);\n        _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].main.innerHTML = textArray.join('<br>');\n\n    }\n\n}\n\n// creating toggle input shortcut\nwindow.addEventListener(\"keyup\", function(keyPressed) {\n    if (this.event.code == _baseView__WEBPACK_IMPORTED_MODULE_0__[\"keysToCode\"][_models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].toggleShortcut]) {\n        inputShortcut.toggleInputShortcut();\n    }\n})\n\nconst inputShortcut = {\n    \n    on: false,\n    \n    inputShortcuts: { // this will be changed dynamically when we are using inputShortcut\n    },\n\n    special: { // this will be changed dynamically when we are using input shortcut\n        combat: false\n    },\n\n    toggleInputShortcut: (coercion = \"none\") => {\n        if (_models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].stickyInputShortcut.on == false) { _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].input.value = \"\" };\n        if (inputShortcut.on && coercion != \"on\") {\n            inputShortcut.on = false\n            _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].stickyInputShortcut.active = false;\n            displayMessage(\"<br>Input shortcut turned off.\");\n        } else {\n            if (Object.keys(inputShortcut.inputShortcuts).length > 0) {\n                inputShortcut.on = true;\n                _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].stickyInputShortcut.active = true;\n                displayMessage(\"<br>Input shortcut turned on.\")\n                //console.log(inputShortcut);\n                if (inputShortcut.special.combat == true) { // special display for combat\n                    const actions = {...inputShortcut.inputShortcuts};\n                    const skills = {...inputShortcut.inputShortcuts};\n                    for (var item in actions) {\n                        if (!['skills', 'status', 'enemy', 'pouch', 'flee'].includes(actions[item])) { delete actions[item] };\n                    };\n                    for (var item in skills) {\n                        if (['skills', 'status', 'enemy', 'pouch', 'flee'].includes(skills[item])) { delete skills[item] };\n                    };\n\n                    displayMessage(`<b>Skills`);\n                    Object.keys(skills).forEach(index => {\n                        displayMessage(`${index} - ${inputShortcut.inputShortcuts[index]}`)\n                    })\n                    displayMessage(`<b>Special Actions`);\n                    Object.keys(actions).forEach(index => {\n                        displayMessage(`${index} - ${inputShortcut.inputShortcuts[index]}`)\n                    })\n                } else {\n                    Object.keys(inputShortcut.inputShortcuts).forEach(index => {\n                        displayMessage(`${index} - ${inputShortcut.inputShortcuts[index]}`)\n                    })\n                }\n\n            } else {\n                displayMessage(\"<br>Input shortcut cannot be used here.\");\n            }\n\n        }\n    }\n\n    \n\n}\n\nconst initInputShortcuts = (array, additionalArgs = {}) => {\n    const temp = {};\n    array.forEach((item, index) => {\n        temp[index + 1] = item;\n    })\n    //console.log(`created input shortcuts`);\n    //console.log(temp);\n\n    inputShortcut.inputShortcuts = temp;\n    inputShortcut.special = additionalArgs;\n\n    if (_models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].stickyInputShortcut.on && _models_data__WEBPACK_IMPORTED_MODULE_1__[\"settings\"].stickyInputShortcut.active) {\n        inputShortcut.toggleInputShortcut(\"on\");\n    }\n\n    return temp;\n}\n\n//# sourceURL=webpack:///./src/js/views/mainView.js?");

/***/ }),

/***/ "./src/js/views/miscView.js":
/*!**********************************!*\
  !*** ./src/js/views/miscView.js ***!
  \**********************************/
/*! exports provided: updatePlayerStats, updateMiniMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updatePlayerStats\", function() { return updatePlayerStats; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateMiniMap\", function() { return updateMiniMap; });\n/* harmony import */ var _baseView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _models_items__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/items */ \"./src/js/models/items.js\");\n/* harmony import */ var _models_equipMode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/equipMode */ \"./src/js/models/equipMode.js\");\n/* harmony import */ var _models_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../models/data */ \"./src/js/models/data.js\");\n/* harmony import */ var _models_rooms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/rooms */ \"./src/js/models/rooms.js\");\n\n\n\n\n\n\nconst updatePlayerStats = player => {\n\n   //console.log(\"update player stats called\");\n\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].minimap.style.visibility = \"hidden\";\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].miscView.style.visibility = \"visible\";\n\n    var equipped_items = \"\";\n    const equips = player.stats.equips;\n\n    Object.keys(player.stats.equips).forEach(equip => {\n        const item = equips[equip];\n        const itemDetails = {..._models_items__WEBPACK_IMPORTED_MODULE_1__[\"items\"][item]};\n        var hasElement = false;\n        equipped_items += `${equip.toUpperCase()}: ` // SWORD:\n        if (itemDetails.name != undefined) { // this will return true if the item exists\n            equipped_items += `${itemDetails.name}<br>` // SWORD: Greatsword\n            delete itemDetails.name;\n    \n            var elemental_string = \"\";\n            // have to do elements first so we can remove it and then iterate over every property of the item w/o issue\n            if (itemDetails.hasOwnProperty('elemental')) { // if the object has elemental components...\n                //var elemental_string = \"Elemental offence:<br>\";\n                Object.keys(itemDetails.elemental.offence).forEach(cur => { // even if an object has just offence/defence we will do both since this is less clunky\n                    elemental_string += `${cur} attack: ${itemDetails.elemental.offence[cur]}<br>` // fire: 20\n                })\n                //elemental_string += \"Elemental defence:<br>\";\n                Object.keys(itemDetails.elemental.defence).forEach(cur => {\n                    elemental_string += `${cur} defence: ${itemDetails.elemental.defence[cur]}<br>` // fire: 20\n                })\n                delete itemDetails.elemental; // remove it so it isnt included when we iterate over all other properties\n                hasElement = true; // so we know to add the elemental string to the main one\n            };\n    \n            Object.keys(itemDetails).forEach(cur => {\n                if (cur != 'desc' && cur != 'sell_value' && cur != 'description') { // dont want to display this\n                    equipped_items += `${cur}: ${itemDetails[cur]}<br>`; // iterate over properties like atk, ... and add them\n                }\n                \n            })\n    \n            if (hasElement == true) { equipped_items += elemental_string};\n        } else {\n            // do nothing lol [if there is no item equipped as getting the name will return undefined]\n        }\n\n\n        equipped_items += \"<br>\";\n    })\n    \n    const markupLeft = `\n    Level: ${player.level}<br>\n    EXP: ${player.exp}/${_models_data__WEBPACK_IMPORTED_MODULE_3__[\"exp_requirements\"][player.level]}<br>\n    Gold: ${player.gold}<br>\n    SP: ${player.sp}<br>\n    AP: ${player.ap}<br><br>\n    \n    <b>Equipped items</b><br>\n    ${equipped_items}\n\n\n    `; // Level, exp and gold should all be self-explanatory. See above function for equipped items, its an array with <br>\n\n    var inventory_string;\n\n    if (player.inventory.length > 0) {\n        inventory_string = Object.keys(player.inventory).map((cur, index) => {\n            //console.log(`index is ${index}, currentindex is ${equipMenu.currentIndex}`)\n    \n            const openNotation = (index == _models_equipMode__WEBPACK_IMPORTED_MODULE_2__[\"equipMenu\"].currentIndex ? '<b>' : '');\n            const closeNotation = (index == _models_equipMode__WEBPACK_IMPORTED_MODULE_2__[\"equipMenu\"].currentIndex ? '</b>' : '');\n            if (player.inventory[cur][1].length < 2) {\n                return (`${openNotation}${_models_items__WEBPACK_IMPORTED_MODULE_1__[\"items\"][player.inventory[cur]].name}${closeNotation}`)\n            } else {\n                return (`${openNotation}${player.inventory[cur][1]} ${_models_items__WEBPACK_IMPORTED_MODULE_1__[\"items\"][player.inventory[cur][0]].name}${closeNotation}`)\n            }\n        });\n    } else {\n        inventory_string = [];\n    }\n\n   //console.log(`INV STRING IS ${inventory_string}`)\n\n    const markupRight = `\n    <b>Inventory</b><br>\n    ${inventory_string.join('<br>')}`\n\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].playerStats.innerHTML = markupLeft;\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].inventory.innerHTML = markupRight;\n}\n\nconst updateMiniMap = (map, zone, playerCoordinates = [999, 999]) => {\n\n   //console.log(\"update mini map called\");\n\n    const mapString = Object(_models_rooms__WEBPACK_IMPORTED_MODULE_4__[\"generateMiniMap\"])(map, zone, playerCoordinates);\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].miscView.style.visibility = \"hidden\";\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].minimap.style.visibility = \"visible\";\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].minimap.innerHTML = mapString;\n}\n\n// sword: iphone\n// atk: 55\n// matk: 100\n// def: ...\n// OFFENSIVE ELEMENTS:\n// fire: ...\n// DEFENSIVE ELEMENTS:\n// fire: ...\n\n//# sourceURL=webpack:///./src/js/views/miscView.js?");

/***/ }),

/***/ "./src/js/views/statView.js":
/*!**********************************!*\
  !*** ./src/js/views/statView.js ***!
  \**********************************/
/*! exports provided: updateStats, updateStatsCombat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateStats\", function() { return updateStats; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateStatsCombat\", function() { return updateStatsCombat; });\n/* harmony import */ var _baseView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./baseView */ \"./src/js/views/baseView.js\");\n/* harmony import */ var _models_combat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/combat */ \"./src/js/models/combat.js\");\n\n\n\nconst updateStats = player => {\n   //console.log(\"UPDATE STATS CALLED\");\n    const playerStats = player.stats;\n    const playerElOffence = player.stats.elemental.offence;\n    const playerElDefence = player.stats.elemental.defence;\n\n    const markupLeft = `\n    ${player.name}'s stats <br>\n    health: ${playerStats.current_health}/${_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].getMaxHealth(player.stats)} <br>\n    attack: ${Math.round(playerStats.atk)}<br>\n    defence: ${Math.round(playerStats.def)} <br>\n    magic attack: ${Math.round(playerStats.matk)}<br>\n    magic defense: ${Math.round(playerStats.mdef)}<br>\n    speed: ${Math.round(playerStats.speed)}<br>\n    critical chance: ${Math.round(playerStats.crit_chance * 100)}%<br>\n    critical damage: ${Math.round(playerStats.crit_damage * 100)}%<br>\n    effectiveness: ${Math.round(playerStats.effectiveness)}%<br>\n    resistance: ${Math.round(playerStats.resistance)}%<br>\n    evasion: ${Math.round(playerStats.evasion * 100)}%<br>\n    mana: ${playerStats.current_mana}/${playerStats.max_mana}<br>\n    stamina: ${playerStats.current_stamina}/${playerStats.max_stamina}<br>\n    max sp: ${playerStats.max_sp}\n    `\n\n    const markupRight = `\n    ELEMENTAL OFFENCE: <br>\n    physical: ${playerElOffence.physical}<br>\n    fire: ${playerElOffence.fire}<br>\n    water: ${playerElOffence.water}<br>\n    wind: ${playerElOffence.wind}<br>\n    earth: ${playerElOffence.earth}<br>\n    thunder: ${playerElOffence.thunder}<br>\n    light: ${playerElOffence.light} <br>\n    dark: ${playerElOffence.dark}<br><br>\n    ELEMENTAL DEFENCE:<br>\n    physical: ${playerElDefence.physical}<br>\n    fire: ${playerElDefence.fire}<br>\n    water: ${playerElDefence.water}<br>\n    wind: ${playerElDefence.wind}<br>\n    earth: ${playerElDefence.earth}<br>\n    thunder: ${playerElDefence.thunder}<br>\n    light: ${playerElDefence.light}<br>\n    dark: ${playerElDefence.dark}<br>\n    `\n\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].mainStats.innerHTML = markupLeft;\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].elementalStats.innerHTML = markupRight;\n}\n\nconst updateStatsCombat = player => {\n   //console.log (\"UPDATE STATS COMBAT CALLED\");\n    const playerElOffence = player.elemental.offence;\n    const playerElDefence = player.elemental.defence;\n\n    const elementalMods = _models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcElementBuffs(player);\n    const elModOffence = elementalMods.offence;\n    const elModDefence = elementalMods.defence;\n\n    const atk_mod = _models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"atk\", player);\n    const def_mod = _models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"def\", player);\n    const matk_mod = _models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"matk\", player);\n    const mdef_mod = _models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"mdef\", player);\n    const speed_mod = _models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"speed\", player);\n    const crit_chance_mod = _models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"crit_chance\", player);\n    const crit_damage_mod = _models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"crit_damage\", player);\n    const effectiveness_mod = _models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"effectiveness\", player);\n    const resistance_mod = _models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"resistance\", player);\n    const evasion_mod = _models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"evasion\", player);\n\n    const markupLeft = ` \n    ${player.name}'s stats <br>\n    health: ${player.health} (${Math.round((player.health / player.max_health) * 100)}%)<br>\n    attack: ${Math.round(player.atk * (atk_mod + 1))} (${Math.round(100 + atk_mod * 100)}%)<br>\n    defence: ${Math.round(player.def * (def_mod + 1))} (${Math.round(100 + def_mod * 100)}%)<br>\n    magic attack: ${Math.round(player.matk * (matk_mod + 1))} (${Math.round(100 + matk_mod * 100)}%)<br>\n    magic defense: ${Math.round(player.mdef * (mdef_mod + 1))} (${Math.round(100 + mdef_mod * 100)}%)<br>\n    speed: ${Math.round(player.speed * (speed_mod + 1))} (${Math.round(100 + speed_mod * 100)}%)<br>\n    critical chance: ${((player.crit_chance + crit_chance_mod) * 100)}% (${crit_chance_mod < 0 ? '' : '+'}${Math.round(crit_chance_mod * 100)}%)<br>\n    critical damage: ${((player.crit_damage + crit_damage_mod) * 100)}% (${crit_damage_mod < 0 ? '' : '+'}${Math.round(crit_damage_mod * 100)}%)<br>\n    effectiveness: ${((player.effectiveness + effectiveness_mod))}% (${effectiveness_mod < 0 ? '' : '+'}${Math.round(effectiveness_mod)}%)<br>\n    resistance: ${((player.resistance + resistance_mod))}% (${resistance_mod < 0 ? '' : '+'}${Math.round(resistance_mod)}%)<br>\n    evasion: ${((player.evasion + evasion_mod) * 100)}% (${evasion_mod < 0 ? '' : '+'}${Math.round(evasion_mod * 100)}%)<br>\n    mitigation: ${Math.round(_models_combat__WEBPACK_IMPORTED_MODULE_1__[\"Combat\"].calcMod(\"mitigation\", player) * 100)}%<br>\n    mana: ${player.mana}/${player.max_mana}<br>\n    stamina: ${player.stamina}/${player.max_stamina}<br>\n    sp: ${player.sp}/${player.max_sp}\n    \n    ` // result: attack: 10 (100%) [if not buffed]\n\n    const markupRight = `\n    ELEMENTAL OFFENCE: <br>\n    physical: ${playerElOffence.physical + elModOffence.physical} (${elModOffence.physical < 0 ? '' : '+'}${elModOffence.physical})<br>\n    fire: ${playerElOffence.fire + elModOffence.fire} (${elModOffence.fire < 0 ? '' : '+'}${elModOffence.fire})<br>\n    water: ${playerElOffence.water + elModOffence.water} (${elModOffence.water < 0 ? '' : '+'}${elModOffence.water})<br>\n    wind: ${playerElOffence.wind + elModOffence.wind} (${elModOffence.wind < 0 ? '' : '+'}${elModOffence.wind})<br>\n    earth: ${playerElOffence.earth + elModOffence.earth} (${elModOffence.earth < 0 ? '' : '+'}${elModOffence.earth})<br>\n    thunder: ${playerElOffence.thunder + elModOffence.thunder} (${elModOffence.thunder < 0 ? '' : '+'}${elModOffence.thunder})<br>\n    light: ${playerElOffence.light + elModOffence.light} (${elModOffence.light < 0 ? '' : '+'}${elModOffence.light})<br>\n    dark: ${playerElOffence.dark + elModOffence.dark} (${elModOffence.dark < 0 ? '' : '+'}${elModOffence.dark})<br><br>\n    ELEMENTAL DEFENCE:<br>\n    physical: ${playerElDefence.physical + elModDefence.physical} (${elModDefence.physical < 0 ? '' : '+'}${elModDefence.physical})<br>\n    fire: ${playerElDefence.fire + elModDefence.fire} (${elModDefence.fire < 0 ? '' : '+'}${elModDefence.fire})<br>\n    water: ${playerElDefence.water + elModDefence.water} (${elModDefence.water < 0 ? '' : '+'}${elModDefence.water})<br>\n    wind: ${playerElDefence.wind + elModDefence.wind} (${elModDefence.wind < 0 ? '' : '+'}${elModDefence.wind})<br>\n    earth: ${playerElDefence.earth + elModDefence.earth} (${elModDefence.earth < 0 ? '' : '+'}${elModDefence.earth})<br>\n    thunder: ${playerElDefence.thunder + elModDefence.thunder} (${elModDefence.thunder < 0 ? '' : '+'}${elModDefence.thunder})<br>\n    light: ${playerElDefence.light + elModDefence.light} (${elModDefence.light < 0 ? '' : '+'}${elModDefence.light})<br>\n    dark: ${playerElDefence.dark + elModDefence.dark} (${elModDefence.dark < 0 ? '' : '+'}${elModDefence.dark})<br>\n    ` // result: fire: 80 (-20%) [if fire was 100 and is -20% for whatever reason]\n\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].mainStats.innerHTML = markupLeft;\n    _baseView__WEBPACK_IMPORTED_MODULE_0__[\"elements\"].elementalStats.innerHTML = markupRight;\n}\n\n//# sourceURL=webpack:///./src/js/views/statView.js?");

/***/ })

/******/ });